{"remainingRequest":"/home/artur/programowanie/organiser/node_modules/babel-loader/lib/index.js!/home/artur/programowanie/organiser/node_modules/eslint-loader/index.js??ref--13-0!/home/artur/programowanie/organiser/client/src/Warehouse/GoalsService.js","dependencies":[{"path":"/home/artur/programowanie/organiser/client/src/Warehouse/GoalsService.js","mtime":1637766740708},{"path":"/home/artur/programowanie/organiser/node_modules/cache-loader/dist/cjs.js","mtime":1638016032464},{"path":"/home/artur/programowanie/organiser/node_modules/babel-loader/lib/index.js","mtime":1638016034515},{"path":"/home/artur/programowanie/organiser/node_modules/eslint-loader/index.js","mtime":1638016032640}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGFwaSBmcm9tICJAL2FwaSI7CmNvbnN0IHVybCA9ICIvZ29hbHMvIjsKCmNsYXNzIEdvYWxzU2VydmljZSB7CiAgLy9nZXQgcG9zdHMKICBzdGF0aWMgYXN5bmMgZ2V0R29hbHMoKSB7CiAgICBjb25zdCByZXMgPSBhd2FpdCBhcGkuZ2V0KHVybCk7CiAgICByZXR1cm4gcmVzLmRhdGEubWFwKGdvYWwgPT4gKHsgLi4uZ29hbCwKICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZShnb2FsLmNyZWF0ZWRBdCkKICAgIH0pKTsKICB9IC8vY3JlYXRlIGdvYWwKCgogIHN0YXRpYyBpbnNlcnRHb2FsKGdvYWwpIHsKICAgIHJldHVybiBhcGkucG9zdCh1cmwsIGdvYWwpOwogIH0gLy91cGRhdGUgZ29hbAoKCiAgc3RhdGljIHVwZGF0ZUdvYWwoZ29hbCkgewogICAgcmV0dXJuIGFwaS5wdXQoYCR7dXJsfSR7Z29hbC5faWR9YCwgZ29hbCk7CiAgfSAvL2RlbGV0ZSBnb2FsCgoKICBzdGF0aWMgZGVsZXRlR29hbChpZCkgewogICAgcmV0dXJuIGFwaS5kZWxldGUoYCR7dXJsfSR7aWR9YCk7CiAgfQoKfQoKZXhwb3J0IGRlZmF1bHQgR29hbHNTZXJ2aWNlOw=="},{"version":3,"sources":["/home/artur/programowanie/organiser/client/src/Warehouse/GoalsService.js"],"names":["api","url","GoalsService","getGoals","res","get","data","map","goal","createdAt","Date","insertGoal","post","updateGoal","put","_id","deleteGoal","id","delete"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,MAAMC,GAAG,GAAG,SAAZ;;AACA,MAAMC,YAAN,CAAmB;AACjB;AACqB,eAARC,QAAQ,GAAG;AACtB,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,GAAJ,CAAQJ,GAAR,CAAlB;AACA,WAAOG,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAcC,IAAD,KAAW,EAC7B,GAAGA,IAD0B;AAE7BC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASF,IAAI,CAACC,SAAd;AAFkB,KAAX,CAAb,CAAP;AAID,GARgB,CAUjB;;;AACiB,SAAVE,UAAU,CAACH,IAAD,EAAO;AACtB,WAAOR,GAAG,CAACY,IAAJ,CAASX,GAAT,EAAcO,IAAd,CAAP;AACD,GAbgB,CAejB;;;AACiB,SAAVK,UAAU,CAACL,IAAD,EAAO;AACtB,WAAOR,GAAG,CAACc,GAAJ,CAAS,GAAEb,GAAI,GAAEO,IAAI,CAACO,GAAI,EAA1B,EAA6BP,IAA7B,CAAP;AACD,GAlBgB,CAoBjB;;;AACiB,SAAVQ,UAAU,CAACC,EAAD,EAAK;AACpB,WAAOjB,GAAG,CAACkB,MAAJ,CAAY,GAAEjB,GAAI,GAAEgB,EAAG,EAAvB,CAAP;AACD;;AAvBgB;;AA0BnB,eAAef,YAAf","sourcesContent":["import api from \"@/api\";\n\nconst url = \"/goals/\";\nclass GoalsService {\n  //get posts\n  static async getGoals() {\n    const res = await api.get(url);\n    return res.data.map((goal) => ({\n      ...goal,\n      createdAt: new Date(goal.createdAt),\n    }));\n  }\n\n  //create goal\n  static insertGoal(goal) {\n    return api.post(url, goal);\n  }\n\n  //update goal\n  static updateGoal(goal) {\n    return api.put(`${url}${goal._id}`, goal);\n  }\n\n  //delete goal\n  static deleteGoal(id) {\n    return api.delete(`${url}${id}`);\n  }\n}\n\nexport default GoalsService;\n"]}]}