{"remainingRequest":"/home/artur/programowanie/organiser/node_modules/babel-loader/lib/index.js!/home/artur/programowanie/organiser/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/artur/programowanie/organiser/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/artur/programowanie/organiser/node_modules/vue2-timepicker/src/vue-timepicker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/artur/programowanie/organiser/node_modules/vue2-timepicker/src/vue-timepicker.vue","mtime":1638016037242},{"path":"/home/artur/programowanie/organiser/node_modules/cache-loader/dist/cjs.js","mtime":1638016032464},{"path":"/home/artur/programowanie/organiser/node_modules/babel-loader/lib/index.js","mtime":1638016034515},{"path":"/home/artur/programowanie/organiser/node_modules/cache-loader/dist/cjs.js","mtime":1638016032464},{"path":"/home/artur/programowanie/organiser/node_modules/vue-loader/lib/index.js","mtime":1638016035031}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Y29uc3QgQ09ORklHID0gewogIEhPVVJfVE9LRU5TOiBbJ0hIJywgJ0gnLCAnaGgnLCAnaCcsICdraycsICdrJ10sCiAgTUlOVVRFX1RPS0VOUzogWydtbScsICdtJ10sCiAgU0VDT05EX1RPS0VOUzogWydzcycsICdzJ10sCiAgQVBNX1RPS0VOUzogWydBJywgJ2EnXSwKICBCQVNJQ19UWVBFUzogWydob3VyJywgJ21pbnV0ZScsICdzZWNvbmQnLCAnYXBtJ10KfTsKY29uc3QgREVGQVVMVF9PUFRJT05TID0gewogIGZvcm1hdDogJ0hIOm1tJywKICBtaW51dGVJbnRlcnZhbDogMSwKICBzZWNvbmRJbnRlcnZhbDogMSwKICBob3VyUmFuZ2U6IG51bGwsCiAgbWludXRlUmFuZ2U6IG51bGwsCiAgc2Vjb25kUmFuZ2U6IG51bGwsCiAgaGlkZURpc2FibGVkSG91cnM6IGZhbHNlLAogIGhpZGVEaXNhYmxlZE1pbnV0ZXM6IGZhbHNlLAogIGhpZGVEaXNhYmxlZFNlY29uZHM6IGZhbHNlLAogIGhpZGVEaXNhYmxlZEl0ZW1zOiBmYWxzZSwKICBoaWRlRHJvcGRvd246IGZhbHNlLAogIGJsdXJEZWxheTogMzAwLAogIG1hbnVhbElucHV0VGltZW91dDogMTAwMCwKICBkcm9wT2Zmc2V0SGVpZ2h0OiAxNjAKfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdWdWVUaW1lcGlja2VyJywKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogW09iamVjdCwgU3RyaW5nXQogICAgfSwKICAgIGZvcm1hdDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBtaW51dGVJbnRlcnZhbDogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddCiAgICB9LAogICAgc2Vjb25kSW50ZXJ2YWw6IHsKICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXQogICAgfSwKICAgIGhvdXJSYW5nZTogewogICAgICB0eXBlOiBBcnJheQogICAgfSwKICAgIG1pbnV0ZVJhbmdlOiB7CiAgICAgIHR5cGU6IEFycmF5CiAgICB9LAogICAgc2Vjb25kUmFuZ2U6IHsKICAgICAgdHlwZTogQXJyYXkKICAgIH0sCiAgICBoaWRlRGlzYWJsZWRIb3VyczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGhpZGVEaXNhYmxlZE1pbnV0ZXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBoaWRlRGlzYWJsZWRTZWNvbmRzOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgaGlkZURpc2FibGVkSXRlbXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBoaWRlQ2xlYXJCdXR0b246IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGNsb3NlT25Db21wbGV0ZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGlkOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIG5hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgaW5wdXRDbGFzczogewogICAgICB0eXBlOiBbU3RyaW5nLCBPYmplY3QsIEFycmF5XQogICAgfSwKICAgIHBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIHRhYmluZGV4OiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICBpbnB1dFdpZHRoOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIGF1dG9jb21wbGV0ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdvZmYnCiAgICB9LAogICAgaG91ckxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIG1pbnV0ZUxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIHNlY29uZExhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIGFwbUxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIGFtVGV4dDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBwbVRleHQ6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgYmx1ckRlbGF5OiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10KICAgIH0sCiAgICBhZHZhbmNlZEtleWJvYXJkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgbGF6eTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGF1dG9TY3JvbGw6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBkcm9wRGlyZWN0aW9uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2Rvd24nCiAgICB9LAogICAgZHJvcE9mZnNldEhlaWdodDogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddCiAgICB9LAogICAgY29udGFpbmVySWQ6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgYXBwZW5kVG9Cb2R5OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgbWFudWFsSW5wdXQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBtYW51YWxJbnB1dFRpbWVvdXQ6IHsKICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXQogICAgfSwKICAgIGhpZGVEcm9wZG93bjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGZpeGVkRHJvcGRvd25CdXR0b246IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBkZWJ1Z01vZGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGltZVZhbHVlOiB7fSwKICAgICAgaG91cnM6IFtdLAogICAgICBtaW51dGVzOiBbXSwKICAgICAgc2Vjb25kczogW10sCiAgICAgIGFwbXM6IFtdLAogICAgICBpc0FjdGl2ZTogZmFsc2UsCiAgICAgIHNob3dEcm9wZG93bjogZmFsc2UsCiAgICAgIGlzRm9jdXNpbmc6IGZhbHNlLAogICAgICBkZWJvdW5jZVRpbWVyOiB1bmRlZmluZWQsCiAgICAgIGhvdXJUeXBlOiAnSEgnLAogICAgICBtaW51dGVUeXBlOiAnbW0nLAogICAgICBzZWNvbmRUeXBlOiAnJywKICAgICAgYXBtVHlwZTogJycsCiAgICAgIGhvdXI6ICcnLAogICAgICBtaW51dGU6ICcnLAogICAgICBzZWNvbmQ6ICcnLAogICAgICBhcG06ICcnLAogICAgICBmdWxsVmFsdWVzOiB1bmRlZmluZWQsCiAgICAgIGJha0Rpc3BsYXlUaW1lOiB1bmRlZmluZWQsCiAgICAgIGRvQ2xlYXJBcG1DaGVja2luZzogZmFsc2UsCiAgICAgIHNlbGVjdGlvblRpbWVyOiB1bmRlZmluZWQsCiAgICAgIGtiSW5wdXRUaW1lcjogdW5kZWZpbmVkLAogICAgICBrYklucHV0TG9nOiAnJywKICAgICAgYmFrQ3VycmVudFBvczogdW5kZWZpbmVkLAogICAgICBmb3JjZURyb3BPblRvcDogZmFsc2UKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIG9wdHMoKSB7CiAgICAgIGNvbnN0IG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX09QVElPTlMpOwoKICAgICAgaWYgKHRoaXMuZm9ybWF0ICYmIHRoaXMuZm9ybWF0Lmxlbmd0aCkgewogICAgICAgIG9wdGlvbnMuZm9ybWF0ID0gU3RyaW5nKHRoaXMuZm9ybWF0KTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuaXNOdW1iZXIodGhpcy5taW51dGVJbnRlcnZhbCkpIHsKICAgICAgICBvcHRpb25zLm1pbnV0ZUludGVydmFsID0gK3RoaXMubWludXRlSW50ZXJ2YWw7CiAgICAgIH0gLy8gbWludXRlSW50ZXJ2YWwgZmFpbHNhZmUKCgogICAgICBpZiAoIW9wdGlvbnMubWludXRlSW50ZXJ2YWwgfHwgb3B0aW9ucy5taW51dGVJbnRlcnZhbCA8IDEgfHwgb3B0aW9ucy5taW51dGVJbnRlcnZhbCA+IDYwKSB7CiAgICAgICAgaWYgKHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgICBpZiAob3B0aW9ucy5taW51dGVJbnRlcnZhbCA+IDYwKSB7CiAgICAgICAgICAgIHRoaXMuZGVidWdMb2coYCJtaW51dGUtaW50ZXJ2YWwiIHNob3VsZCBiZSBsZXNzIHRoYW4gNjAuIEN1cnJlbnQgdmFsdWUgaXMgJHt0aGlzLm1pbnV0ZUludGVydmFsfWApOwogICAgICAgICAgfSBlbHNlIGlmIChvcHRpb25zLm1pbnV0ZUludGVydmFsID09PSAwIHx8IG9wdGlvbnMubWludXRlSW50ZXJ2YWwgPCAxKSB7CiAgICAgICAgICAgIHRoaXMuZGVidWdMb2coYCJtaW51dGUtaW50ZXJ2YWwiIHNob3VsZCBiZSBOTyBsZXNzIHRoYW4gMS4gQ3VycmVudCB2YWx1ZSBpcyAke3RoaXMubWludXRlSW50ZXJ2YWx9YCk7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBpZiAob3B0aW9ucy5taW51dGVJbnRlcnZhbCA9PT0gMCkgewogICAgICAgICAgb3B0aW9ucy5taW51dGVJbnRlcnZhbCA9IDYwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBvcHRpb25zLm1pbnV0ZUludGVydmFsID0gMTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmlzTnVtYmVyKHRoaXMuc2Vjb25kSW50ZXJ2YWwpKSB7CiAgICAgICAgb3B0aW9ucy5zZWNvbmRJbnRlcnZhbCA9ICt0aGlzLnNlY29uZEludGVydmFsOwogICAgICB9IC8vIHNlY29uZEludGVydmFsIGZhaWxzYWZlCgoKICAgICAgaWYgKCFvcHRpb25zLnNlY29uZEludGVydmFsIHx8IG9wdGlvbnMuc2Vjb25kSW50ZXJ2YWwgPCAxIHx8IG9wdGlvbnMuc2Vjb25kSW50ZXJ2YWwgPiA2MCkgewogICAgICAgIGlmICh0aGlzLmRlYnVnTW9kZSkgewogICAgICAgICAgaWYgKG9wdGlvbnMuc2Vjb25kSW50ZXJ2YWwgPiA2MCkgewogICAgICAgICAgICB0aGlzLmRlYnVnTG9nKGAic2Vjb25kLWludGVydmFsIiBzaG91bGQgYmUgbGVzcyB0aGFuIDYwLiBDdXJyZW50IHZhbHVlIGlzICR7dGhpcy5zZWNvbmRJbnRlcnZhbH1gKTsKICAgICAgICAgIH0gZWxzZSBpZiAob3B0aW9ucy5zZWNvbmRJbnRlcnZhbCA9PT0gMCB8fCBvcHRpb25zLnNlY29uZEludGVydmFsIDwgMSkgewogICAgICAgICAgICB0aGlzLmRlYnVnTG9nKGAic2Vjb25kLWludGVydmFsIiBzaG91bGQgYmUgTk8gbGVzcyB0aGFuIDEuIEN1cnJlbnQgdmFsdWUgaXMgJHt0aGlzLnNlY29uZEludGVydmFsfWApOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKG9wdGlvbnMuc2Vjb25kSW50ZXJ2YWwgPT09IDApIHsKICAgICAgICAgIG9wdGlvbnMuc2Vjb25kSW50ZXJ2YWwgPSA2MDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgb3B0aW9ucy5zZWNvbmRJbnRlcnZhbCA9IDE7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAodGhpcy5ob3VyUmFuZ2UgJiYgQXJyYXkuaXNBcnJheSh0aGlzLmhvdXJSYW5nZSkpIHsKICAgICAgICBvcHRpb25zLmhvdXJSYW5nZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5ob3VyUmFuZ2UpKTsKCiAgICAgICAgaWYgKCF0aGlzLmhvdXJSYW5nZS5sZW5ndGggJiYgdGhpcy5kZWJ1Z01vZGUpIHsKICAgICAgICAgIHRoaXMuZGVidWdMb2coJ1RoZSAiaG91ci1yYW5nZSIgYXJyYXkgaXMgZW1wdHkgKGxlbmd0aCA9PT0gMCknKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLm1pbnV0ZVJhbmdlICYmIEFycmF5LmlzQXJyYXkodGhpcy5taW51dGVSYW5nZSkpIHsKICAgICAgICBvcHRpb25zLm1pbnV0ZVJhbmdlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLm1pbnV0ZVJhbmdlKSk7CgogICAgICAgIGlmICghdGhpcy5taW51dGVSYW5nZS5sZW5ndGggJiYgdGhpcy5kZWJ1Z01vZGUpIHsKICAgICAgICAgIHRoaXMuZGVidWdMb2coJ1RoZSAibWludXRlLXJhbmdlIiBhcnJheSBpcyBlbXB0eSAobGVuZ3RoID09PSAwKScpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHRoaXMuc2Vjb25kUmFuZ2UgJiYgQXJyYXkuaXNBcnJheSh0aGlzLnNlY29uZFJhbmdlKSkgewogICAgICAgIG9wdGlvbnMuc2Vjb25kUmFuZ2UgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc2Vjb25kUmFuZ2UpKTsKCiAgICAgICAgaWYgKCF0aGlzLnNlY29uZFJhbmdlLmxlbmd0aCAmJiB0aGlzLmRlYnVnTW9kZSkgewogICAgICAgICAgdGhpcy5kZWJ1Z0xvZygnVGhlICJzZWNvbmQtcmFuZ2UiIGFycmF5IGlzIGVtcHR5IChsZW5ndGggPT09IDApJyk7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAodGhpcy5oaWRlRGlzYWJsZWRJdGVtcykgewogICAgICAgIG9wdGlvbnMuaGlkZURpc2FibGVkSXRlbXMgPSB0cnVlOwogICAgICB9CgogICAgICBpZiAodGhpcy5oaWRlRGlzYWJsZWRIb3VycyB8fCB0aGlzLmhpZGVEaXNhYmxlZEl0ZW1zKSB7CiAgICAgICAgb3B0aW9ucy5oaWRlRGlzYWJsZWRIb3VycyA9IHRydWU7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmhpZGVEaXNhYmxlZE1pbnV0ZXMgfHwgdGhpcy5oaWRlRGlzYWJsZWRJdGVtcykgewogICAgICAgIG9wdGlvbnMuaGlkZURpc2FibGVkTWludXRlcyA9IHRydWU7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmhpZGVEaXNhYmxlZFNlY29uZHMgfHwgdGhpcy5oaWRlRGlzYWJsZWRJdGVtcykgewogICAgICAgIG9wdGlvbnMuaGlkZURpc2FibGVkU2Vjb25kcyA9IHRydWU7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmhpZGVEcm9wZG93bikgewogICAgICAgIGlmICh0aGlzLm1hbnVhbElucHV0KSB7CiAgICAgICAgICBvcHRpb25zLmhpZGVEcm9wZG93biA9IHRydWU7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmRlYnVnTW9kZSkgewogICAgICAgICAgdGhpcy5kZWJ1Z0xvZygnImhpZGUtZHJvcGRvd24iIG9ubHkgd29ya3Mgd2l0aCAibWFudWFsLWlucHV0IiBtb2RlJyk7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAodGhpcy5ibHVyRGVsYXkgJiYgK3RoaXMuYmx1ckRlbGF5ID4gMCkgewogICAgICAgIG9wdGlvbnMuYmx1ckRlbGF5ID0gK3RoaXMuYmx1ckRlbGF5OwogICAgICB9CgogICAgICBpZiAodGhpcy5tYW51YWxJbnB1dFRpbWVvdXQgJiYgK3RoaXMubWFudWFsSW5wdXRUaW1lb3V0ID4gMCkgewogICAgICAgIG9wdGlvbnMubWFudWFsSW5wdXRUaW1lb3V0ID0gK3RoaXMubWFudWFsSW5wdXRUaW1lb3V0OwogICAgICB9CgogICAgICBpZiAodGhpcy5kcm9wT2Zmc2V0SGVpZ2h0ICYmICt0aGlzLmRyb3BPZmZzZXRIZWlnaHQgPiAwKSB7CiAgICAgICAgb3B0aW9ucy5kcm9wT2Zmc2V0SGVpZ2h0ID0gK3RoaXMuZHJvcE9mZnNldEhlaWdodDsKICAgICAgfQoKICAgICAgcmV0dXJuIG9wdGlvbnM7CiAgICB9LAoKICAgIHVzZVN0cmluZ1ZhbHVlKCkgewogICAgICByZXR1cm4gdHlwZW9mIHRoaXMudmFsdWUgPT09ICdzdHJpbmcnOwogICAgfSwKCiAgICBmb3JtYXRTdHJpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLm9wdHMuZm9ybWF0IHx8IERFRkFVTFRfT1BUSU9OUy5mb3JtYXQ7CiAgICB9LAoKICAgIGluVXNlKCkgewogICAgICBjb25zdCB0eXBlc0luVXNlID0gQ09ORklHLkJBU0lDX1RZUEVTLmZpbHRlcih0eXBlID0+IHRoaXMuZ2V0VG9rZW5CeVR5cGUodHlwZSkpOyAvLyBTb3J0IHR5cGVzIGFuZCB0b2tlbnMgYnkgdGhlaXIgc2VxdWVuY2UgaW4gdGhlICJmb3JtYXQiIHN0cmluZwoKICAgICAgdHlwZXNJblVzZS5zb3J0KChsLCByKSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0U3RyaW5nLmluZGV4T2YodGhpcy5nZXRUb2tlbkJ5VHlwZShsKSB8fCBudWxsKSAtIHRoaXMuZm9ybWF0U3RyaW5nLmluZGV4T2YodGhpcy5nZXRUb2tlbkJ5VHlwZShyKSB8fCBudWxsKTsKICAgICAgfSk7CiAgICAgIGNvbnN0IHRva2Vuc0luVXNlID0gdHlwZXNJblVzZS5tYXAodHlwZSA9PiB0aGlzLmdldFRva2VuQnlUeXBlKHR5cGUpKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBob3VyOiAhIXRoaXMuaG91clR5cGUsCiAgICAgICAgbWludXRlOiAhIXRoaXMubWludXRlVHlwZSwKICAgICAgICBzZWNvbmQ6ICEhdGhpcy5zZWNvbmRUeXBlLAogICAgICAgIGFwbTogISF0aGlzLmFwbVR5cGUsCiAgICAgICAgdHlwZXM6IHR5cGVzSW5Vc2UgfHwgW10sCiAgICAgICAgdG9rZW5zOiB0b2tlbnNJblVzZSB8fCBbXQogICAgICB9OwogICAgfSwKCiAgICBkaXNwbGF5VGltZSgpIHsKICAgICAgbGV0IGZvcm1hdFN0cmluZyA9IFN0cmluZyh0aGlzLmZvcm1hdFN0cmluZyk7CgogICAgICBpZiAodGhpcy5ob3VyKSB7CiAgICAgICAgZm9ybWF0U3RyaW5nID0gZm9ybWF0U3RyaW5nLnJlcGxhY2UobmV3IFJlZ0V4cCh0aGlzLmhvdXJUeXBlLCAnZycpLCB0aGlzLmhvdXIpOwogICAgICB9CgogICAgICBpZiAodGhpcy5taW51dGUpIHsKICAgICAgICBmb3JtYXRTdHJpbmcgPSBmb3JtYXRTdHJpbmcucmVwbGFjZShuZXcgUmVnRXhwKHRoaXMubWludXRlVHlwZSwgJ2cnKSwgdGhpcy5taW51dGUpOwogICAgICB9CgogICAgICBpZiAodGhpcy5zZWNvbmQgJiYgdGhpcy5zZWNvbmRUeXBlKSB7CiAgICAgICAgZm9ybWF0U3RyaW5nID0gZm9ybWF0U3RyaW5nLnJlcGxhY2UobmV3IFJlZ0V4cCh0aGlzLnNlY29uZFR5cGUsICdnJyksIHRoaXMuc2Vjb25kKTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuYXBtICYmIHRoaXMuYXBtVHlwZSkgewogICAgICAgIGZvcm1hdFN0cmluZyA9IGZvcm1hdFN0cmluZy5yZXBsYWNlKG5ldyBSZWdFeHAodGhpcy5hcG1UeXBlLCAnZycpLCB0aGlzLmFwbSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmb3JtYXRTdHJpbmc7CiAgICB9LAoKICAgIGN1c3RvbURpc3BsYXlUaW1lKCkgewogICAgICBpZiAoIXRoaXMuYW1UZXh0ICYmICF0aGlzLnBtVGV4dCkgewogICAgICAgIHJldHVybiB0aGlzLmRpc3BsYXlUaW1lOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5kaXNwbGF5VGltZS5yZXBsYWNlKG5ldyBSZWdFeHAodGhpcy5hcG0sICdnJyksIHRoaXMuYXBtRGlzcGxheVRleHQodGhpcy5hcG0pKTsKICAgIH0sCgogICAgaW5wdXRJc0VtcHR5KCkgewogICAgICByZXR1cm4gdGhpcy5mb3JtYXRTdHJpbmcgPT09IHRoaXMuZGlzcGxheVRpbWU7CiAgICB9LAoKICAgIGFsbFZhbHVlU2VsZWN0ZWQoKSB7CiAgICAgIGlmICh0aGlzLmluVXNlLmhvdXIgJiYgIXRoaXMuaG91ciB8fCB0aGlzLmluVXNlLm1pbnV0ZSAmJiAhdGhpcy5taW51dGUgfHwgdGhpcy5pblVzZS5zZWNvbmQgJiYgIXRoaXMuc2Vjb25kIHx8IHRoaXMuaW5Vc2UuYXBtICYmICF0aGlzLmFwbSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRydWU7CiAgICB9LAoKICAgIGNvbHVtbnNTZXF1ZW5jZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuaW5Vc2UudHlwZXMubWFwKHR5cGUgPT4gdHlwZSkgfHwgW107CiAgICB9LAoKICAgIHNob3dDbGVhckJ0bigpIHsKICAgICAgaWYgKHRoaXMuaGlkZUNsZWFyQnV0dG9uIHx8IHRoaXMuZGlzYWJsZWQpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiAhdGhpcy5pbnB1dElzRW1wdHk7CiAgICB9LAoKICAgIHNob3dEcm9wZG93bkJ0bigpIHsKICAgICAgaWYgKHRoaXMuZml4ZWREcm9wZG93bkJ1dHRvbikgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICBpZiAodGhpcy5vcHRzLmhpZGVEcm9wZG93biAmJiB0aGlzLmlzQWN0aXZlICYmICF0aGlzLnNob3dEcm9wZG93bikgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAoKICAgIGJhc2VPbjEySG91cnMoKSB7CiAgICAgIHJldHVybiB0aGlzLmhvdXJUeXBlID09PSAnaCcgfHwgdGhpcy5ob3VyVHlwZSA9PT0gJ2hoJzsKICAgIH0sCgogICAgaG91clJhbmdlSW4yNEhyRm9ybWF0KCkgewogICAgICBpZiAoIXRoaXMuaG91clR5cGUgfHwgIXRoaXMub3B0cy5ob3VyUmFuZ2UpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmICghdGhpcy5vcHRzLmhvdXJSYW5nZS5sZW5ndGgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KCiAgICAgIGNvbnN0IHJhbmdlID0gW107CiAgICAgIHRoaXMub3B0cy5ob3VyUmFuZ2UuZm9yRWFjaCh2YWx1ZSA9PiB7CiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQXJyYXkpIHsKICAgICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPiAyICYmIHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgICAgIHRoaXMuZGVidWdMb2coYE5lc3RlZCBhcnJheSB3aXRoaW4gImhvdXItcmFuZ2UiIG11c3QgY29udGFpbiBubyBtb3JlIHRoYW4gdHdvIGl0ZW1zLiBPbmx5IHRoZSBmaXJzdCB0d28gaXRlbXMgb2YgJHtKU09OLnN0cmluZ2lmeSh2YWx1ZSl9IHdpbGwgYmUgdGFrZW4gaW50byBhY2NvdW50LmApOwogICAgICAgICAgfQoKICAgICAgICAgIGxldCBzdGFydCA9IHZhbHVlWzBdOwogICAgICAgICAgbGV0IGVuZCA9IHZhbHVlWzFdIHx8IHZhbHVlWzBdOwoKICAgICAgICAgIGlmICh0aGlzLmlzMTJoUmFuZ2Uoc3RhcnQpKSB7CiAgICAgICAgICAgIHN0YXJ0ID0gdGhpcy50cmFuc2xhdGUxMmhSYW5nZShzdGFydCk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHRoaXMuaXMxMmhSYW5nZShlbmQpKSB7CiAgICAgICAgICAgIGVuZCA9IHRoaXMudHJhbnNsYXRlMTJoUmFuZ2UoZW5kKTsKICAgICAgICAgIH0KCiAgICAgICAgICBmb3IgKGxldCBpID0gK3N0YXJ0OyBpIDw9ICtlbmQ7IGkrKykgewogICAgICAgICAgICBpZiAoaSA8IDAgfHwgaSA+IDI0KSB7CiAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghcmFuZ2UuaW5jbHVkZXMoaSkpIHsKICAgICAgICAgICAgICByYW5nZS5wdXNoKGkpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmICh0aGlzLmlzMTJoUmFuZ2UodmFsdWUpKSB7CiAgICAgICAgICAgIHZhbHVlID0gdGhpcy50cmFuc2xhdGUxMmhSYW5nZSh2YWx1ZSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YWx1ZSA9ICt2YWx1ZTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAodmFsdWUgPCAwIHx8IHZhbHVlID4gMjQpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQoKICAgICAgICAgIGlmICghcmFuZ2UuaW5jbHVkZXModmFsdWUpKSB7CiAgICAgICAgICAgIHJhbmdlLnB1c2godmFsdWUpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJhbmdlLnNvcnQoKGwsIHIpID0+IHsKICAgICAgICByZXR1cm4gbCAtIHI7CiAgICAgIH0pOwogICAgICByZXR1cm4gcmFuZ2U7CiAgICB9LAoKICAgIHJlc3RyaWN0ZWRIb3VyUmFuZ2UoKSB7CiAgICAgIC8vIE5vIHJlc3RyaWN0aW9uCiAgICAgIGlmICghdGhpcy5ob3VyUmFuZ2VJbjI0SHJGb3JtYXQpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0gLy8gMTItSG91cgoKCiAgICAgIGlmICh0aGlzLmJhc2VPbjEySG91cnMpIHsKICAgICAgICBjb25zdCByYW5nZSA9IHRoaXMuaG91clJhbmdlSW4yNEhyRm9ybWF0Lm1hcCh2YWx1ZSA9PiB7CiAgICAgICAgICBpZiAodmFsdWUgPT09IDEyKSB7CiAgICAgICAgICAgIHJldHVybiAnMTJwJzsKICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPT09IDI0IHx8IHZhbHVlID09PSAwKSB7CiAgICAgICAgICAgIHJldHVybiAnMTJhJzsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gdmFsdWUgPiAxMiA/IGAke3ZhbHVlICUgMTJ9cGAgOiBgJHt2YWx1ZX1hYDsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gcmFuZ2U7CiAgICAgIH0gLy8gMjQtSG91cgoKCiAgICAgIHJldHVybiB0aGlzLmhvdXJSYW5nZUluMjRIckZvcm1hdDsKICAgIH0sCgogICAgdmFsaWRIb3Vyc0xpc3QoKSB7CiAgICAgIGlmICghdGhpcy5tYW51YWxJbnB1dCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMucmVzdHJpY3RlZEhvdXJSYW5nZSkgewogICAgICAgIGxldCBsaXN0ID0gW107CgogICAgICAgIGlmICh0aGlzLmJhc2VPbjEySG91cnMpIHsKICAgICAgICAgIGxpc3QgPSB0aGlzLnJlc3RyaWN0ZWRIb3VyUmFuZ2UubWFwKGhyID0+IHsKICAgICAgICAgICAgY29uc3QgbCA9IGhyLnN1YnN0cigwLCBoci5sZW5ndGggLSAxKTsKICAgICAgICAgICAgY29uc3QgciA9IGhyLnN1YnN0cigtMSk7CiAgICAgICAgICAgIHJldHVybiBgJHt0aGlzLmZvcm1hdFZhbHVlKHRoaXMuaG91clR5cGUsIGwpfSR7cn1gOwogICAgICAgICAgfSk7CiAgICAgICAgICBjb25zdCBhbTEySW5kZXggPSBsaXN0LmluZGV4T2YoJzEyYScpOwoKICAgICAgICAgIGlmIChhbTEySW5kZXggPiAwKSB7CiAgICAgICAgICAgIC8vIE1ha2UgJzEyYScgdGhlIGZpcnN0IGl0ZW0gaW4gaC9oaAogICAgICAgICAgICBsaXN0LnVuc2hpZnQobGlzdC5zcGxpY2UoYW0xMkluZGV4LCAxKVswXSk7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIGxpc3Q7CiAgICAgICAgfQoKICAgICAgICBsaXN0ID0gdGhpcy5yZXN0cmljdGVkSG91clJhbmdlLm1hcChociA9PiB7CiAgICAgICAgICByZXR1cm4gdGhpcy5mb3JtYXRWYWx1ZSh0aGlzLmhvdXJUeXBlLCBocik7CiAgICAgICAgfSk7CgogICAgICAgIGlmIChsaXN0Lmxlbmd0aCA+IDEgJiYgbGlzdFswXSAmJiBsaXN0WzBdID09PSAnMjQnKSB7CiAgICAgICAgICAvLyBNYWtlICcyNCcgdGhlIGxhc3QgaXRlbSBpbiBrL2trCiAgICAgICAgICBsaXN0LnB1c2gobGlzdC5zaGlmdCgpKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBsaXN0OwogICAgICB9CgogICAgICBpZiAodGhpcy5iYXNlT24xMkhvdXJzKSB7CiAgICAgICAgcmV0dXJuIFtdLmNvbmNhdChbXSwgdGhpcy5ob3Vycy5tYXAoaHIgPT4gYCR7aHJ9YWApLCB0aGlzLmhvdXJzLm1hcChociA9PiBgJHtocn1wYCkpOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5ob3VyczsKICAgIH0sCgogICAgaGFzKCkgewogICAgICBjb25zdCByZXN1bHQgPSB7CiAgICAgICAgY3VzdG9tQXBtVGV4dDogZmFsc2UKICAgICAgfTsKICAgICAgY29uc3QgYXBtRW5hYmxlZCA9ICEhdGhpcy5hcG1UeXBlOwoKICAgICAgaWYgKGFwbUVuYWJsZWQgJiYgdGhpcy5ob3VyUmFuZ2VJbjI0SHJGb3JtYXQgJiYgdGhpcy5ob3VyUmFuZ2VJbjI0SHJGb3JtYXQubGVuZ3RoKSB7CiAgICAgICAgY29uc3QgcmFuZ2UgPSBbXS5jb25jYXQoW10sIHRoaXMuaG91clJhbmdlSW4yNEhyRm9ybWF0KTsKICAgICAgICByZXN1bHQuYW0gPSByYW5nZS5zb21lKHZhbHVlID0+IHZhbHVlIDwgMTIgfHwgdmFsdWUgPT09IDI0KTsKICAgICAgICByZXN1bHQucG0gPSByYW5nZS5zb21lKHZhbHVlID0+IHZhbHVlID49IDEyICYmIHZhbHVlIDwgMjQpOwogICAgICB9IGVsc2UgewogICAgICAgIHJlc3VsdC5hbSA9IGFwbUVuYWJsZWQ7CiAgICAgICAgcmVzdWx0LnBtID0gYXBtRW5hYmxlZDsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuYW1UZXh0ICYmIHRoaXMuYW1UZXh0Lmxlbmd0aCB8fCB0aGlzLnBtVGV4dCAmJiB0aGlzLnBtVGV4dC5sZW5ndGgpIHsKICAgICAgICByZXN1bHQuY3VzdG9tQXBtVGV4dCA9IHRydWU7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9LAoKICAgIG1pbnV0ZVJhbmdlTGlzdCgpIHsKICAgICAgaWYgKCF0aGlzLm1pbnV0ZVR5cGUgfHwgIXRoaXMub3B0cy5taW51dGVSYW5nZSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgaWYgKCF0aGlzLm9wdHMubWludXRlUmFuZ2UubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5yZW5kZXJSYW5nZUxpc3QodGhpcy5vcHRzLm1pbnV0ZVJhbmdlLCAnbWludXRlJyk7CiAgICB9LAoKICAgIHNlY29uZFJhbmdlTGlzdCgpIHsKICAgICAgaWYgKCF0aGlzLnNlY29uZFR5cGUgfHwgIXRoaXMub3B0cy5zZWNvbmRSYW5nZSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgaWYgKCF0aGlzLm9wdHMuc2Vjb25kUmFuZ2UubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5yZW5kZXJSYW5nZUxpc3QodGhpcy5vcHRzLnNlY29uZFJhbmdlLCAnc2Vjb25kJyk7CiAgICB9LAoKICAgIGhvdXJMYWJlbFRleHQoKSB7CiAgICAgIHJldHVybiB0aGlzLmhvdXJMYWJlbCB8fCB0aGlzLmhvdXJUeXBlOwogICAgfSwKCiAgICBtaW51dGVMYWJlbFRleHQoKSB7CiAgICAgIHJldHVybiB0aGlzLm1pbnV0ZUxhYmVsIHx8IHRoaXMubWludXRlVHlwZTsKICAgIH0sCgogICAgc2Vjb25kTGFiZWxUZXh0KCkgewogICAgICByZXR1cm4gdGhpcy5zZWNvbmRMYWJlbCB8fCB0aGlzLnNlY29uZFR5cGU7CiAgICB9LAoKICAgIGFwbUxhYmVsVGV4dCgpIHsKICAgICAgcmV0dXJuIHRoaXMuYXBtTGFiZWwgfHwgdGhpcy5hcG1UeXBlOwogICAgfSwKCiAgICBpbnB1dFdpZHRoU3R5bGUoKSB7CiAgICAgIGlmICghdGhpcy5pbnB1dFdpZHRoIHx8ICF0aGlzLmlucHV0V2lkdGgubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIHdpZHRoOiB0aGlzLmlucHV0V2lkdGgKICAgICAgfTsKICAgIH0sCgogICAgdG9rZW5SZWdleEJhc2UoKSB7CiAgICAgIHJldHVybiB0aGlzLmluVXNlLnRva2Vucy5qb2luKCd8Jyk7CiAgICB9LAoKICAgIHRva2VuQ2h1bmtzKCkgewogICAgICBpZiAoIXRoaXMubWFudWFsSW5wdXQgJiYgIXRoaXMudXNlU3RyaW5nVmFsdWUpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIGNvbnN0IGZvcm1hdFN0cmluZyA9IFN0cmluZyh0aGlzLmZvcm1hdFN0cmluZyk7CiAgICAgIGNvbnN0IHRva2Vuc1JlZ3hTdHIgPSBgKCR7dGhpcy50b2tlblJlZ2V4QmFzZX0pKz9gOwogICAgICBjb25zdCB0b2tlbnNNYXRjaEFsbCA9IHRoaXMuZ2V0TWF0Y2hBbGxCeVJlZ2V4KGZvcm1hdFN0cmluZywgdG9rZW5zUmVneFN0cik7CiAgICAgIGNvbnN0IHRva2VuQ2h1bmtzID0gW107CgogICAgICBmb3IgKGxldCB0a01hdGNoIG9mIHRva2Vuc01hdGNoQWxsKSB7CiAgICAgICAgY29uc3QgcmF3VG9rZW4gPSB0a01hdGNoWzBdOwogICAgICAgIGNvbnN0IHRva2VuTWF0Y2hJdGVtID0gewogICAgICAgICAgaW5kZXg6IHRrTWF0Y2guaW5kZXgsCiAgICAgICAgICB0b2tlbjogcmF3VG9rZW4sCiAgICAgICAgICB0eXBlOiB0aGlzLmdldFRva2VuVHlwZShyYXdUb2tlbiksCiAgICAgICAgICBuZWVkc0NhbGlicmF0ZTogcmF3VG9rZW4ubGVuZ3RoIDwgMiwKICAgICAgICAgIGxlbjogKHJhd1Rva2VuIHx8ICcnKS5sZW5ndGgKICAgICAgICB9OwogICAgICAgIHRva2VuQ2h1bmtzLnB1c2godG9rZW5NYXRjaEl0ZW0pOwogICAgICB9CgogICAgICByZXR1cm4gdG9rZW5DaHVua3M7CiAgICB9LAoKICAgIG5lZWRzUG9zQ2FsaWJyYXRlKCkgewogICAgICBpZiAoIXRoaXMubWFudWFsSW5wdXQpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLnRva2VuQ2h1bmtzLnNvbWUoY2hrID0+IGNoay5uZWVkc0NhbGlicmF0ZSk7CiAgICB9LAoKICAgIHRva2VuQ2h1bmtzUG9zKCkgewogICAgICBpZiAoIXRoaXMubWFudWFsSW5wdXQpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmICghdGhpcy5uZWVkc1Bvc0NhbGlicmF0ZSkgewogICAgICAgIHJldHVybiB0aGlzLnRva2VuQ2h1bmtzLm1hcChjaGsgPT4gewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdG9rZW46IGNoay50b2tlbiwKICAgICAgICAgICAgdHlwZTogY2hrLnR5cGUsCiAgICAgICAgICAgIHN0YXJ0OiBjaGsuaW5kZXgsCiAgICAgICAgICAgIGVuZDogY2hrLmluZGV4ICsgY2hrLmxlbgogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgY29uc3QgbGlzdCA9IFtdOwogICAgICBsZXQgY2FsaWJyYXRlTGVuID0gMDsKICAgICAgdGhpcy50b2tlbkNodW5rcy5mb3JFYWNoKGNoayA9PiB7CiAgICAgICAgbGV0IGNodW5rQ3VycmVudExlbjsgLy8gQWRqdXN0IGZvciBjdXN0b21pemVkIEFNL1BNIHRleHQKCiAgICAgICAgaWYgKGNoay50eXBlID09PSAnYXBtJyAmJiB0aGlzLmhhcy5jdXN0b21BcG1UZXh0KSB7CiAgICAgICAgICBpZiAodGhpcy5hcG0gJiYgdGhpcy5hcG0ubGVuZ3RoKSB7CiAgICAgICAgICAgIGNvbnN0IGN1c3RvbUFwbVRleHQgPSB0aGlzLmFwbS50b0xvd2VyQ2FzZSgpID09PSAnYW0nID8gdGhpcy5hbVRleHQgOiB0aGlzLnBtVGV4dDsKICAgICAgICAgICAgY2h1bmtDdXJyZW50TGVuID0gY3VzdG9tQXBtVGV4dCAmJiBjdXN0b21BcG1UZXh0Lmxlbmd0aCA/IGN1c3RvbUFwbVRleHQubGVuZ3RoIDogY2hrLmxlbjsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNodW5rQ3VycmVudExlbiA9IGNoay5sZW47CiAgICAgICAgICB9IC8vIE90aGVycwoKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY2h1bmtDdXJyZW50TGVuID0gdGhpc1tjaGsudHlwZV0gJiYgdGhpc1tjaGsudHlwZV0ubGVuZ3RoID8gdGhpc1tjaGsudHlwZV0ubGVuZ3RoIDogY2hrLmxlbjsKICAgICAgICB9CgogICAgICAgIGxpc3QucHVzaCh7CiAgICAgICAgICB0b2tlbjogY2hrLnRva2VuLAogICAgICAgICAgdHlwZTogY2hrLnR5cGUsCiAgICAgICAgICBzdGFydDogY2hrLmluZGV4ICsgY2FsaWJyYXRlTGVuLAogICAgICAgICAgZW5kOiBjaGsuaW5kZXggKyBjYWxpYnJhdGVMZW4gKyBjaHVua0N1cnJlbnRMZW4KICAgICAgICB9KTsKCiAgICAgICAgaWYgKGNoay5uZWVkc0NhbGlicmF0ZSAmJiBjaHVua0N1cnJlbnRMZW4gPiBjaGsubGVuKSB7CiAgICAgICAgICBjYWxpYnJhdGVMZW4gKz0gY2h1bmtDdXJyZW50TGVuIC0gY2hrLmxlbjsKICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gbGlzdDsKICAgIH0sCgogICAgaW52YWxpZFZhbHVlcygpIHsKICAgICAgaWYgKHRoaXMuaW5wdXRJc0VtcHR5KSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CgogICAgICBpZiAoIXRoaXMucmVzdHJpY3RlZEhvdXJSYW5nZSAmJiAhdGhpcy5taW51dGVSYW5nZUxpc3QgJiYgIXRoaXMuc2Vjb25kUmFuZ2VMaXN0ICYmIHRoaXMub3B0cy5taW51dGVJbnRlcnZhbCA9PT0gMSAmJiB0aGlzLm9wdHMuc2Vjb25kSW50ZXJ2YWwgPT09IDEpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KCiAgICAgIGNvbnN0IHJlc3VsdCA9IFtdOwoKICAgICAgaWYgKHRoaXMuaW5Vc2UuaG91ciAmJiAhdGhpcy5pc0VtcHR5VmFsdWUodGhpcy5ob3VyVHlwZSwgdGhpcy5ob3VyKSAmJiAoIXRoaXMuaXNWYWxpZFZhbHVlKHRoaXMuaG91clR5cGUsIHRoaXMuaG91cikgfHwgdGhpcy5pc0Rpc2FibGVkKCdob3VyJywgdGhpcy5ob3VyKSkpIHsKICAgICAgICByZXN1bHQucHVzaCgnaG91cicpOwogICAgICB9CgogICAgICBpZiAodGhpcy5pblVzZS5taW51dGUgJiYgIXRoaXMuaXNFbXB0eVZhbHVlKHRoaXMubWludXRlVHlwZSwgdGhpcy5taW51dGUpICYmICghdGhpcy5pc1ZhbGlkVmFsdWUodGhpcy5taW51dGVUeXBlLCB0aGlzLm1pbnV0ZSkgfHwgdGhpcy5pc0Rpc2FibGVkKCdtaW51dGUnLCB0aGlzLm1pbnV0ZSkgfHwgdGhpcy5ub3RJbkludGVydmFsKCdtaW51dGUnLCB0aGlzLm1pbnV0ZSkpKSB7CiAgICAgICAgcmVzdWx0LnB1c2goJ21pbnV0ZScpOwogICAgICB9CgogICAgICBpZiAodGhpcy5pblVzZS5zZWNvbmQgJiYgIXRoaXMuaXNFbXB0eVZhbHVlKHRoaXMuc2Vjb25kVHlwZSwgdGhpcy5zZWNvbmQpICYmICghdGhpcy5pc1ZhbGlkVmFsdWUodGhpcy5zZWNvbmRUeXBlLCB0aGlzLnNlY29uZCkgfHwgdGhpcy5pc0Rpc2FibGVkKCdzZWNvbmQnLCB0aGlzLnNlY29uZCkgfHwgdGhpcy5ub3RJbkludGVydmFsKCdzZWNvbmQnLCB0aGlzLnNlY29uZCkpKSB7CiAgICAgICAgcmVzdWx0LnB1c2goJ3NlY29uZCcpOwogICAgICB9CgogICAgICBpZiAodGhpcy5pblVzZS5hcG0gJiYgIXRoaXMuaXNFbXB0eVZhbHVlKHRoaXMuYXBtVHlwZSwgdGhpcy5hcG0pICYmICghdGhpcy5pc1ZhbGlkVmFsdWUodGhpcy5hcG1UeXBlLCB0aGlzLmFwbSkgfHwgdGhpcy5pc0Rpc2FibGVkKCdhcG0nLCB0aGlzLmFwbSkpKSB7CiAgICAgICAgcmVzdWx0LnB1c2goJ2FwbScpOwogICAgICB9CgogICAgICBpZiAocmVzdWx0Lmxlbmd0aCkgewogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBbXTsKICAgIH0sCgogICAgaGFzSW52YWxpZElucHV0KCkgewogICAgICByZXR1cm4gQm9vbGVhbih0aGlzLmludmFsaWRWYWx1ZXMgJiYgdGhpcy5pbnZhbGlkVmFsdWVzLmxlbmd0aCk7CiAgICB9LAoKICAgIGF1dG9EaXJlY3Rpb25FbmFibGVkKCkgewogICAgICByZXR1cm4gdGhpcy5kcm9wRGlyZWN0aW9uID09PSAnYXV0byc7CiAgICB9LAoKICAgIGRyb3Bkb3duRGlyQ2xhc3MoKSB7CiAgICAgIGlmICh0aGlzLmF1dG9EaXJlY3Rpb25FbmFibGVkKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZm9yY2VEcm9wT25Ub3AgPyAnZHJvcC11cCcgOiAnZHJvcC1kb3duJzsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuZHJvcERpcmVjdGlvbiA9PT0gJ3VwJyA/ICdkcm9wLXVwJyA6ICdkcm9wLWRvd24nOwogICAgfQoKICB9LAogIHdhdGNoOiB7CiAgICAnb3B0cy5mb3JtYXQnKG5ld1ZhbHVlKSB7CiAgICAgIHRoaXMucmVuZGVyRm9ybWF0KG5ld1ZhbHVlKTsKICAgIH0sCgogICAgJ29wdHMubWludXRlSW50ZXJ2YWwnKG5ld0ludGV2YWwpIHsKICAgICAgdGhpcy5yZW5kZXJMaXN0KCdtaW51dGUnLCBuZXdJbnRldmFsKTsKICAgIH0sCgogICAgJ29wdHMuc2Vjb25kSW50ZXJ2YWwnKG5ld0ludGV2YWwpIHsKICAgICAgdGhpcy5yZW5kZXJMaXN0KCdzZWNvbmQnLCBuZXdJbnRldmFsKTsKICAgIH0sCgogICAgdmFsdWU6IHsKICAgICAgZGVlcDogdHJ1ZSwKCiAgICAgIGhhbmRsZXIoKSB7CiAgICAgICAgdGhpcy5yZWFkVmFsdWVzKCk7CiAgICAgIH0KCiAgICB9LAoKICAgIGRpc3BsYXlUaW1lKCkgewogICAgICB0aGlzLmZpbGxWYWx1ZXMoKTsKICAgIH0sCgogICAgZGlzYWJsZWQodG9EaXNhYmxlZCkgewogICAgICBpZiAodG9EaXNhYmxlZCkgewogICAgICAgIC8vIEZvcmNlIGNsb3NlIGRyb3Bkb3duIGFuZCByZXNldCBzdGF0dXMgd2hlbiBkaXNhYmxlZAogICAgICAgIGlmICh0aGlzLmlzQWN0aXZlKSB7CiAgICAgICAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5zaG93RHJvcGRvd24pIHsKICAgICAgICAgIHRoaXMuc2hvd0Ryb3Bkb3duID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgICdpbnZhbGlkVmFsdWVzLmxlbmd0aCcobmV3TGVuZ3RoLCBvbGRMZW5ndGgpIHsKICAgICAgaWYgKG5ld0xlbmd0aCAmJiBuZXdMZW5ndGggPj0gMSkgewogICAgICAgIHRoaXMuJGVtaXQoJ2Vycm9yJywgdGhpcy5pbnZhbGlkVmFsdWVzKTsKICAgICAgfSBlbHNlIGlmIChvbGRMZW5ndGggJiYgb2xkTGVuZ3RoID49IDEpIHsKICAgICAgICB0aGlzLiRlbWl0KCdlcnJvcicsIFtdKTsKICAgICAgfQogICAgfQoKICB9LAogIG1ldGhvZHM6IHsKICAgIGZvcm1hdFZhbHVlKHRva2VuLCBpKSB7CiAgICAgIGlmICghdGhpcy5pc051bWJlcihpKSkgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgaSA9ICtpOwoKICAgICAgc3dpdGNoICh0b2tlbikgewogICAgICAgIGNhc2UgJ0gnOgogICAgICAgIGNhc2UgJ2gnOgogICAgICAgIGNhc2UgJ2snOgogICAgICAgIGNhc2UgJ20nOgogICAgICAgIGNhc2UgJ3MnOgogICAgICAgICAgaWYgKFsnaCcsICdrJ10uaW5jbHVkZXModG9rZW4pICYmIGkgPT09IDApIHsKICAgICAgICAgICAgcmV0dXJuIHRva2VuID09PSAnaycgPyAnMjQnIDogJzEyJzsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gU3RyaW5nKGkpOwoKICAgICAgICBjYXNlICdISCc6CiAgICAgICAgY2FzZSAnbW0nOgogICAgICAgIGNhc2UgJ3NzJzoKICAgICAgICBjYXNlICdoaCc6CiAgICAgICAgY2FzZSAna2snOgogICAgICAgICAgaWYgKFsnaGgnLCAna2snXS5pbmNsdWRlcyh0b2tlbikgJiYgaSA9PT0gMCkgewogICAgICAgICAgICByZXR1cm4gdG9rZW4gPT09ICdraycgPyAnMjQnIDogJzEyJzsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gaSA8IDEwID8gYDAke2l9YCA6IFN0cmluZyhpKTsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiAnJzsKICAgICAgfQogICAgfSwKCiAgICBjaGVja0FjY2VwdGluZ1R5cGUodmFsaWRWYWx1ZXMsIGZvcm1hdFN0cmluZykgewogICAgICBpZiAoIXZhbGlkVmFsdWVzIHx8ICFmb3JtYXRTdHJpbmcgfHwgIWZvcm1hdFN0cmluZy5sZW5ndGgpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmFsaWRWYWx1ZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoZm9ybWF0U3RyaW5nLmluZGV4T2YodmFsaWRWYWx1ZXNbaV0pID4gLTEpIHsKICAgICAgICAgIHJldHVybiB2YWxpZFZhbHVlc1tpXTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiAnJzsKICAgIH0sCgogICAgcmVuZGVyRm9ybWF0KG5ld0Zvcm1hdCkgewogICAgICBuZXdGb3JtYXQgPSBuZXdGb3JtYXQgfHwgdGhpcy5vcHRzLmZvcm1hdCB8fCBERUZBVUxUX09QVElPTlMuZm9ybWF0OwogICAgICBsZXQgaG91clR5cGUgPSB0aGlzLmNoZWNrQWNjZXB0aW5nVHlwZShDT05GSUcuSE9VUl9UT0tFTlMsIG5ld0Zvcm1hdCk7CiAgICAgIGxldCBtaW51dGVUeXBlID0gdGhpcy5jaGVja0FjY2VwdGluZ1R5cGUoQ09ORklHLk1JTlVURV9UT0tFTlMsIG5ld0Zvcm1hdCk7CiAgICAgIHRoaXMuc2Vjb25kVHlwZSA9IHRoaXMuY2hlY2tBY2NlcHRpbmdUeXBlKENPTkZJRy5TRUNPTkRfVE9LRU5TLCBuZXdGb3JtYXQpOwogICAgICB0aGlzLmFwbVR5cGUgPSB0aGlzLmNoZWNrQWNjZXB0aW5nVHlwZShDT05GSUcuQVBNX1RPS0VOUywgbmV3Rm9ybWF0KTsgLy8gRmFpbHNhZmUgY2hlY2tpbmcKCiAgICAgIGlmICghaG91clR5cGUgJiYgIW1pbnV0ZVR5cGUgJiYgIXRoaXMuc2Vjb25kVHlwZSAmJiAhdGhpcy5hcG1UeXBlKSB7CiAgICAgICAgaWYgKHRoaXMuZGVidWdNb2RlICYmIHRoaXMuZm9ybWF0KSB7CiAgICAgICAgICB0aGlzLmRlYnVnTG9nKGBObyB2YWxpZCB0b2tlbnMgZm91bmQgaW4geW91ciBkZWZpbmVkICJmb3JtYXQiIHN0cmluZyAiJHt0aGlzLmZvcm1hdH0iLiBGYWxsYmFjayB0byB0aGUgZGVmYXVsdCAiSEg6bW0iIGZvcm1hdC5gKTsKICAgICAgICB9CgogICAgICAgIGhvdXJUeXBlID0gJ0hIJzsKICAgICAgICBtaW51dGVUeXBlID0gJ21tJzsKICAgICAgfQoKICAgICAgdGhpcy5ob3VyVHlwZSA9IGhvdXJUeXBlOwogICAgICB0aGlzLm1pbnV0ZVR5cGUgPSBtaW51dGVUeXBlOwogICAgICB0aGlzLmhvdXJUeXBlID8gdGhpcy5yZW5kZXJIb3Vyc0xpc3QoKSA6IHRoaXMuaG91cnMgPSBbXTsKICAgICAgdGhpcy5taW51dGVUeXBlID8gdGhpcy5yZW5kZXJMaXN0KCdtaW51dGUnKSA6IHRoaXMubWludXRlcyA9IFtdOwogICAgICB0aGlzLnNlY29uZFR5cGUgPyB0aGlzLnJlbmRlckxpc3QoJ3NlY29uZCcpIDogdGhpcy5zZWNvbmRzID0gW107CiAgICAgIHRoaXMuYXBtVHlwZSA/IHRoaXMucmVuZGVyQXBtTGlzdCgpIDogdGhpcy5hcG1zID0gW107CiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLnJlYWRWYWx1ZXMoKTsKICAgICAgfSk7CiAgICB9LAoKICAgIHJlbmRlckhvdXJzTGlzdCgpIHsKICAgICAgY29uc3QgaG91cnNDb3VudCA9IHRoaXMuYmFzZU9uMTJIb3VycyA/IDEyIDogMjQ7CiAgICAgIGNvbnN0IGhvdXJzID0gW107CgogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhvdXJzQ291bnQ7IGkrKykgewogICAgICAgIGlmICh0aGlzLmhvdXJUeXBlID09PSAnaycgfHwgdGhpcy5ob3VyVHlwZSA9PT0gJ2trJykgewogICAgICAgICAgaG91cnMucHVzaCh0aGlzLmZvcm1hdFZhbHVlKHRoaXMuaG91clR5cGUsIGkgKyAxKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGhvdXJzLnB1c2godGhpcy5mb3JtYXRWYWx1ZSh0aGlzLmhvdXJUeXBlLCBpKSk7CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLmhvdXJzID0gaG91cnM7CiAgICB9LAoKICAgIHJlbmRlckxpc3QobGlzdFR5cGUsIGludGVydmFsKSB7CiAgICAgIGlmICghdGhpcy5pc01pbnV0ZU9yU2Vjb25kKGxpc3RUeXBlKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgaXNNaW51dGUgPSBsaXN0VHlwZSA9PT0gJ21pbnV0ZSc7CiAgICAgIGludGVydmFsID0gaW50ZXJ2YWwgfHwgKGlzTWludXRlID8gdGhpcy5vcHRzLm1pbnV0ZUludGVydmFsIHx8IERFRkFVTFRfT1BUSU9OUy5taW51dGVJbnRlcnZhbCA6IHRoaXMub3B0cy5zZWNvbmRJbnRlcnZhbCB8fCBERUZBVUxUX09QVElPTlMuc2Vjb25kSW50ZXJ2YWwpOwogICAgICBjb25zdCByZXN1bHQgPSBbXTsKCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNjA7IGkgKz0gaW50ZXJ2YWwpIHsKICAgICAgICByZXN1bHQucHVzaCh0aGlzLmZvcm1hdFZhbHVlKGlzTWludXRlID8gdGhpcy5taW51dGVUeXBlIDogdGhpcy5zZWNvbmRUeXBlLCBpKSk7CiAgICAgIH0KCiAgICAgIGlzTWludXRlID8gdGhpcy5taW51dGVzID0gcmVzdWx0IDogdGhpcy5zZWNvbmRzID0gcmVzdWx0OwogICAgfSwKCiAgICByZW5kZXJBcG1MaXN0KCkgewogICAgICB0aGlzLmFwbXMgPSB0aGlzLmFwbVR5cGUgPT09ICdBJyA/IFsnQU0nLCAnUE0nXSA6IFsnYW0nLCAncG0nXTsKICAgIH0sCgogICAgcmVhZFZhbHVlcygpIHsKICAgICAgaWYgKHRoaXMudXNlU3RyaW5nVmFsdWUpIHsKICAgICAgICBpZiAodGhpcy5kZWJ1Z01vZGUpIHsKICAgICAgICAgIHRoaXMuZGVidWdMb2coYFJlY2VpdmVkIGEgc3RyaW5nIHZhbHVlOiAiJHt0aGlzLnZhbHVlfSJgKTsKICAgICAgICB9CgogICAgICAgIHRoaXMucmVhZFN0cmluZ1ZhbHVlcyh0aGlzLnZhbHVlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodGhpcy5kZWJ1Z01vZGUpIHsKICAgICAgICAgIHRoaXMuZGVidWdMb2coYFJlY2VpdmVkIGFuIG9iamVjdCB2YWx1ZTogIiR7SlNPTi5zdHJpbmdpZnkodGhpcy52YWx1ZSB8fCB7fSl9ImApOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5yZWFkT2JqZWN0VmFsdWVzKHRoaXMudmFsdWUpOwogICAgICB9CiAgICB9LAoKICAgIHJlYWRPYmplY3RWYWx1ZXMob2JqVmFsdWUpIHsKICAgICAgY29uc3QgdGltZVZhbHVlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmpWYWx1ZSB8fCB7fSkpOwogICAgICBjb25zdCB2YWx1ZXMgPSBPYmplY3Qua2V5cyh0aW1lVmFsdWUpOyAvLyBGYWlsc2FmZSBmb3IgZW1wdHkgYHYtbW9kZWxgIG9iamVjdAoKICAgICAgaWYgKHZhbHVlcy5sZW5ndGggPT09IDApIHsKICAgICAgICB0aGlzLmFkZEZhbGxiYWNrVmFsdWVzKCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBDT05GSUcuQkFTSUNfVFlQRVMuZm9yRWFjaCh0eXBlID0+IHsKICAgICAgICBjb25zdCB0b2tlbiA9IHRoaXMuZ2V0VG9rZW5CeVR5cGUodHlwZSk7CgogICAgICAgIGlmICh2YWx1ZXMuaW5kZXhPZih0b2tlbikgPiAtMSkgewogICAgICAgICAgY29uc3Qgc2FuaXRpemVkVmFsdWUgPSB0aGlzLnNhbml0aXplZFZhbHVlKHRva2VuLCB0aW1lVmFsdWVbdG9rZW5dKTsKICAgICAgICAgIHRoaXNbdHlwZV0gPSBzYW5pdGl6ZWRWYWx1ZTsKICAgICAgICAgIHRpbWVWYWx1ZVt0b2tlbl0gPSBzYW5pdGl6ZWRWYWx1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpc1t0eXBlXSA9ICcnOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMudGltZVZhbHVlID0gdGltZVZhbHVlOwogICAgfSwKCiAgICBnZXRNYXRjaEFsbEJ5UmVnZXgodGVzdFN0cmluZywgcmVnZXhTdHJpbmcpIHsKICAgICAgY29uc3Qgc3RyID0gJ3BvbHlmaWxsVGVzdCc7CiAgICAgIGNvbnN0IG5lZWRzUG9seWZpbGwgPSBCb29sZWFuKCFzdHIubWF0Y2hBbGwgfHwgdHlwZW9mIHN0ci5tYXRjaEFsbCAhPT0gJ2Z1bmN0aW9uJyk7CiAgICAgIHJldHVybiBuZWVkc1BvbHlmaWxsID8gdGhpcy5wb2x5ZmlsbE1hdGNoQWxsKHRlc3RTdHJpbmcsIHJlZ2V4U3RyaW5nKSA6IHRlc3RTdHJpbmcubWF0Y2hBbGwobmV3IFJlZ0V4cChyZWdleFN0cmluZywgJ2cnKSk7CiAgICB9LAoKICAgIHJlYWRTdHJpbmdWYWx1ZXMoc3RyaW5nVmFsdWUpIHsKICAgICAgLy8gRmFpbHNhZmUgZm9yIGVtcHR5IGB2LW1vZGVsYCBzdHJpbmcKICAgICAgaWYgKCFzdHJpbmdWYWx1ZSB8fCAhc3RyaW5nVmFsdWUubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5hZGRGYWxsYmFja1ZhbHVlcygpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgZm9ybWF0U3RyaW5nID0gU3RyaW5nKHRoaXMuZm9ybWF0U3RyaW5nKTsKICAgICAgY29uc3QgdG9rZW5zUmVneFN0ciA9IGAoJHt0aGlzLnRva2VuUmVnZXhCYXNlfSkrP2A7CiAgICAgIGNvbnN0IG90aGVyc1JlZ3hTdHIgPSBgW14oJHt0aGlzLnRva2VuUmVnZXhCYXNlfSldK2A7CiAgICAgIGNvbnN0IHRva2Vuc01hdGNoQWxsID0gdGhpcy5nZXRNYXRjaEFsbEJ5UmVnZXgoZm9ybWF0U3RyaW5nLCB0b2tlbnNSZWd4U3RyKTsKICAgICAgY29uc3Qgb3RoZXJzTWF0Y2hBbGwgPSB0aGlzLmdldE1hdGNoQWxsQnlSZWdleChmb3JtYXRTdHJpbmcsIG90aGVyc1JlZ3hTdHIpOwogICAgICBjb25zdCBjaHVua3MgPSBbXTsKICAgICAgY29uc3QgdG9rZW5DaHVua3MgPSBbXTsKCiAgICAgIGZvciAobGV0IHRrTWF0Y2ggb2YgdG9rZW5zTWF0Y2hBbGwpIHsKICAgICAgICBjb25zdCB0b2tlbk1hdGNoSXRlbSA9IHsKICAgICAgICAgIGluZGV4OiB0a01hdGNoLmluZGV4LAogICAgICAgICAgdG9rZW46IHRrTWF0Y2hbMF0sCiAgICAgICAgICBpc1ZhbHVlVG9rZW46IHRydWUKICAgICAgICB9OwogICAgICAgIGNodW5rcy5wdXNoKHRva2VuTWF0Y2hJdGVtKTsKICAgICAgICB0b2tlbkNodW5rcy5wdXNoKHRva2VuTWF0Y2hJdGVtKTsKICAgICAgfQoKICAgICAgZm9yIChsZXQgb3RNYXRjaCBvZiBvdGhlcnNNYXRjaEFsbCkgewogICAgICAgIGNodW5rcy5wdXNoKHsKICAgICAgICAgIGluZGV4OiBvdE1hdGNoLmluZGV4LAogICAgICAgICAgdG9rZW46IG90TWF0Y2hbMF0KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgY2h1bmtzLnNvcnQoKGwsIHIpID0+IGwuaW5kZXggPCByLmluZGV4ID8gLTEgOiAxKTsKICAgICAgbGV0IHJlZ2V4Q29tYm8gPSAnJzsKICAgICAgY2h1bmtzLmZvckVhY2goY2h1bmsgPT4gewogICAgICAgIGlmIChjaHVuay5pc1ZhbHVlVG9rZW4pIHsKICAgICAgICAgIGNvbnN0IHRva2VuUmVnZXggPSB0aGlzLmdldFRva2VuUmVnZXgoY2h1bmsudG9rZW4pIHx8ICcnOwogICAgICAgICAgcmVnZXhDb21ibyArPSB0b2tlblJlZ2V4OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zdCBzYWZlQ2hhcnMgPSBjaHVuay50b2tlbi5yZXBsYWNlKC9cXHswfShcKnxcP3xcLnxcKykvZywgJ1xcJDEnKTsKICAgICAgICAgIHJlZ2V4Q29tYm8gKz0gYCg/OiR7c2FmZUNoYXJzfSlgOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGNvbnN0IGNvbWJvUmVnID0gbmV3IFJlZ0V4cChyZWdleENvbWJvKTsgLy8gRG8gdGVzdCBiZWZvcmUgbWF0Y2gKCiAgICAgIGlmIChjb21ib1JlZy50ZXN0KHN0cmluZ1ZhbHVlKSkgewogICAgICAgIGNvbnN0IG1hdGNoUmVzdWx0cyA9IHN0cmluZ1ZhbHVlLm1hdGNoKG5ldyBSZWdFeHAocmVnZXhDb21ibykpOwogICAgICAgIGNvbnN0IHZhbHVlUmVzdWx0cyA9IG1hdGNoUmVzdWx0cy5zbGljZSgxLCB0b2tlbkNodW5rcy5sZW5ndGggKyAxKTsKICAgICAgICBjb25zdCB0aW1lVmFsdWUgPSB7fTsKICAgICAgICB2YWx1ZVJlc3VsdHMuZm9yRWFjaCgodmFsdWUsIHZySW5kZXgpID0+IHsKICAgICAgICAgIGlmICh0b2tlbkNodW5rc1t2ckluZGV4XSkgewogICAgICAgICAgICBjb25zdCB0YXJnZXRUb2tlbiA9IHRva2VuQ2h1bmtzW3ZySW5kZXhdLnRva2VuOwogICAgICAgICAgICB0aW1lVmFsdWVbdGFyZ2V0VG9rZW5dID0gdGhpcy5zZXRWYWx1ZUZyb21TdHJpbmcodmFsdWUsIHRhcmdldFRva2VuKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICB0aGlzLnRpbWVWYWx1ZSA9IHRpbWVWYWx1ZTsKCiAgICAgICAgaWYgKHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgICBjb25zdCB0b2tlbkNodW5rc0ZvckxvZyA9IHRva2VuQ2h1bmtzLm1hcCh0Q2h1bmsgPT4gdENodW5rICYmIHRDaHVuay50b2tlbik7CiAgICAgICAgICB0aGlzLmRlYnVnTG9nKGBTdWNjZXNzZnVsbHkgcGFyc2VkIHZhbHVlcyAke0pTT04uc3RyaW5naWZ5KHZhbHVlUmVzdWx0cyl9XG5mb3IgJHtKU09OLnN0cmluZ2lmeSh0b2tlbkNodW5rc0ZvckxvZyl9XG5pbiBmb3JtYXQgcGF0dGVybiAnJHt0aGlzLmZvcm1hdFN0cmluZ30nYCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLmRlYnVnTW9kZSkgewogICAgICAgICAgdGhpcy5kZWJ1Z0xvZyhgVGhlIGlucHV0IHN0cmluZyBpbiAidi1tb2RlbCIgZG9lcyBOT1QgbWF0Y2ggdGhlICJmb3JtYXQiIHBhdHRlcm5cbmZvcm1hdDogJHt0aGlzLmZvcm1hdFN0cmluZ31cbnYtbW9kZWw6ICR7c3RyaW5nVmFsdWV9YCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIHBvbHlmaWxsTWF0Y2hBbGwodGFyZ2V0U3RyaW5nLCByZWd4U3RyKSB7CiAgICAgIGNvbnN0IG1hdGNoZXNMaXN0ID0gdGFyZ2V0U3RyaW5nLm1hdGNoKG5ldyBSZWdFeHAocmVneFN0ciwgJ2cnKSk7CiAgICAgIGNvbnN0IHJlc3VsdCA9IFtdOwogICAgICBjb25zdCBpbmRpY2VzUmVnID0gW107CgogICAgICBpZiAobWF0Y2hlc0xpc3QgJiYgbWF0Y2hlc0xpc3QubGVuZ3RoKSB7CiAgICAgICAgbWF0Y2hlc0xpc3QuZm9yRWFjaChtYXRjaGVkSXRlbSA9PiB7CiAgICAgICAgICBjb25zdCBleGlzdEluZGV4ID0gaW5kaWNlc1JlZy5maW5kSW5kZXgoaWR4SXRlbSA9PiBpZHhJdGVtLnN0ciA9PT0gbWF0Y2hlZEl0ZW0pOwogICAgICAgICAgbGV0IGluZGV4OwoKICAgICAgICAgIGlmIChleGlzdEluZGV4ID49IDApIHsKICAgICAgICAgICAgaWYgKGluZGljZXNSZWdbZXhpc3RJbmRleF0gJiYgaW5kaWNlc1JlZ1tleGlzdEluZGV4XS5yZWdleCkgewogICAgICAgICAgICAgIGluZGV4ID0gaW5kaWNlc1JlZ1tleGlzdEluZGV4XS5yZWdleC5leGVjKHRhcmdldFN0cmluZykuaW5kZXg7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvbnN0IGl0ZW1JbmRpY2VzUmVnZXggPSBuZXcgUmVnRXhwKG1hdGNoZWRJdGVtLCAnZycpOwogICAgICAgICAgICBpbmRleCA9IGl0ZW1JbmRpY2VzUmVnZXguZXhlYyh0YXJnZXRTdHJpbmcpLmluZGV4OwogICAgICAgICAgICBpbmRpY2VzUmVnLnB1c2goewogICAgICAgICAgICAgIHN0cjogU3RyaW5nKG1hdGNoZWRJdGVtKSwKICAgICAgICAgICAgICByZWdleDogaXRlbUluZGljZXNSZWdleAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXN1bHQucHVzaCh7CiAgICAgICAgICAgIDA6IFN0cmluZyhtYXRjaGVkSXRlbSksCiAgICAgICAgICAgIGluZGV4OiBpbmRleAogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9LAoKICAgIGFkZEZhbGxiYWNrVmFsdWVzKCkgewogICAgICBjb25zdCB0aW1lVmFsdWUgPSB7fTsKICAgICAgdGhpcy5pblVzZS50eXBlcy5mb3JFYWNoKHR5cGUgPT4gewogICAgICAgIHRpbWVWYWx1ZVt0aGlzLmdldFRva2VuQnlUeXBlKHR5cGUpXSA9ICcnOwogICAgICB9KTsKICAgICAgdGhpcy50aW1lVmFsdWUgPSB0aW1lVmFsdWU7CiAgICB9LAoKICAgIHNldFZhbHVlRnJvbVN0cmluZyhwYXJzZWRWYWx1ZSwgdG9rZW4pIHsKICAgICAgaWYgKCF0b2tlbiB8fCAhcGFyc2VkVmFsdWUpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KCiAgICAgIGNvbnN0IHRva2VuVHlwZSA9IHRoaXMuZ2V0VG9rZW5UeXBlKHRva2VuKTsKCiAgICAgIGlmICghdG9rZW5UeXBlIHx8ICF0b2tlblR5cGUubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CgogICAgICBjb25zdCBzdGRWYWx1ZSA9IHBhcnNlZFZhbHVlICE9PSB0aGlzLmdldFRva2VuQnlUeXBlKHRva2VuVHlwZSkgPyBwYXJzZWRWYWx1ZSA6ICcnOwogICAgICB0aGlzW3Rva2VuVHlwZV0gPSBzdGRWYWx1ZTsKICAgICAgcmV0dXJuIHN0ZFZhbHVlOwogICAgfSwKCiAgICBmaWxsVmFsdWVzKGZvcmNlRW1pdCkgewogICAgICBjb25zdCBmdWxsVmFsdWVzID0ge307CiAgICAgIGNvbnN0IGJhc2VIb3VyID0gdGhpcy5ob3VyOwogICAgICBjb25zdCBiYXNlSG91clR5cGUgPSB0aGlzLmhvdXJUeXBlOwogICAgICBsZXQgYXBtVmFsdWU7IC8vIEhvdXIgdHlwZSBvciBob3VyIHZhbHVlIGlzIE5PVCBzZXQgaW4gdGhlICJmb3JtYXQiIHN0cmluZwoKICAgICAgaWYgKCFiYXNlSG91clR5cGUgfHwgIXRoaXMuaXNOdW1iZXIoYmFzZUhvdXIpKSB7CiAgICAgICAgQ09ORklHLkhPVVJfVE9LRU5TLmZvckVhY2godG9rZW4gPT4gZnVsbFZhbHVlc1t0b2tlbl0gPSAnJyk7CiAgICAgICAgYXBtVmFsdWUgPSB0aGlzLmxvd2VyQ2FzZWRBcG0odGhpcy5hcG0gfHwgJycpOwogICAgICAgIGZ1bGxWYWx1ZXMuYSA9IGFwbVZhbHVlOwogICAgICAgIGZ1bGxWYWx1ZXMuQSA9IGFwbVZhbHVlLnRvVXBwZXJDYXNlKCk7IC8vIEJvdGggSG91ciB0eXBlIGFuZCB2YWx1ZSBhcmUgc2V0CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc3QgaG91clZhbHVlID0gK2Jhc2VIb3VyOwogICAgICAgIGNvbnN0IGFwbVZhbHVlID0gdGhpcy5iYXNlT24xMkhvdXJzICYmIHRoaXMuYXBtID8gdGhpcy5sb3dlckNhc2VkQXBtKHRoaXMuYXBtKSA6IGZhbHNlOwogICAgICAgIENPTkZJRy5IT1VSX1RPS0VOUy5mb3JFYWNoKHRva2VuID0+IHsKICAgICAgICAgIGlmICh0b2tlbiA9PT0gYmFzZUhvdXJUeXBlKSB7CiAgICAgICAgICAgIGZ1bGxWYWx1ZXNbdG9rZW5dID0gYmFzZUhvdXI7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KCiAgICAgICAgICBsZXQgdmFsdWU7CiAgICAgICAgICBsZXQgYXBtOwoKICAgICAgICAgIHN3aXRjaCAodG9rZW4pIHsKICAgICAgICAgICAgY2FzZSAnSCc6CiAgICAgICAgICAgIGNhc2UgJ0hIJzoKICAgICAgICAgICAgY2FzZSAnayc6CiAgICAgICAgICAgIGNhc2UgJ2trJzoKICAgICAgICAgICAgICBpZiAodGhpcy5iYXNlT24xMkhvdXJzKSB7CiAgICAgICAgICAgICAgICBpZiAoYXBtVmFsdWUgPT09ICdwbScpIHsKICAgICAgICAgICAgICAgICAgdmFsdWUgPSBob3VyVmFsdWUgPCAxMiA/IGhvdXJWYWx1ZSArIDEyIDogaG91clZhbHVlOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChbJ2snLCAna2snXS5pbmNsdWRlcyh0b2tlbikpIHsKICAgICAgICAgICAgICAgICAgdmFsdWUgPSBob3VyVmFsdWUgPT09IDEyID8gMjQgOiBob3VyVmFsdWU7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB2YWx1ZSA9IGhvdXJWYWx1ZSAlIDEyOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZiAoWydrJywgJ2trJ10uaW5jbHVkZXModG9rZW4pKSB7CiAgICAgICAgICAgICAgICAgIHZhbHVlID0gaG91clZhbHVlID09PSAwID8gMjQgOiBob3VyVmFsdWU7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICB2YWx1ZSA9IGhvdXJWYWx1ZSAlIDI0OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgZnVsbFZhbHVlc1t0b2tlbl0gPSB0aGlzLmZvcm1hdFZhbHVlKHRva2VuLCB2YWx1ZSk7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlICdoJzoKICAgICAgICAgICAgY2FzZSAnaGgnOgogICAgICAgICAgICAgIC8vIGggPC0+IGhoCiAgICAgICAgICAgICAgaWYgKHRoaXMuYmFzZU9uMTJIb3VycykgewogICAgICAgICAgICAgICAgdmFsdWUgPSBob3VyVmFsdWU7CiAgICAgICAgICAgICAgICBhcG0gPSBhcG1WYWx1ZSB8fCAnJzsgLy8gUmVhZCBmcm9tIG90aGVyIGhvdXIgZm9ybWF0cwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZiAoaG91clZhbHVlID4gMTEgJiYgaG91clZhbHVlIDwgMjQpIHsKICAgICAgICAgICAgICAgICAgYXBtID0gJ3BtJzsKICAgICAgICAgICAgICAgICAgdmFsdWUgPSBob3VyVmFsdWUgPT09IDEyID8gMTIgOiBob3VyVmFsdWUgJSAxMjsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGFwbSA9ICdhbSc7CiAgICAgICAgICAgICAgICAgIHZhbHVlID0gaG91clZhbHVlICUgMTIgPT09IDAgPyAxMiA6IGhvdXJWYWx1ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGZ1bGxWYWx1ZXNbdG9rZW5dID0gdGhpcy5mb3JtYXRWYWx1ZSh0b2tlbiwgdmFsdWUpOwogICAgICAgICAgICAgIGZ1bGxWYWx1ZXMuYSA9IGFwbTsKICAgICAgICAgICAgICBmdWxsVmFsdWVzLkEgPSBhcG0udG9VcHBlckNhc2UoKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgZnVsbFZhbHVlcy5tID0gdGhpcy5mb3JtYXRWYWx1ZSgnbScsIHRoaXMubWludXRlKTsKICAgICAgZnVsbFZhbHVlcy5tbSA9IHRoaXMuZm9ybWF0VmFsdWUoJ21tJywgdGhpcy5taW51dGUpOwogICAgICBmdWxsVmFsdWVzLnMgPSB0aGlzLmZvcm1hdFZhbHVlKCdzJywgdGhpcy5zZWNvbmQpOwogICAgICBmdWxsVmFsdWVzLnNzID0gdGhpcy5mb3JtYXRWYWx1ZSgnc3MnLCB0aGlzLnNlY29uZCk7CiAgICAgIHRoaXMuZnVsbFZhbHVlcyA9IGZ1bGxWYWx1ZXM7IC8vIE9uIGxhenkgbW9kZSwgZW1pdCBgaW5wdXRgIGFuZCBgY2hhbmdlYCBldmVudHMgb25seSB3aGVuOgogICAgICAvLyAtIFRoZSB1c2VyIHBpY2sgYSBuZXcgdmFsdWUgYW5kIHRoZW4gY2xvc2UgdGhlIGRyb3Bkb3duCiAgICAgIC8vIC0gVGhlIHVzZXIgY2xpY2sgdGhlICgieCIpIGNsZWFyIGJ1dHRvbgoKICAgICAgaWYgKCF0aGlzLmxhenkgfHwgZm9yY2VFbWl0KSB7CiAgICAgICAgdGhpcy5lbWl0VGltZVZhbHVlKCk7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmNsb3NlT25Db21wbGV0ZSAmJiB0aGlzLmFsbFZhbHVlU2VsZWN0ZWQgJiYgdGhpcy5zaG93RHJvcGRvd24pIHsKICAgICAgICB0aGlzLnRvZ2dsZUFjdGl2ZSgpOwogICAgICB9CiAgICB9LAoKICAgIGdldEZ1bGxEYXRhKCkgewogICAgICBpZiAoIXRoaXMuZnVsbFZhbHVlcykgewogICAgICAgIHRoaXMuZmlsbFZhbHVlcygpOwogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIGRhdGE6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5mdWxsVmFsdWVzKSksCiAgICAgICAgZGlzcGxheVRpbWU6IHRoaXMuaW5wdXRJc0VtcHR5ID8gJycgOiBTdHJpbmcodGhpcy5kaXNwbGF5VGltZSkKICAgICAgfTsKICAgIH0sCgogICAgZW1pdFRpbWVWYWx1ZSgpIHsKICAgICAgaWYgKHRoaXMubGF6eSAmJiB0aGlzLmJha0Rpc3BsYXlUaW1lID09PSB0aGlzLmRpc3BsYXlUaW1lKSB7CiAgICAgICAgaWYgKHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgICB0aGlzLmRlYnVnTG9nKCdUaGUgdmFsdWUgZG9lcyBub3QgY2hhbmdlIG9uIGBsYXp5YCBtb2RlLiBTa2lwIHRoZSBlbWl0dGluZyBgaW5wdXRgIGFuZCBgY2hhbmdlYCBldmVudC4nKTsKICAgICAgICB9CgogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgZnVsbERhdGEgPSB0aGlzLmdldEZ1bGxEYXRhKCk7CgogICAgICBpZiAodGhpcy51c2VTdHJpbmdWYWx1ZSkgewogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgZnVsbERhdGEuZGlzcGxheVRpbWUpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IGZ1bGxWYWx1ZXMgPSBmdWxsRGF0YS5kYXRhOwogICAgICAgIGNvbnN0IHRva2Vuc0luVXNlID0gdGhpcy5pblVzZS50b2tlbnMgfHwgW107CiAgICAgICAgY29uc3QgdGltZVZhbHVlID0ge307CiAgICAgICAgdG9rZW5zSW5Vc2UuZm9yRWFjaCh0b2tlbiA9PiB7CiAgICAgICAgICB0aW1lVmFsdWVbdG9rZW5dID0gZnVsbFZhbHVlc1t0b2tlbl0gfHwgJyc7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRpbWVWYWx1ZSkpKTsKICAgICAgfQoKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgZnVsbERhdGEpOwogICAgfSwKCiAgICB0cmFuc2xhdGUxMmhSYW5nZSh2YWx1ZSkgewogICAgICBjb25zdCB2YWx1ZVQgPSB0aGlzLm1hdGNoMTJoUmFuZ2UodmFsdWUpOwoKICAgICAgaWYgKCt2YWx1ZVRbMV0gPT09IDEyKSB7CiAgICAgICAgcmV0dXJuICt2YWx1ZVRbMV0gKyAodmFsdWVUWzJdLnRvTG93ZXJDYXNlKCkgPT09ICdwJyA/IDAgOiAxMik7CiAgICAgIH0KCiAgICAgIHJldHVybiArdmFsdWVUWzFdICsgKHZhbHVlVFsyXS50b0xvd2VyQ2FzZSgpID09PSAncCcgPyAxMiA6IDApOwogICAgfSwKCiAgICBpc0Rpc2FibGVkKHR5cGUsIHZhbHVlKSB7CiAgICAgIGlmICghdGhpcy5pc0Jhc2ljVHlwZSh0eXBlKSB8fCAhdGhpcy5pblVzZVt0eXBlXSkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgICBjYXNlICdob3VyJzoKICAgICAgICAgIHJldHVybiB0aGlzLmlzRGlzYWJsZWRIb3VyKHZhbHVlKTsKCiAgICAgICAgY2FzZSAnbWludXRlJzoKICAgICAgICBjYXNlICdzZWNvbmQnOgogICAgICAgICAgaWYgKCF0aGlzW2Ake3R5cGV9UmFuZ2VMaXN0YF0pIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiAhdGhpc1tgJHt0eXBlfVJhbmdlTGlzdGBdLmluY2x1ZGVzKHZhbHVlKTsKCiAgICAgICAgY2FzZSAnYXBtJzoKICAgICAgICAgIGlmICghdGhpcy5yZXN0cmljdGVkSG91clJhbmdlKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gIXRoaXMuaGFzW3RoaXMubG93ZXJDYXNlZEFwbSh2YWx1ZSldOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgIH0sCgogICAgaXNEaXNhYmxlZEhvdXIodmFsdWUpIHsKICAgICAgaWYgKCF0aGlzLnJlc3RyaWN0ZWRIb3VyUmFuZ2UpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmJhc2VPbjEySG91cnMpIHsKICAgICAgICBpZiAoIXRoaXMuYXBtIHx8ICF0aGlzLmFwbS5sZW5ndGgpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc3QgdG9rZW4gPSB0aGlzLmFwbS50b0xvd2VyQ2FzZSgpID09PSAnYW0nID8gJ2EnIDogJ3AnOwogICAgICAgICAgcmV0dXJuICF0aGlzLnJlc3RyaWN0ZWRIb3VyUmFuZ2UuaW5jbHVkZXMoYCR7K3ZhbHVlfSR7dG9rZW59YCk7CiAgICAgICAgfQogICAgICB9IC8vIEZhbGxiYWNrIGZvciAnSEgnIGFuZCAnSCBob3VyIGZvcm1hdCB3aXRoIGEgYGhvdXItcmFuZ2VgIGluIGEgMTItaG91ciBmb3JtCgoKICAgICAgaWYgKCh0aGlzLmhvdXJUeXBlID09PSAnSEgnIHx8IHRoaXMuaG91clR5cGUgPT09ICdIJykgJiYgK3ZhbHVlID09PSAwICYmIHRoaXMucmVzdHJpY3RlZEhvdXJSYW5nZS5pbmNsdWRlcygyNCkpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHJldHVybiAhdGhpcy5yZXN0cmljdGVkSG91clJhbmdlLmluY2x1ZGVzKCt2YWx1ZSk7CiAgICB9LAoKICAgIG5vdEluSW50ZXJ2YWwoc2VjdGlvbiwgdmFsdWUpIHsKICAgICAgaWYgKCFzZWN0aW9uIHx8ICF0aGlzLmlzTWludXRlT3JTZWNvbmQoc2VjdGlvbikpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLm9wdHNbYCR7c2VjdGlvbn1JbnRlcnZhbGBdID09PSAxKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICByZXR1cm4gK3ZhbHVlICUgdGhpcy5vcHRzW2Ake3NlY3Rpb259SW50ZXJ2YWxgXSAhPT0gMDsKICAgIH0sCgogICAgcmVuZGVyUmFuZ2VMaXN0KHJhd1JhbmdlLCBzZWN0aW9uKSB7CiAgICAgIGlmICghcmF3UmFuZ2UgfHwgIXNlY3Rpb24gfHwgIXRoaXMuaXNNaW51dGVPclNlY29uZChzZWN0aW9uKSkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQoKICAgICAgY29uc3QgcmFuZ2UgPSBbXTsKICAgICAgbGV0IGZvcm1hdGVkVmFsdWU7CiAgICAgIHJhd1JhbmdlLmZvckVhY2godmFsdWUgPT4gewogICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoID4gMiAmJiB0aGlzLmRlYnVnTW9kZSkgewogICAgICAgICAgICB0aGlzLmRlYnVnTG9nKGBOZXN0ZWQgYXJyYXkgd2l0aGluICIke3NlY3Rpb259LXJhbmdlIiBtdXN0IGNvbnRhaW4gbm8gbW9yZSB0aGFuIHR3byBpdGVtcy4gT25seSB0aGUgZmlyc3QgdHdvIGl0ZW1zIG9mICR7SlNPTi5zdHJpbmdpZnkodmFsdWUpfSB3aWxsIGJlIHRha2VuIGludG8gYWNjb3VudC5gKTsKICAgICAgICAgIH0KCiAgICAgICAgICBjb25zdCBzdGFydCA9IHZhbHVlWzBdOwogICAgICAgICAgY29uc3QgZW5kID0gdmFsdWVbMV0gfHwgdmFsdWVbMF07CgogICAgICAgICAgZm9yIChsZXQgaSA9ICtzdGFydDsgaSA8PSArZW5kOyBpKyspIHsKICAgICAgICAgICAgaWYgKGkgPCAwIHx8IGkgPiA1OSkgewogICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICBmb3JtYXRlZFZhbHVlID0gdGhpcy5mb3JtYXRWYWx1ZSh0aGlzLmdldFRva2VuQnlUeXBlKHNlY3Rpb24pLCBpKTsKCiAgICAgICAgICAgIGlmICghcmFuZ2UuaW5jbHVkZXMoZm9ybWF0ZWRWYWx1ZSkpIHsKICAgICAgICAgICAgICByYW5nZS5wdXNoKGZvcm1hdGVkVmFsdWUpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmICgrdmFsdWUgPCAwIHx8ICt2YWx1ZSA+IDU5KSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KCiAgICAgICAgICBmb3JtYXRlZFZhbHVlID0gdGhpcy5mb3JtYXRWYWx1ZSh0aGlzLmdldFRva2VuQnlUeXBlKHNlY3Rpb24pLCB2YWx1ZSk7CgogICAgICAgICAgaWYgKCFyYW5nZS5pbmNsdWRlcyhmb3JtYXRlZFZhbHVlKSkgewogICAgICAgICAgICByYW5nZS5wdXNoKGZvcm1hdGVkVmFsdWUpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJhbmdlLnNvcnQoKGwsIHIpID0+IHsKICAgICAgICByZXR1cm4gbCAtIHI7CiAgICAgIH0pOyAvLyBEZWJ1ZyBNb2RlCgogICAgICBpZiAodGhpcy5kZWJ1Z01vZGUpIHsKICAgICAgICBjb25zdCBmdWxsTGlzdCA9IChzZWN0aW9uID09PSAnbWludXRlJyA/IHRoaXMubWludXRlcyA6IHRoaXMuc2Vjb25kcykgfHwgW107CiAgICAgICAgY29uc3QgdmFsaWRJdGVtcyA9IGZ1bGxMaXN0LmZpbHRlcihpdGVtID0+IHJhbmdlLmluY2x1ZGVzKGl0ZW0pKTsKCiAgICAgICAgaWYgKCF2YWxpZEl0ZW1zIHx8ICF2YWxpZEl0ZW1zLmxlbmd0aCkgewogICAgICAgICAgaWYgKHNlY3Rpb24gPT09ICdtaW51dGUnKSB7CiAgICAgICAgICAgIHRoaXMuZGVidWdMb2coYFRoZSBtaW51dGUgbGlzdCBpcyBlbXB0eSBkdWUgdG8gdGhlICJtaW51dGUtcmFuZ2UiIGNvbmZpZ1xubWludXRlLXJhbmdlOiAke0pTT04uc3RyaW5naWZ5KHRoaXMubWludXRlUmFuZ2UpfVxubWludXRlLWludGVydmFsOiAke3RoaXMub3B0cy5taW51dGVJbnRlcnZhbH1gKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuZGVidWdMb2coYFRoZSBzZWNvbmQgbGlzdCBpcyBlbXB0eSBkdWUgdG8gdGhlICJzZWNvbmQtcmFuZ2UiIGNvbmZpZ1xuc2Vjb25kLXJhbmdlOiAke0pTT04uc3RyaW5naWZ5KHRoaXMuc2Vjb25kUmFuZ2UpfVxuc2Vjb25kLWludGVydmFsOiAke3RoaXMub3B0cy5zZWNvbmRJbnRlcnZhbH1gKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiByYW5nZTsKICAgIH0sCgogICAgZm9yY2VBcG1TZWxlY3Rpb24oKSB7CiAgICAgIGlmICh0aGlzLm1hbnVhbElucHV0KSB7CiAgICAgICAgLy8gU2tpcCB0aGlzIHRvIGFsbG93IHVzZXJzIHRvIHBhc3RlIGEgc3RyaW5nIHZhbHVlIGZyb20gdGhlIGNsaXBib2FyZCBpbiBNYW51YWwgSW5wdXQgbW9kZQogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuYXBtVHlwZSAmJiAhdGhpcy5hcG0pIHsKICAgICAgICBpZiAodGhpcy5oYXMuYW0gfHwgdGhpcy5oYXMucG0pIHsKICAgICAgICAgIHRoaXMuZG9DbGVhckFwbUNoZWNraW5nID0gdHJ1ZTsKICAgICAgICAgIGNvbnN0IGFwbVZhbHVlID0gdGhpcy5oYXMuYW0gPyAnYW0nIDogJ3BtJzsKICAgICAgICAgIHRoaXMuYXBtID0gdGhpcy5hcG1UeXBlID09PSAnQScgPyBhcG1WYWx1ZS50b1VwcGVyQ2FzZSgpIDogYXBtVmFsdWU7CiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIGVtcHR5QXBtU2VsZWN0aW9uKCkgewogICAgICBpZiAodGhpcy5kb0NsZWFyQXBtQ2hlY2tpbmcgJiYgdGhpcy5ob3VyID09PSAnJyAmJiB0aGlzLm1pbnV0ZSA9PT0gJycgJiYgdGhpcy5zZWNvbmQgPT09ICcnKSB7CiAgICAgICAgdGhpcy5hcG0gPSAnJzsKICAgICAgfQoKICAgICAgdGhpcy5kb0NsZWFyQXBtQ2hlY2tpbmcgPSBmYWxzZTsKICAgIH0sCgogICAgYXBtRGlzcGxheVRleHQoYXBtVmFsdWUpIHsKICAgICAgaWYgKHRoaXMuYW1UZXh0ICYmIHRoaXMubG93ZXJDYXNlZEFwbShhcG1WYWx1ZSkgPT09ICdhbScpIHsKICAgICAgICByZXR1cm4gdGhpcy5hbVRleHQ7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnBtVGV4dCAmJiB0aGlzLmxvd2VyQ2FzZWRBcG0oYXBtVmFsdWUpID09PSAncG0nKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucG1UZXh0OwogICAgICB9CgogICAgICByZXR1cm4gYXBtVmFsdWU7CiAgICB9LAoKICAgIHRvZ2dsZUFjdGl2ZSgpIHsKICAgICAgaWYgKHRoaXMuZGlzYWJsZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuaXNBY3RpdmUgPSAhdGhpcy5pc0FjdGl2ZTsKCiAgICAgIGlmICh0aGlzLmlzQWN0aXZlKSB7CiAgICAgICAgdGhpcy5pc0ZvY3VzaW5nID0gdHJ1ZTsKCiAgICAgICAgaWYgKHRoaXMubWFudWFsSW5wdXQpIHsKICAgICAgICAgIHRoaXMuJGVtaXQoJ2ZvY3VzJyk7CiAgICAgICAgfQoKICAgICAgICBpZiAoIXRoaXMub3B0cy5oaWRlRHJvcGRvd24pIHsKICAgICAgICAgIHRoaXMuc2V0RHJvcGRvd25TdGF0ZSh0cnVlKTsKICAgICAgICB9IC8vIFJlY29yZCB0byBjaGVjayBpZiB2YWx1ZSBkaWQgY2hhbmdlIGluIHRoZSBsYXRlciBwaGFzZQoKCiAgICAgICAgaWYgKHRoaXMubGF6eSkgewogICAgICAgICAgdGhpcy5iYWtEaXNwbGF5VGltZSA9IFN0cmluZyh0aGlzLmRpc3BsYXlUaW1lIHx8ICcnKTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLm1hbnVhbElucHV0ICYmICF0aGlzLmlucHV0SXNFbXB0eSkgewogICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgICBpZiAodGhpcy4kcmVmcy5pbnB1dCAmJiB0aGlzLiRyZWZzLmlucHV0LnNlbGVjdGlvblN0YXJ0ID09PSAwICYmIHRoaXMuJHJlZnMuaW5wdXQuc2VsZWN0aW9uRW5kID09PSB0aGlzLmRpc3BsYXlUaW1lLmxlbmd0aCkgewogICAgICAgICAgICAgIC8vIFNlbGVjdCB0aGUgZmlyc3Qgc2xvdCBpbnN0ZWFkIG9mIHRoZSB3aG9sZSB2YWx1ZSBzdHJpbmcgd2hlbiB0YWJiZWQgaW4KICAgICAgICAgICAgICB0aGlzLnNlbGVjdEZpcnN0U2xvdCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHRoaXMuc2hvd0Ryb3Bkb3duKSB7CiAgICAgICAgICB0aGlzLnNldERyb3Bkb3duU3RhdGUoZmFsc2UpOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5tYW51YWxJbnB1dCkgewogICAgICAgICAgdGhpcy4kZW1pdCgnYmx1cicsIHRoaXMuZ2V0RnVsbERhdGEoKSk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLmlzRm9jdXNpbmcgPSBmYWxzZTsKCiAgICAgICAgaWYgKHRoaXMubGF6eSkgewogICAgICAgICAgdGhpcy5maWxsVmFsdWVzKHRydWUpOwogICAgICAgICAgdGhpcy5iYWtEaXNwbGF5VGltZSA9IHVuZGVmaW5lZDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnJlc3RyaWN0ZWRIb3VyUmFuZ2UgJiYgdGhpcy5iYXNlT24xMkhvdXJzKSB7CiAgICAgICAgdGhpcy5zaG93RHJvcGRvd24gPyB0aGlzLmZvcmNlQXBtU2VsZWN0aW9uKCkgOiB0aGlzLmVtcHR5QXBtU2VsZWN0aW9uKCk7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnNob3dEcm9wZG93bikgewogICAgICAgIHRoaXMuY2hlY2tGb3JBdXRvU2Nyb2xsKCk7CiAgICAgIH0KICAgIH0sCgogICAgc2V0RHJvcGRvd25TdGF0ZSh0b1Nob3csIGZyb21Vc2VyQ2xpY2sgPSBmYWxzZSkgewogICAgICBpZiAodG9TaG93KSB7CiAgICAgICAgaWYgKHRoaXMuYXBwZW5kVG9Cb2R5KSB7CiAgICAgICAgICB0aGlzLmFwcGVuZERyb3Bkb3duVG9Cb2R5KCk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLmtlZXBGb2N1c2luZygpOwoKICAgICAgICBpZiAodGhpcy5hdXRvRGlyZWN0aW9uRW5hYmxlZCkgewogICAgICAgICAgdGhpcy5jaGVja0Ryb3BEaXJlY3Rpb24oKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuc2hvd0Ryb3Bkb3duID0gdHJ1ZTsKICAgICAgICB0aGlzLiRlbWl0KCdvcGVuJyk7CgogICAgICAgIGlmIChmcm9tVXNlckNsaWNrKSB7CiAgICAgICAgICBpZiAodGhpcy5maXhlZERyb3Bkb3duQnV0dG9uKSB7CiAgICAgICAgICAgIHRoaXMuaXNBY3RpdmUgPSB0cnVlOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuJGVtaXQoJ2JsdXInLCB0aGlzLmdldEZ1bGxEYXRhKCkpOwogICAgICAgICAgdGhpcy5jaGVja0ZvckF1dG9TY3JvbGwoKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zaG93RHJvcGRvd24gPSBmYWxzZTsKICAgICAgICB0aGlzLiRlbWl0KCdjbG9zZScsIHRoaXMuZ2V0RnVsbERhdGEoKSk7CgogICAgICAgIGlmICh0aGlzLmFwcGVuZFRvQm9keSkgewogICAgICAgICAgdGhpcy5yZW1vdmVEcm9wZG93bkZyb21Cb2R5KCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIGFwcGVuZERyb3Bkb3duVG9Cb2R5KCkgewogICAgICBjb25zdCBkcm9wZG93biA9IHRoaXMuJHJlZnMgJiYgdGhpcy4kcmVmcy5kcm9wZG93bjsKICAgICAgY29uc3QgYm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF07CgogICAgICBpZiAoYm9keSAmJiBkcm9wZG93bikgewogICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLnVwZGF0ZURyb3Bkb3duUG9zKTsKICAgICAgICBkcm9wZG93bi5jbGFzc0xpc3QuYWRkKCd2dWVfX3RpbWUtcGlja2VyLWRyb3Bkb3duJyk7CiAgICAgICAgdGhpcy51cGRhdGVEcm9wZG93blBvcygpOwogICAgICAgIGJvZHkuYXBwZW5kQ2hpbGQoZHJvcGRvd24pOwogICAgICB9CiAgICB9LAoKICAgIHVwZGF0ZURyb3Bkb3duUG9zKCkgewogICAgICBpZiAoIXRoaXMuYXBwZW5kVG9Cb2R5KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBkcm9wZG93biA9IHRoaXMuJHJlZnMgJiYgdGhpcy4kcmVmcy5kcm9wZG93bjsKICAgICAgY29uc3QgYm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF07CgogICAgICBpZiAoYm9keSAmJiBkcm9wZG93bikgewogICAgICAgIGNvbnN0IGJveCA9IHRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwoKICAgICAgICBpZiAodGhpcy5kcm9wZG93bkRpckNsYXNzID09PSAnZHJvcC11cCcpIHsKICAgICAgICAgIGRyb3Bkb3duLnN0eWxlLmJvdHRvbSA9IGAke3dpbmRvdy5pbm5lckhlaWdodCAtIGJveC55fXB4YDsKICAgICAgICAgIGRyb3Bkb3duLnN0eWxlLnRvcCA9ICdhdXRvJzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZHJvcGRvd24uc3R5bGUudG9wID0gYCR7Ym94LnkgKyBib3guaGVpZ2h0fXB4YDsKICAgICAgICAgIGRyb3Bkb3duLnN0eWxlLmJvdHRvbSA9ICdhdXRvJzsKICAgICAgICB9CgogICAgICAgIGRyb3Bkb3duLnN0eWxlLmxlZnQgPSBgJHtib3gueH1weGA7CiAgICAgIH0KICAgIH0sCgogICAgcmVtb3ZlRHJvcGRvd25Gcm9tQm9keSgpIHsKICAgICAgY29uc3QgZHJvcGRvd24gPSB0aGlzLiRyZWZzICYmIHRoaXMuJHJlZnMuZHJvcGRvd247CiAgICAgIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdOwoKICAgICAgaWYgKGJvZHkgJiYgZHJvcGRvd24gJiYgYm9keS5jb250YWlucyhkcm9wZG93bikpIHsKICAgICAgICBib2R5LnJlbW92ZUNoaWxkKGRyb3Bkb3duKTsKICAgICAgfQoKICAgICAgaWYgKGRyb3Bkb3duKSB7CiAgICAgICAgZHJvcGRvd24uY2xhc3NMaXN0LnJlbW92ZSgndnVlX190aW1lLXBpY2tlci1kcm9wZG93bicpOwogICAgICAgIGRyb3Bkb3duLnN0eWxlLnRvcCA9ICcnOwogICAgICAgIGRyb3Bkb3duLnN0eWxlLmJvdHRvbSA9ICcnOwogICAgICAgIGRyb3Bkb3duLnN0eWxlLmxlZnQgPSAnJzsKICAgICAgICB0aGlzLiRlbC5hcHBlbmRDaGlsZChkcm9wZG93bik7CiAgICAgIH0KCiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLnVwZGF0ZURyb3Bkb3duUG9zKTsKICAgIH0sCgogICAgYmx1ckV2ZW50KCkgewogICAgICBpZiAodGhpcy5tYW51YWxJbnB1dCAmJiAhdGhpcy5vcHRzLmhpZGVEcm9wZG93bikgewogICAgICAgIC8vIGhpZGVEcm9wZG93bidzIGBibHVyYCBldmVudCBpcyBoYW5kbGVkIHNvbWV3aGVyZSBlbHNlCiAgICAgICAgdGhpcy4kZW1pdCgnYmx1cicsIHRoaXMuZ2V0RnVsbERhdGEoKSk7CiAgICAgIH0KICAgIH0sCgogICAgc2VsZWN0KHR5cGUsIHZhbHVlKSB7CiAgICAgIGlmICh0aGlzLmlzQmFzaWNUeXBlKHR5cGUpICYmICF0aGlzLmlzRGlzYWJsZWQodHlwZSwgdmFsdWUpKSB7CiAgICAgICAgdGhpc1t0eXBlXSA9IHZhbHVlOwoKICAgICAgICBpZiAodGhpcy5kb0NsZWFyQXBtQ2hlY2tpbmcpIHsKICAgICAgICAgIHRoaXMuZG9DbGVhckFwbUNoZWNraW5nID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIGNsZWFyVGltZSgpIHsKICAgICAgaWYgKHRoaXMuZGlzYWJsZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuaG91ciA9ICcnOwogICAgICB0aGlzLm1pbnV0ZSA9ICcnOwogICAgICB0aGlzLnNlY29uZCA9ICcnOwogICAgICB0aGlzLmFwbSA9ICcnOwoKICAgICAgaWYgKHRoaXMubWFudWFsSW5wdXQgJiYgdGhpcy4kcmVmcyAmJiB0aGlzLiRyZWZzLmlucHV0ICYmIHRoaXMuJHJlZnMuaW5wdXQudmFsdWUubGVuZ3RoKSB7CiAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC52YWx1ZSA9ICcnOwogICAgICB9CgogICAgICBpZiAodGhpcy5sYXp5KSB7CiAgICAgICAgdGhpcy5maWxsVmFsdWVzKHRydWUpOwogICAgICB9CiAgICB9LAoKICAgIC8vCiAgICAvLyBBdXRvLVNjcm9sbAogICAgLy8KICAgIGNoZWNrRm9yQXV0b1Njcm9sbCgpIHsKICAgICAgaWYgKHRoaXMuaW5wdXRJc0VtcHR5KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAodGhpcy5hdXRvU2Nyb2xsKSB7CiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgdGhpcy5zY3JvbGxUb1NlbGVjdGVkVmFsdWVzKCk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5hZHZhbmNlZEtleWJvYXJkKSB7CiAgICAgICAgLy8gQXV0by1mb2N1cyBvbiBzZWxlY3RlZCB2YWx1ZSBpbiB0aGUgZmlyc3QgY29sdW1uIGZvciBhZHZhbmNlZC1rZXlib2FyZAogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIGNvbnN0IGZpcnN0Q29sdW1uID0gdGhpcy5pblVzZS50eXBlc1swXTsKICAgICAgICAgIHRoaXMuc2Nyb2xsVG9TZWxlY3RlZChmaXJzdENvbHVtbiwgdHJ1ZSk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgc2Nyb2xsVG9TZWxlY3RlZChjb2x1bW4sIGFsbG93RmFsbGJhY2sgPSBmYWxzZSkgewogICAgICBpZiAoIXRoaXMudGltZVZhbHVlIHx8IHRoaXMuaW5wdXRJc0VtcHR5KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBsZXQgdGFyZ2V0TGlzdDsKCiAgICAgIGlmICh0aGlzLmFwcGVuZFRvQm9keSAmJiB0aGlzLiRyZWZzICYmIHRoaXMuJHJlZnMuZHJvcGRvd24pIHsKICAgICAgICB0YXJnZXRMaXN0ID0gdGhpcy4kcmVmcy5kcm9wZG93bi5xdWVyeVNlbGVjdG9yQWxsKGB1bC4ke2NvbHVtbn1zYClbMF07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGFyZ2V0TGlzdCA9IHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoYHVsLiR7Y29sdW1ufXNgKVswXTsKICAgICAgfQoKICAgICAgbGV0IHRhcmdldFZhbHVlID0gdGhpcy5hY3RpdmVJdGVtSW5Db2woY29sdW1uKVswXTsKCiAgICAgIGlmICghdGFyZ2V0VmFsdWUgJiYgYWxsb3dGYWxsYmFjaykgewogICAgICAgIC8vIE5vIHZhbHVlIHNlbGVjdGVkIGluIHRoZSB0YXJnZXQgY29sdW1uLCBmYWxsYmFjayB0byB0aGUgZmlyc3QgZm91bmQgdmFsaWQgaXRlbQogICAgICAgIHRhcmdldFZhbHVlID0gdGhpcy52YWxpZEl0ZW1zSW5Db2woY29sdW1uKVswXTsKICAgICAgfQoKICAgICAgaWYgKHRhcmdldExpc3QgJiYgdGFyZ2V0VmFsdWUpIHsKICAgICAgICB0YXJnZXRMaXN0LnNjcm9sbFRvcCA9IHRhcmdldFZhbHVlLm9mZnNldFRvcCB8fCAwOwoKICAgICAgICBpZiAodGhpcy5hZHZhbmNlZEtleWJvYXJkKSB7CiAgICAgICAgICB0YXJnZXRWYWx1ZS5mb2N1cygpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICBzY3JvbGxUb1NlbGVjdGVkVmFsdWVzKCkgewogICAgICBpZiAoIXRoaXMudGltZVZhbHVlIHx8IHRoaXMuaW5wdXRJc0VtcHR5KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLmluVXNlLnR5cGVzLmZvckVhY2goc2VjdGlvbiA9PiB7CiAgICAgICAgdGhpcy5zY3JvbGxUb1NlbGVjdGVkKHNlY3Rpb24pOwogICAgICB9KTsKICAgIH0sCgogICAgLy8KICAgIC8vIEFkZGl0aW9uYWwgS2V5Ym9hcmQgTmF2aWdhdGlvbgogICAgLy8KICAgIG9uRm9jdXMoKSB7CiAgICAgIGlmICh0aGlzLmRpc2FibGVkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAoIXRoaXMuaXNGb2N1c2luZykgewogICAgICAgIHRoaXMuaXNGb2N1c2luZyA9IHRydWU7CiAgICAgIH0KCiAgICAgIGlmICghdGhpcy5pc0FjdGl2ZSkgewogICAgICAgIHRoaXMudG9nZ2xlQWN0aXZlKCk7CiAgICAgIH0KICAgIH0sCgogICAgZXNjQmx1cigpIHsKICAgICAgaWYgKHRoaXMuZGlzYWJsZWQpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5kZWJvdW5jZVRpbWVyKTsKICAgICAgdGhpcy5pc0ZvY3VzaW5nID0gZmFsc2U7CiAgICAgIGNvbnN0IGlucHV0Qm94ID0gdGhpcy4kZWwucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQuZGlzcGxheS10aW1lJylbMF07CgogICAgICBpZiAoaW5wdXRCb3gpIHsKICAgICAgICBpbnB1dEJveC5ibHVyKCk7CiAgICAgIH0KICAgIH0sCgogICAgZGVib3VuY2VCbHVyKCkgewogICAgICBpZiAodGhpcy5kaXNhYmxlZCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5pc0ZvY3VzaW5nID0gZmFsc2U7CiAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5kZWJvdW5jZVRpbWVyKTsKICAgICAgdGhpcy5kZWJvdW5jZVRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5kZWJvdW5jZVRpbWVyKTsKICAgICAgICB0aGlzLm9uQmx1cigpOwogICAgICB9LCB0aGlzLm9wdHMuYmx1ckRlbGF5KTsKICAgIH0sCgogICAgb25CbHVyKCkgewogICAgICBpZiAoIXRoaXMuZGlzYWJsZWQgJiYgIXRoaXMuaXNGb2N1c2luZyAmJiB0aGlzLmlzQWN0aXZlKSB7CiAgICAgICAgdGhpcy50b2dnbGVBY3RpdmUoKTsKICAgICAgfQogICAgfSwKCiAgICBrZWVwRm9jdXNpbmcoKSB7CiAgICAgIGlmICh0aGlzLmRpc2FibGVkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMuZGVib3VuY2VUaW1lcik7CgogICAgICBpZiAoIXRoaXMuaXNGb2N1c2luZykgewogICAgICAgIHRoaXMuaXNGb2N1c2luZyA9IHRydWU7CiAgICAgIH0KICAgIH0sCgogICAgb25UYWIoY29sdW1uLCB2YWx1ZSwgZXZ0KSB7CiAgICAgIGlmICh0aGlzLmFwcGVuZFRvQm9keSAmJiBldnQuc2hpZnRLZXkpIHsKICAgICAgICBjb25zdCBmaXJzdENvbHVtbiA9IHRoaXMuaW5Vc2UudHlwZXNbMF07CgogICAgICAgIGlmIChjb2x1bW4gIT09IGZpcnN0Q29sdW1uKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBjb25zdCBmaXJzdFZhbGlkVmFsdWUgPSB0aGlzLnZhbGlkSXRlbXNJbkNvbChmaXJzdENvbHVtbilbMF07IC8vIElzIHRoZSBmaXJzdCB2YWxpZCBpdGVtIGluIHRoZSBmaXJzdCBjb2x1bW4KCiAgICAgICAgaWYgKGZpcnN0VmFsaWRWYWx1ZSAmJiBmaXJzdFZhbGlkVmFsdWUuZ2V0QXR0cmlidXRlKCdkYXRhLWtleScpID09PSBTdHJpbmcodmFsdWUpKSB7CiAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTsgLy8gRm9jdXMgYmFjayBvbiA8aW5wdXQ+CgogICAgICAgICAgaWYgKHRoaXMuJHJlZnMgJiYgdGhpcy4kcmVmcy5pbnB1dCkgewogICAgICAgICAgICB0aGlzLiRyZWZzLmlucHV0LmZvY3VzKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIHZhbGlkSXRlbXNJbkNvbChjb2x1bW4pIHsKICAgICAgY29uc3QgY29sdW1uQ2xhc3MgPSBgJHtjb2x1bW59c2A7CgogICAgICBpZiAodGhpcy5hcHBlbmRUb0JvZHkgJiYgdGhpcy4kcmVmcyAmJiB0aGlzLiRyZWZzLmRyb3Bkb3duKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHJlZnMuZHJvcGRvd24ucXVlcnlTZWxlY3RvckFsbChgdWwuJHtjb2x1bW5DbGFzc30gPiBsaTpub3QoLmhpbnQpOm5vdChbZGlzYWJsZWRdKWApOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy4kZWwucXVlcnlTZWxlY3RvckFsbChgdWwuJHtjb2x1bW5DbGFzc30gPiBsaTpub3QoLmhpbnQpOm5vdChbZGlzYWJsZWRdKWApOwogICAgfSwKCiAgICBhY3RpdmVJdGVtSW5Db2woY29sdW1uKSB7CiAgICAgIGNvbnN0IGNvbHVtbkNsYXNzID0gYCR7Y29sdW1ufXNgOwoKICAgICAgaWYgKHRoaXMuYXBwZW5kVG9Cb2R5ICYmIHRoaXMuJHJlZnMgJiYgdGhpcy4kcmVmcy5kcm9wZG93bikgewogICAgICAgIHJldHVybiB0aGlzLiRyZWZzLmRyb3Bkb3duLnF1ZXJ5U2VsZWN0b3JBbGwoYHVsLiR7Y29sdW1uQ2xhc3N9ID4gbGkuYWN0aXZlOm5vdCguaGludClgKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoYHVsLiR7Y29sdW1uQ2xhc3N9ID4gbGkuYWN0aXZlOm5vdCguaGludClgKTsKICAgIH0sCgogICAgZ2V0Q2xvc2VzdFNpYmxpbmcoY29sdW1uLCBkYXRhS2V5LCBnZXRQcmV2aW91cyA9IGZhbHNlKSB7CiAgICAgIGNvbnN0IHNpYmxpbmdzSW5Db2wgPSB0aGlzLnZhbGlkSXRlbXNJbkNvbChjb2x1bW4pOwogICAgICBjb25zdCBzZWxmSW5kZXggPSBBcnJheS5wcm90b3R5cGUuZmluZEluZGV4LmNhbGwoc2libGluZ3NJbkNvbCwgc2JsID0+IHsKICAgICAgICByZXR1cm4gc2JsLmdldEF0dHJpYnV0ZSgnZGF0YS1rZXknKSA9PT0gZGF0YUtleTsKICAgICAgfSk7IC8vIEFscmVhZHkgdGhlIGZpcnN0IGl0ZW0KCiAgICAgIGlmIChnZXRQcmV2aW91cyAmJiBzZWxmSW5kZXggPT09IDApIHsKICAgICAgICByZXR1cm4gc2libGluZ3NJbkNvbFtzaWJsaW5nc0luQ29sLmxlbmd0aCAtIDFdOwogICAgICB9IC8vIEFscmVhZHkgdGhlIGxhc3QgaXRlbQoKCiAgICAgIGlmICghZ2V0UHJldmlvdXMgJiYgc2VsZkluZGV4ID09PSBzaWJsaW5nc0luQ29sLmxlbmd0aCAtIDEpIHsKICAgICAgICByZXR1cm4gc2libGluZ3NJbkNvbFswXTsKICAgICAgfSAvLyBTZWxlY3RlZCB2YWx1ZSBub3QgaW4gdGhlIHZhbGlkIHZhbHVlcyBsaXN0CgoKICAgICAgaWYgKHNlbGZJbmRleCA8IDApIHsKICAgICAgICByZXR1cm4gc2libGluZ3NJbkNvbFswXTsKICAgICAgfQoKICAgICAgaWYgKGdldFByZXZpb3VzKSB7CiAgICAgICAgcmV0dXJuIHNpYmxpbmdzSW5Db2xbc2VsZkluZGV4IC0gMV07CiAgICAgIH0KCiAgICAgIHJldHVybiBzaWJsaW5nc0luQ29sW3NlbGZJbmRleCArIDFdOwogICAgfSwKCiAgICBwcmV2SXRlbShjb2x1bW4sIGRhdGFLZXksIGlzTWFudWFsSW5wdXQgPSBmYWxzZSkgewogICAgICBjb25zdCB0YXJnZXRJdGVtID0gdGhpcy5nZXRDbG9zZXN0U2libGluZyhjb2x1bW4sIGRhdGFLZXksIHRydWUpOwoKICAgICAgaWYgKHRhcmdldEl0ZW0pIHsKICAgICAgICByZXR1cm4gaXNNYW51YWxJbnB1dCA/IHRhcmdldEl0ZW0gOiB0YXJnZXRJdGVtLmZvY3VzKCk7CiAgICAgIH0KICAgIH0sCgogICAgbmV4dEl0ZW0oY29sdW1uLCBkYXRhS2V5LCBpc01hbnVhbElucHV0ID0gZmFsc2UpIHsKICAgICAgY29uc3QgdGFyZ2V0SXRlbSA9IHRoaXMuZ2V0Q2xvc2VzdFNpYmxpbmcoY29sdW1uLCBkYXRhS2V5LCBmYWxzZSk7CgogICAgICBpZiAodGFyZ2V0SXRlbSkgewogICAgICAgIHJldHVybiBpc01hbnVhbElucHV0ID8gdGFyZ2V0SXRlbSA6IHRhcmdldEl0ZW0uZm9jdXMoKTsKICAgICAgfQogICAgfSwKCiAgICBnZXRTaWRlQ29sdW1uTmFtZShjdXJyZW50Q29sdW1uLCB0b0xlZnQgPSBmYWxzZSkgewogICAgICBjb25zdCBjdXJyZW50Q29sdW1uSW5kZXggPSB0aGlzLmluVXNlLnR5cGVzLmluZGV4T2YoY3VycmVudENvbHVtbik7CgogICAgICBpZiAodG9MZWZ0ICYmIGN1cnJlbnRDb2x1bW5JbmRleCA8PSAwKSB7CiAgICAgICAgaWYgKHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgICB0aGlzLmRlYnVnTG9nKCdZb3VcJ3JlIGluIHRoZSBsZWZ0bW9zdCBsaXN0IGFscmVhZHknKTsKICAgICAgICB9CgogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIGlmICghdG9MZWZ0ICYmIGN1cnJlbnRDb2x1bW5JbmRleCA9PT0gdGhpcy5pblVzZS50eXBlcy5sZW5ndGggLSAxKSB7CiAgICAgICAgaWYgKHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgICB0aGlzLmRlYnVnTG9nKCdZb3VcJ3JlIGluIHRoZSByaWdodG1vc3QgbGlzdCBhbHJlYWR5Jyk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLmluVXNlLnR5cGVzW3RvTGVmdCA/IGN1cnJlbnRDb2x1bW5JbmRleCAtIDEgOiBjdXJyZW50Q29sdW1uSW5kZXggKyAxXTsKICAgIH0sCgogICAgZ2V0Rmlyc3RJdGVtSW5TaWRlQ29sdW1uKGN1cnJlbnRDb2x1bW4sIHRvTGVmdCA9IGZhbHNlKSB7CiAgICAgIGNvbnN0IHRhcmdldENvbHVtbiA9IHRoaXMuZ2V0U2lkZUNvbHVtbk5hbWUoY3VycmVudENvbHVtbiwgdG9MZWZ0KTsKCiAgICAgIGlmICghdGFyZ2V0Q29sdW1uKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBsaXN0SXRlbXMgPSB0aGlzLnZhbGlkSXRlbXNJbkNvbCh0YXJnZXRDb2x1bW4pOwoKICAgICAgaWYgKGxpc3RJdGVtcyAmJiBsaXN0SXRlbXNbMF0pIHsKICAgICAgICByZXR1cm4gbGlzdEl0ZW1zWzBdOwogICAgICB9CiAgICB9LAoKICAgIGdldEFjdGl2ZUl0ZW1JblNpZGVDb2x1bW4oY3VycmVudENvbHVtbiwgdG9MZWZ0ID0gZmFsc2UpIHsKICAgICAgY29uc3QgdGFyZ2V0Q29sdW1uID0gdGhpcy5nZXRTaWRlQ29sdW1uTmFtZShjdXJyZW50Q29sdW1uLCB0b0xlZnQpOwoKICAgICAgaWYgKCF0YXJnZXRDb2x1bW4pIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IGFjdGl2ZUl0ZW1zID0gdGhpcy5hY3RpdmVJdGVtSW5Db2wodGFyZ2V0Q29sdW1uKTsKCiAgICAgIGlmIChhY3RpdmVJdGVtcyAmJiBhY3RpdmVJdGVtc1swXSkgewogICAgICAgIHJldHVybiBhY3RpdmVJdGVtc1swXTsKICAgICAgfQogICAgfSwKCiAgICB0b0xlZnRDb2x1bW4oY3VycmVudENvbHVtbikgewogICAgICBjb25zdCB0YXJnZXRJdGVtID0gdGhpcy5nZXRBY3RpdmVJdGVtSW5TaWRlQ29sdW1uKGN1cnJlbnRDb2x1bW4sIHRydWUpIHx8IHRoaXMuZ2V0Rmlyc3RJdGVtSW5TaWRlQ29sdW1uKGN1cnJlbnRDb2x1bW4sIHRydWUpOwoKICAgICAgaWYgKHRhcmdldEl0ZW0pIHsKICAgICAgICB0YXJnZXRJdGVtLmZvY3VzKCk7CiAgICAgIH0KICAgIH0sCgogICAgdG9SaWdodENvbHVtbihjdXJyZW50Q29sdW1uKSB7CiAgICAgIGNvbnN0IHRhcmdldEl0ZW0gPSB0aGlzLmdldEFjdGl2ZUl0ZW1JblNpZGVDb2x1bW4oY3VycmVudENvbHVtbiwgZmFsc2UpIHx8IHRoaXMuZ2V0Rmlyc3RJdGVtSW5TaWRlQ29sdW1uKGN1cnJlbnRDb2x1bW4sIGZhbHNlKTsKCiAgICAgIGlmICh0YXJnZXRJdGVtKSB7CiAgICAgICAgdGFyZ2V0SXRlbS5mb2N1cygpOwogICAgICB9CiAgICB9LAoKICAgIC8vCiAgICAvLyBNYW51YWwgSW5wdXQKICAgIC8vCiAgICBvbk1vdXNlRG93bigpIHsKICAgICAgaWYgKCF0aGlzLm1hbnVhbElucHV0KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMuc2VsZWN0aW9uVGltZXIpOwogICAgICB0aGlzLnNlbGVjdGlvblRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHdpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5zZWxlY3Rpb25UaW1lcik7CgogICAgICAgIGlmICh0aGlzLiRyZWZzICYmIHRoaXMuJHJlZnMuaW5wdXQpIHsKICAgICAgICAgIGNvbnN0IG5lYXJlc3RTbG90ID0gdGhpcy5nZXROZWFyZXN0Q2h1bmtCeVBvcyh0aGlzLiRyZWZzLmlucHV0LnNlbGVjdGlvblN0YXJ0IHx8IDApOwogICAgICAgICAgdGhpcy5kZWJvdW5jZVNldElucHV0U2VsZWN0aW9uKG5lYXJlc3RTbG90KTsKICAgICAgICB9CiAgICAgIH0sIDUwKTsKICAgIH0sCgogICAga2V5RG93bkhhbmRsZXIoZXZ0KSB7CiAgICAgIGlmIChldnQuaXNDb21wb3NpbmcgfHwgZXZ0LmtleUNvZGUgPT09IDIyOSkgewogICAgICAgIC8vIFNraXAgSU1FIGlucHV0cwogICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0gLy8gTnVtYmVycwoKCiAgICAgIGlmIChldnQua2V5Q29kZSA+PSA0OCAmJiBldnQua2V5Q29kZSA8PSA1NyB8fCBldnQua2V5Q29kZSA+PSA5NiAmJiBldnQua2V5Q29kZSA8PSAxMDUpIHsKICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB0aGlzLmtleWJvYXJkSW5wdXQoZXZ0LmtleSk7IC8vIEF8UHxNCiAgICAgIH0gZWxzZSBpZiAoWzY1LCA4MCwgNzddLmluY2x1ZGVzKGV2dC5rZXlDb2RlKSkgewogICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIHRoaXMua2V5Ym9hcmRJbnB1dChldnQua2V5LCB0cnVlKTsgLy8gQXJyb3cga2V5cwogICAgICB9IGVsc2UgaWYgKGV2dC5rZXlDb2RlID49IDM3ICYmIGV2dC5rZXlDb2RlIDw9IDQwKSB7CiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgdGhpcy5jbGVhcktiSW5wdXRMb2coKTsKICAgICAgICB0aGlzLmFycm93SGFuZGxlcihldnQpOyAvLyBEZWxldGV8QmFja3NwYWNlCiAgICAgIH0gZWxzZSBpZiAoZXZ0LmtleUNvZGUgPT09IDggfHwgZXZ0LmtleUNvZGUgPT09IDQ2KSB7CiAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgdGhpcy5jbGVhcktiSW5wdXRMb2coKTsKICAgICAgICB0aGlzLmNsZWFyVGltZSgpOyAvLyBUYWIKICAgICAgfSBlbHNlIGlmIChldnQua2V5Q29kZSA9PT0gOSkgewogICAgICAgIHRoaXMuY2xlYXJLYklucHV0TG9nKCk7CiAgICAgICAgdGhpcy50YWJIYW5kbGVyKGV2dCk7IC8vIENvbG9ufFNwYWNlCiAgICAgIH0gZWxzZSBpZiAoZXZ0LmtleUNvZGUgPT09IDE4NiB8fCBldnQua2V5Q29kZSA9PT0gMzIpIHsKICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB0aGlzLmNsZWFyS2JJbnB1dExvZygpOwogICAgICAgIHRoaXMudG9OZXh0U2xvdCgpOyAvLyBQcmV2ZW50IGFueSBOb24tRVNDIGFuZCBub24tcGFzdGluZyBpbnB1dHMKICAgICAgfSBlbHNlIGlmIChldnQua2V5Q29kZSAhPT0gMjcgJiYgIShldnQubWV0YUtleSB8fCBldnQuY3RybEtleSkpIHsKICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgfQogICAgfSwKCiAgICBvbkNvbXBvc3Rpb25TdGFydChldnQpIHsKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgdGhpcy5iYWtDdXJyZW50UG9zID0gdGhpcy5nZXRDdXJyZW50VG9rZW5DaHVuaygpOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAoKICAgIG9uQ29tcG9zdGlvbkVuZChldnQpIHsKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgY29uc3QgY3BzRGF0YSA9IGV2dC5kYXRhOwogICAgICBsZXQgaW5wdXRJc0N1c3RvbUFwbVRleHQgPSBmYWxzZTsKCiAgICAgIGlmICh0aGlzLmhhcy5jdXN0b21BcG1UZXh0KSB7CiAgICAgICAgaW5wdXRJc0N1c3RvbUFwbVRleHQgPSB0aGlzLmlzQ3VzdG9tQXBtVGV4dChjcHNEYXRhKTsKICAgICAgfQoKICAgICAgaWYgKGlucHV0SXNDdXN0b21BcG1UZXh0KSB7CiAgICAgICAgdGhpcy5zZXRTYW5pdGl6ZWRWYWx1ZVRvU2VjdGlvbignYXBtJywgaW5wdXRJc0N1c3RvbUFwbVRleHQpOwogICAgICB9CgogICAgICB0aGlzLiRyZWZzLmlucHV0LnZhbHVlID0gdGhpcy5oYXMuY3VzdG9tQXBtVGV4dCA/IHRoaXMuY3VzdG9tRGlzcGxheVRpbWUgOiB0aGlzLmRpc3BsYXlUaW1lOwogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgaWYgKHRoaXMuYmFrQ3VycmVudFBvcykgewogICAgICAgICAgY29uc3QgYmFrUG9zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLmJha0N1cnJlbnRQb3MpKTsKCiAgICAgICAgICBpZiAoaW5wdXRJc0N1c3RvbUFwbVRleHQpIHsKICAgICAgICAgICAgYmFrUG9zLmVuZCA9IGJha1Bvcy5zdGFydCArIGNwc0RhdGEubGVuZ3RoOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuZGVib3VuY2VTZXRJbnB1dFNlbGVjdGlvbihiYWtQb3MpOwogICAgICAgICAgdGhpcy5iYWtDdXJyZW50UG9zID0gbnVsbDsKICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAoKICAgIHBhc3RlSGFuZGxlcihldnQpIHsKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIGxldCBwYXN0aW5nVGV4dCA9IChldnQuY2xpcGJvYXJkRGF0YSB8fCB3aW5kb3cuY2xpcGJvYXJkRGF0YSkuZ2V0RGF0YSgndGV4dCcpOwoKICAgICAgaWYgKHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgdGhpcy5kZWJ1Z0xvZyhgUGFzdGluZyB2YWx1ZSAiJHtwYXN0aW5nVGV4dH0iIGZyb20gY2xpcGJvYXJkYCk7CiAgICAgIH0KCiAgICAgIGlmICghcGFzdGluZ1RleHQgfHwgIXBhc3RpbmdUZXh0Lmxlbmd0aCkgewogICAgICAgIHJldHVybjsKICAgICAgfSAvLyBSZXBsYWNlIGN1c3RvbSBBTS9QTSB0ZXh0IChpZiBhbnkpCgoKICAgICAgaWYgKHRoaXMuaGFzLmN1c3RvbUFwbVRleHQpIHsKICAgICAgICBwYXN0aW5nVGV4dCA9IHRoaXMucmVwbGFjZUN1c3RvbUFwbVRleHQocGFzdGluZ1RleHQpOwogICAgICB9CgogICAgICBpZiAodGhpcy5pbnB1dElzRW1wdHkpIHsKICAgICAgICB0aGlzLnJlYWRTdHJpbmdWYWx1ZXMocGFzdGluZ1RleHQpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMua2JJbnB1dExvZyA9IHBhc3RpbmdUZXh0LnN1YnN0cigtMiwgMik7CiAgICAgICAgdGhpcy5zZXRLYklucHV0KCk7CiAgICAgICAgdGhpcy5kZWJvdW5jZUNsZWFyS2JMb2coKTsKICAgICAgfQogICAgfSwKCiAgICBhcnJvd0hhbmRsZXIoZXZ0KSB7CiAgICAgIGNvbnN0IGRpcmVjdGlvbiA9IHsKICAgICAgICAzNzogJ0wnLAogICAgICAgIDM4OiAnVScsCiAgICAgICAgMzk6ICdSJywKICAgICAgICA0MDogJ0QnCiAgICAgIH1bZXZ0LmtleUNvZGVdOwoKICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gJ1UnIHx8IGRpcmVjdGlvbiA9PT0gJ0QnKSB7CiAgICAgICAgaWYgKHRoaXMuaW5wdXRJc0VtcHR5KSB7CiAgICAgICAgICB0aGlzLnNlbGVjdEZpcnN0VmFsaWRWYWx1ZSgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zdCBjdXJyZW50Q2h1bmsgPSB0aGlzLmdldEN1cnJlbnRUb2tlbkNodW5rKCk7CgogICAgICAgICAgaWYgKCFjdXJyZW50Q2h1bmspIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3RGaXJzdFZhbGlkVmFsdWUoKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQoKICAgICAgICAgIGNvbnN0IHRva2VuVHlwZSA9IGN1cnJlbnRDaHVuay50eXBlOwogICAgICAgICAgdGhpcy5nZXRDbG9zZXN0VmFsaWRJdGVtSW5Db2wodG9rZW5UeXBlLCB0aGlzW3Rva2VuVHlwZV0sIGRpcmVjdGlvbik7CiAgICAgICAgICBjb25zdCBuZXdDaHVua1BvcyA9IHRoaXMuZ2V0Q3VycmVudFRva2VuQ2h1bmsoKTsKICAgICAgICAgIHRoaXMuZGVib3VuY2VTZXRJbnB1dFNlbGVjdGlvbihuZXdDaHVua1Bvcyk7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ1InKSB7CiAgICAgICAgdGhpcy50b0xhdGVyYWxUb2tlbihmYWxzZSk7CiAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAnTCcpIHsKICAgICAgICB0aGlzLnRvTGF0ZXJhbFRva2VuKHRydWUpOwogICAgICB9CiAgICB9LAoKICAgIHRhYkhhbmRsZXIoZXZ0KSB7CiAgICAgIGlmICghdGhpcy5pbnB1dElzRW1wdHkgJiYgdGhpcy50b2tlbkNodW5rc1BvcyAmJiB0aGlzLnRva2VuQ2h1bmtzUG9zLmxlbmd0aCkgewogICAgICAgIGNvbnN0IGN1cnJlbnRDaHVuayA9IHRoaXMuZ2V0Q3VycmVudFRva2VuQ2h1bmsoKTsKCiAgICAgICAgaWYgKCFjdXJyZW50Q2h1bmspIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGNvbnN0IGZpcnN0Q2h1bmsgPSB0aGlzLnRva2VuQ2h1bmtzUG9zWzBdOwogICAgICAgIGNvbnN0IGxhc3RDaHVuayA9IHRoaXMudG9rZW5DaHVua3NQb3NbdGhpcy50b2tlbkNodW5rc1Bvcy5sZW5ndGggLSAxXTsKCiAgICAgICAgaWYgKGV2dC5zaGlmdEtleSAmJiBjdXJyZW50Q2h1bmsudG9rZW4gIT09IGZpcnN0Q2h1bmsudG9rZW4gfHwgIWV2dC5zaGlmdEtleSAmJiBjdXJyZW50Q2h1bmsudG9rZW4gIT09IGxhc3RDaHVuay50b2tlbikgewogICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICB0aGlzLnRvTGF0ZXJhbFRva2VuKGV2dC5zaGlmdEtleSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKHRoaXMuYXBwZW5kVG9Cb2R5ICYmIHRoaXMuYWR2YW5jZWRLZXlib2FyZCkgewogICAgICAgIGlmIChldnQuc2hpZnRLZXkpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICBpZiAodGhpcy5pbnB1dElzRW1wdHkpIHsKICAgICAgICAgIGNvbnN0IGZpcnN0Q29sdW1uID0gdGhpcy5pblVzZS50eXBlc1swXTsKICAgICAgICAgIGNvbnN0IHRhcmdldFZhbHVlID0gdGhpcy52YWxpZEl0ZW1zSW5Db2woZmlyc3RDb2x1bW4pWzBdOwoKICAgICAgICAgIGlmICh0YXJnZXRWYWx1ZSkgewogICAgICAgICAgICB0YXJnZXRWYWx1ZS5mb2N1cygpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICBrZXlib2FyZElucHV0KG5ld0NoYXIsIGlzQXBtID0gZmFsc2UpIHsKICAgICAgY29uc3QgY3VycmVudENodW5rID0gdGhpcy5nZXRDdXJyZW50VG9rZW5DaHVuaygpOwoKICAgICAgaWYgKCFjdXJyZW50Q2h1bmsgfHwgY3VycmVudENodW5rLnR5cGUgIT09ICdhcG0nICYmIGlzQXBtIHx8IGN1cnJlbnRDaHVuay50eXBlID09PSAnYXBtJyAmJiAhaXNBcG0pIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMua2JJbnB1dExvZyA9IGAke3RoaXMua2JJbnB1dExvZy5zdWJzdHIoLTEpfSR7bmV3Q2hhcn1gOwogICAgICB0aGlzLnNldEtiSW5wdXQoKTsKICAgICAgdGhpcy5kZWJvdW5jZUNsZWFyS2JMb2coKTsKICAgIH0sCgogICAgY2xlYXJLYklucHV0TG9nKCkgewogICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMua2JJbnB1dFRpbWVyKTsKICAgICAgdGhpcy5rYklucHV0TG9nID0gJyc7CiAgICB9LAoKICAgIGRlYm91bmNlQ2xlYXJLYkxvZygpIHsKICAgICAgd2luZG93LmNsZWFyVGltZW91dCh0aGlzLmtiSW5wdXRUaW1lcik7CiAgICAgIHRoaXMua2JJbnB1dFRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHRoaXMuY2xlYXJLYklucHV0TG9nKCk7CiAgICAgIH0sIHRoaXMub3B0cy5tYW51YWxJbnB1dFRpbWVvdXQpOwogICAgfSwKCiAgICBzZXRLYklucHV0KHZhbHVlKSB7CiAgICAgIHZhbHVlID0gdmFsdWUgfHwgdGhpcy5rYklucHV0TG9nOwogICAgICBjb25zdCBjdXJyZW50Q2h1bmsgPSB0aGlzLmdldEN1cnJlbnRUb2tlbkNodW5rKCk7CgogICAgICBpZiAoIWN1cnJlbnRDaHVuayB8fCAhdmFsdWUgfHwgIXZhbHVlLmxlbmd0aCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgY2h1bmtUeXBlID0gY3VycmVudENodW5rLnR5cGU7CiAgICAgIGNvbnN0IGNodW5rVG9rZW4gPSBjdXJyZW50Q2h1bmsudG9rZW47CiAgICAgIGxldCB2YWxpZFZhbHVlOwoKICAgICAgaWYgKGNodW5rVHlwZSA9PT0gJ2FwbScpIHsKICAgICAgICBpZiAodGhpcy5sb3dlckNhc2VkQXBtKHZhbHVlKS5pbmNsdWRlcygnYScpKSB7CiAgICAgICAgICB2YWxpZFZhbHVlID0gJ2FtJzsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMubG93ZXJDYXNlZEFwbSh2YWx1ZSkuaW5jbHVkZXMoJ3AnKSkgewogICAgICAgICAgdmFsaWRWYWx1ZSA9ICdwbSc7CiAgICAgICAgfQoKICAgICAgICBpZiAodmFsaWRWYWx1ZSkgewogICAgICAgICAgdmFsaWRWYWx1ZSA9IGNodW5rVG9rZW4gPT09ICdBJyA/IHZhbGlkVmFsdWUudG9VcHBlckNhc2UoKSA6IHZhbGlkVmFsdWU7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLmlzVmFsaWRWYWx1ZShjaHVua1Rva2VuLCB2YWx1ZSkpIHsKICAgICAgICAgIHZhbGlkVmFsdWUgPSB2YWx1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29uc3QgbGFzdElucHV0VmFsdWUgPSB0aGlzLmZvcm1hdFZhbHVlKGNodW5rVG9rZW4sIHZhbHVlLnN1YnN0cigtMSkpOwoKICAgICAgICAgIGlmICh0aGlzLmlzVmFsaWRWYWx1ZShjaHVua1Rva2VuLCBsYXN0SW5wdXRWYWx1ZSkpIHsKICAgICAgICAgICAgdmFsaWRWYWx1ZSA9IGxhc3RJbnB1dFZhbHVlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHZhbGlkVmFsdWUpIHsKICAgICAgICB0aGlzLnNldFNhbml0aXplZFZhbHVlVG9TZWN0aW9uKGNodW5rVHlwZSwgdmFsaWRWYWx1ZSk7CiAgICAgICAgY29uc3QgbmV3Q2h1bmtQb3MgPSB0aGlzLmdldEN1cnJlbnRUb2tlbkNodW5rKCk7CiAgICAgICAgdGhpcy5kZWJvdW5jZVNldElucHV0U2VsZWN0aW9uKG5ld0NodW5rUG9zKTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgaWYgKHZhbGlkVmFsdWUpIHsKICAgICAgICAgIHRoaXMuZGVidWdMb2coYFN1Y2Nlc3NmdWxseSBzZXQgdmFsdWUgIiR7dmFsaWRWYWx1ZX0iIGZyb20gbGF0ZXN0IGlucHV0ICIke3ZhbHVlfSIgZm9yIHRoZSAiJHtjaHVua1R5cGV9IiBzbG90YCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuZGVidWdMb2coYFZhbHVlICIke3ZhbHVlfSIgaXMgaW52YWxpZCBpbiB0aGUgIiR7Y2h1bmtUeXBlfSIgc2xvdGApOwogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICAvLyBGb3JtIEF1dG9maWxsCiAgICBvbkNoYW5nZSgpIHsKICAgICAgaWYgKCF0aGlzLm1hbnVhbElucHV0IHx8ICF0aGlzLiRyZWZzIHx8ICF0aGlzLiRyZWZzLmlucHV0KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBhdXRvRmlsbFZhbHVlID0gdGhpcy4kcmVmcy5pbnB1dC52YWx1ZSB8fCAnJzsKCiAgICAgIGlmIChhdXRvRmlsbFZhbHVlICYmIGF1dG9GaWxsVmFsdWUubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5yZWFkU3RyaW5nVmFsdWVzKGF1dG9GaWxsVmFsdWUpOwogICAgICB9CiAgICB9LAoKICAgIGdldE5lYXJlc3RDaHVua0J5UG9zKHN0YXJ0UG9zKSB7CiAgICAgIGlmICghdGhpcy50b2tlbkNodW5rc1BvcyB8fCAhdGhpcy50b2tlbkNodW5rc1Bvcy5sZW5ndGgpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGxldCBuZWFyZXN0OwogICAgICBsZXQgbmVhcmVzdERlbHRhID0gLTE7CgogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudG9rZW5DaHVua3NQb3MubGVuZ3RoOyBpKyspIHsKICAgICAgICBjb25zdCBjaHVuayA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy50b2tlbkNodW5rc1Bvc1tpXSkpOwoKICAgICAgICBpZiAoY2h1bmsuc3RhcnQgPT09IHN0YXJ0UG9zKSB7CiAgICAgICAgICByZXR1cm4gY2h1bms7CiAgICAgICAgfQoKICAgICAgICBjb25zdCBkZWx0YSA9IE1hdGguYWJzKGNodW5rLnN0YXJ0IC0gc3RhcnRQb3MpOwoKICAgICAgICBpZiAobmVhcmVzdERlbHRhIDwgMCkgewogICAgICAgICAgbmVhcmVzdCA9IGNodW5rOwogICAgICAgICAgbmVhcmVzdERlbHRhID0gZGVsdGE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGlmIChuZWFyZXN0RGVsdGEgPD0gZGVsdGEpIHsKICAgICAgICAgICAgcmV0dXJuIG5lYXJlc3Q7CiAgICAgICAgICB9CgogICAgICAgICAgbmVhcmVzdERlbHRhID0gZGVsdGE7CiAgICAgICAgICBuZWFyZXN0ID0gY2h1bms7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gbmVhcmVzdDsKICAgIH0sCgogICAgc2VsZWN0Rmlyc3RWYWxpZFZhbHVlKCkgewogICAgICBpZiAoIXRoaXMudG9rZW5DaHVua3NQb3MgfHwgIXRoaXMudG9rZW5DaHVua3NQb3MubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBmaXJzdFNsb3RUeXBlID0gdGhpcy50b2tlbkNodW5rc1Bvc1swXS50eXBlOwoKICAgICAgaWYgKGZpcnN0U2xvdFR5cGUgPT09ICdob3VyJykgewogICAgICAgIHRoaXMuZ2V0Q2xvc2VzdEhvdXJJdGVtKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5nZXRDbG9zZXN0VmFsaWRJdGVtSW5Db2woZmlyc3RTbG90VHlwZSwgdGhpc1tmaXJzdFNsb3RUeXBlXSk7CiAgICAgIH0KCiAgICAgIHRoaXMuc2VsZWN0Rmlyc3RTbG90KCk7CiAgICB9LAoKICAgIGdldENsb3Nlc3RIb3VySXRlbShjdXJyZW50VmFsdWUsIGRpcmVjdGlvbiA9ICdVJykgewogICAgICBpZiAoIXRoaXMudmFsaWRIb3Vyc0xpc3QgfHwgIXRoaXMudmFsaWRIb3Vyc0xpc3QubGVuZ3RoKSB7CiAgICAgICAgaWYgKHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgICB0aGlzLmRlYnVnTG9nKGBObyB2YWxpZCBob3VyIHZhbHVlcyBmb3VuZCwgcGxlYXNlIGNoZWNrIHlvdXIgImhvdXItcmFuZ2UiIGNvbmZpZ1xuaG91ci1yYW5nZTogJHtKU09OLnN0cmluZ2lmeSh0aGlzLmhvdXJSYW5nZSl9YCk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICghY3VycmVudFZhbHVlKSB7CiAgICAgICAgdGhpcy5zZXRNYW51YWxIb3VyKHRoaXMudmFsaWRIb3Vyc0xpc3RbMF0pOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgY3VycmVudEluZGV4ID0gdGhpcy52YWxpZEhvdXJzTGlzdC5maW5kSW5kZXgoaXRlbSA9PiB7CiAgICAgICAgaWYgKCF0aGlzLmJhc2VPbjEySG91cnMpIHsKICAgICAgICAgIHJldHVybiBpdGVtID09PSBjdXJyZW50VmFsdWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnN0IHZhbHVlS2V5ID0gYCR7Y3VycmVudFZhbHVlfSR7dGhpcy5sb3dlckNhc2VkQXBtKHRoaXMuYXBtKSA9PT0gJ3BtJyA/ICdwJyA6ICdhJ31gOwogICAgICAgICAgcmV0dXJuIGl0ZW0gPT09IHZhbHVlS2V5OwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGxldCBuZXh0SW5kZXg7CgogICAgICBpZiAoY3VycmVudEluZGV4ID09PSAtMSkgewogICAgICAgIG5leHRJbmRleCA9IDA7CiAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09PSAnRCcpIHsKICAgICAgICBuZXh0SW5kZXggPSBjdXJyZW50SW5kZXggPT09IDAgPyB0aGlzLnZhbGlkSG91cnNMaXN0Lmxlbmd0aCAtIDEgOiBjdXJyZW50SW5kZXggLSAxOwogICAgICB9IGVsc2UgewogICAgICAgIG5leHRJbmRleCA9IChjdXJyZW50SW5kZXggKyAxKSAlIHRoaXMudmFsaWRIb3Vyc0xpc3QubGVuZ3RoOwogICAgICB9CgogICAgICBjb25zdCBuZXh0SXRlbSA9IHRoaXMudmFsaWRIb3Vyc0xpc3RbbmV4dEluZGV4XTsKICAgICAgdGhpcy5zZXRNYW51YWxIb3VyKG5leHRJdGVtKTsKICAgIH0sCgogICAgZ2V0Q2xvc2VzdFZhbGlkSXRlbUluQ29sKGNvbHVtbiwgY3VycmVudFZhbHVlLCBkaXJlY3Rpb24gPSAnVScpIHsKICAgICAgaWYgKGNvbHVtbiA9PT0gJ2hvdXInKSB7CiAgICAgICAgdGhpcy5nZXRDbG9zZXN0SG91ckl0ZW0oY3VycmVudFZhbHVlLCBkaXJlY3Rpb24pOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IG5leHRJdGVtID0gZGlyZWN0aW9uID09PSAnRCcgPyB0aGlzLnByZXZJdGVtKGNvbHVtbiwgdGhpc1tjb2x1bW5dLCB0cnVlKSA6IHRoaXMubmV4dEl0ZW0oY29sdW1uLCB0aGlzW2NvbHVtbl0sIHRydWUpOwoKICAgICAgICBpZiAobmV4dEl0ZW0pIHsKICAgICAgICAgIHRoaXMuc2VsZWN0KGNvbHVtbiwgbmV4dEl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLWtleScpKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCgogICAgc2V0U2FuaXRpemVkVmFsdWVUb1NlY3Rpb24oc2VjdGlvbiwgaW5wdXRWYWx1ZSkgewogICAgICBpZiAoIXNlY3Rpb24gfHwgIXRoaXMuZ2V0VG9rZW5CeVR5cGUoc2VjdGlvbikpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0gLy8gTk9URTogRGlzYWJsZWQgdmFsdWVzIGFyZSBhbGxvd2VkIGhlcmUsIGZvbGxvd2VkIGJ5IGFuICdlcnJvcicgZXZlbnQsIHRob3VnaAoKCiAgICAgIGNvbnN0IHNhbml0aXplZFZhbHVlID0gdGhpcy5zYW5pdGl6ZWRWYWx1ZSh0aGlzLmdldFRva2VuQnlUeXBlKHNlY3Rpb24pLCBpbnB1dFZhbHVlKTsKICAgICAgdGhpc1tzZWN0aW9uXSA9IHNhbml0aXplZFZhbHVlOwogICAgfSwKCiAgICBzZXRNYW51YWxIb3VyKG5leHRJdGVtKSB7CiAgICAgIGlmICh0aGlzLmlzMTJoUmFuZ2UobmV4dEl0ZW0pKSB7CiAgICAgICAgY29uc3QgaG91clQgPSB0aGlzLm1hdGNoMTJoUmFuZ2UobmV4dEl0ZW0pOwogICAgICAgIGNvbnN0IGFwbVZhbHVlID0gaG91clRbMl0gPT09ICdhJyA/ICdBTScgOiAnUE0nOwogICAgICAgIHRoaXMuc2V0U2FuaXRpemVkVmFsdWVUb1NlY3Rpb24oJ2FwbScsIHRoaXMuYXBtVHlwZSA9PT0gJ2EnID8gYXBtVmFsdWUudG9Mb3dlckNhc2UoKSA6IGFwbVZhbHVlKTsKICAgICAgICB0aGlzLnNldFNhbml0aXplZFZhbHVlVG9TZWN0aW9uKCdob3VyJywgaG91clRbMV0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2V0U2FuaXRpemVkVmFsdWVUb1NlY3Rpb24oJ2hvdXInLCBuZXh0SXRlbSk7CiAgICAgIH0KICAgIH0sCgogICAgZGVib3VuY2VTZXRJbnB1dFNlbGVjdGlvbih7CiAgICAgIHN0YXJ0ID0gMCwKICAgICAgZW5kID0gMAogICAgfSkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5zZXRJbnB1dFNlbGVjdGlvblJhbmdlKHN0YXJ0LCBlbmQpOwogICAgICB9KTsKICAgICAgd2luZG93LmNsZWFyVGltZW91dCh0aGlzLnNlbGVjdGlvblRpbWVyKTsKICAgICAgdGhpcy5zZWxlY3Rpb25UaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMuc2VsZWN0aW9uVGltZXIpOyAvLyBEb3VibGUtY2hlY2sgc2VsZWN0aW9uIGZvciAxMmhyIGZvcm1hdAoKICAgICAgICBpZiAodGhpcy4kcmVmcy5pbnB1dCAmJiAodGhpcy4kcmVmcy5pbnB1dC5zZWxlY3Rpb25TdGFydCAhPT0gc3RhcnQgfHwgdGhpcy4kcmVmcy5pbnB1dC5zZWxlY3Rpb25FbmQgIT09IGVuZCkpIHsKICAgICAgICAgIHRoaXMuc2V0SW5wdXRTZWxlY3Rpb25SYW5nZShzdGFydCwgZW5kKTsKICAgICAgICB9CiAgICAgIH0sIDMwKTsKICAgIH0sCgogICAgc2V0SW5wdXRTZWxlY3Rpb25SYW5nZShzdGFydCwgZW5kKSB7CiAgICAgIGlmICh0aGlzLiRyZWZzICYmIHRoaXMuJHJlZnMuaW5wdXQpIHsKICAgICAgICB0aGlzLiRyZWZzLmlucHV0LnNldFNlbGVjdGlvblJhbmdlKHN0YXJ0LCBlbmQpOwogICAgICB9CiAgICB9LAoKICAgIGdldEN1cnJlbnRUb2tlbkNodW5rKCkgewogICAgICByZXR1cm4gdGhpcy5nZXROZWFyZXN0Q2h1bmtCeVBvcyh0aGlzLiRyZWZzLmlucHV0ICYmIHRoaXMuJHJlZnMuaW5wdXQuc2VsZWN0aW9uU3RhcnQgfHwgMCk7CiAgICB9LAoKICAgIHNlbGVjdEZpcnN0U2xvdCgpIHsKICAgICAgY29uc3QgZmlyc3RDaHVua1BvcyA9IHRoaXMuZ2V0TmVhcmVzdENodW5rQnlQb3MoMCk7CiAgICAgIHRoaXMuZGVib3VuY2VTZXRJbnB1dFNlbGVjdGlvbihmaXJzdENodW5rUG9zKTsKICAgIH0sCgogICAgdG9OZXh0U2xvdCgpIHsKICAgICAgaWYgKCF0aGlzLmlucHV0SXNFbXB0eSAmJiB0aGlzLnRva2VuQ2h1bmtzUG9zICYmIHRoaXMudG9rZW5DaHVua3NQb3MubGVuZ3RoKSB7CiAgICAgICAgY29uc3QgY3VycmVudENodW5rID0gdGhpcy5nZXRDdXJyZW50VG9rZW5DaHVuaygpOwoKICAgICAgICBpZiAoIWN1cnJlbnRDaHVuaykgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgY29uc3QgbGFzdENodW5rID0gdGhpcy50b2tlbkNodW5rc1Bvc1t0aGlzLnRva2VuQ2h1bmtzUG9zLmxlbmd0aCAtIDFdOwoKICAgICAgICBpZiAoY3VycmVudENodW5rLnRva2VuICE9PSBsYXN0Q2h1bmsudG9rZW4pIHsKICAgICAgICAgIHRoaXMudG9MYXRlcmFsVG9rZW4oZmFsc2UpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICB0b0xhdGVyYWxUb2tlbih0b0xlZnQpIHsKICAgICAgY29uc3QgY3VycmVudENodW5rID0gdGhpcy5nZXRDdXJyZW50VG9rZW5DaHVuaygpOwoKICAgICAgaWYgKCFjdXJyZW50Q2h1bmspIHsKICAgICAgICB0aGlzLnNlbGVjdEZpcnN0VmFsaWRWYWx1ZSgpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgY3VycmVudENodW5rSW5kZXggPSB0aGlzLnRva2VuQ2h1bmtzUG9zLmZpbmRJbmRleChjaGsgPT4gY2hrLnRva2VuID09PSBjdXJyZW50Q2h1bmsudG9rZW4pOwoKICAgICAgaWYgKCF0b0xlZnQgJiYgY3VycmVudENodW5rSW5kZXggPj0gdGhpcy50b2tlbkNodW5rc1Bvcy5sZW5ndGggLSAxIHx8IHRvTGVmdCAmJiBjdXJyZW50Q2h1bmtJbmRleCA9PT0gMCkgewogICAgICAgIGlmICh0aGlzLmRlYnVnTW9kZSkgewogICAgICAgICAgaWYgKHRvTGVmdCkgewogICAgICAgICAgICB0aGlzLmRlYnVnTG9nKCdZb3VcJ3JlIGluIHRoZSBsZWZ0bW9zdCBzbG90IGFscmVhZHknKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuZGVidWdMb2coJ1lvdVwncmUgaW4gdGhlIHJpZ2h0bW9zdCBzbG90IGFscmVhZHknKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgdGFyZ2V0U2xvdFBvcyA9IHRvTGVmdCA/IHRoaXMudG9rZW5DaHVua3NQb3NbY3VycmVudENodW5rSW5kZXggLSAxXSA6IHRoaXMudG9rZW5DaHVua3NQb3NbY3VycmVudENodW5rSW5kZXggKyAxXTsKICAgICAgdGhpcy5kZWJvdW5jZVNldElucHV0U2VsZWN0aW9uKHRhcmdldFNsb3RQb3MpOwogICAgfSwKCiAgICBpc0N1c3RvbUFwbVRleHQoaW5wdXREYXRhKSB7CiAgICAgIGlmICghaW5wdXREYXRhIHx8ICFpbnB1dERhdGEubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICBpZiAodGhpcy5hbVRleHQgJiYgdGhpcy5hbVRleHQgPT09IGlucHV0RGF0YSkgewogICAgICAgIHJldHVybiB0aGlzLmFwbVR5cGUgPT09ICdBJyA/ICdBTScgOiAnYW0nOwogICAgICB9CgogICAgICBpZiAodGhpcy5wbVRleHQgJiYgdGhpcy5wbVRleHQgPT09IGlucHV0RGF0YSkgewogICAgICAgIHJldHVybiB0aGlzLmFwbVR5cGUgPT09ICdBJyA/ICdQTScgOiAncG0nOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAoKICAgIHJlcGxhY2VDdXN0b21BcG1UZXh0KGlucHV0U3RyaW5nKSB7CiAgICAgIGlmICh0aGlzLmFtVGV4dCAmJiB0aGlzLmFtVGV4dC5sZW5ndGggJiYgaW5wdXRTdHJpbmcuaW5jbHVkZXModGhpcy5hbVRleHQpKSB7CiAgICAgICAgcmV0dXJuIGlucHV0U3RyaW5nLnJlcGxhY2UobmV3IFJlZ0V4cCh0aGlzLmFtVGV4dCwgJ2cnKSwgdGhpcy5hcG1UeXBlID09PSAnQScgPyAnQU0nIDogJ2FtJyk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5wbVRleHQgJiYgdGhpcy5wbVRleHQubGVuZ3RoICYmIGlucHV0U3RyaW5nLmluY2x1ZGVzKHRoaXMucG1UZXh0KSkgewogICAgICAgIHJldHVybiBpbnB1dFN0cmluZy5yZXBsYWNlKG5ldyBSZWdFeHAodGhpcy5wbVRleHQsICdnJyksIHRoaXMuYXBtVHlwZSA9PT0gJ0EnID8gJ1BNJyA6ICdwbScpOwogICAgICB9CgogICAgICByZXR1cm4gaW5wdXRTdHJpbmc7CiAgICB9LAoKICAgIGNoZWNrRHJvcERpcmVjdGlvbigpIHsKICAgICAgaWYgKCF0aGlzLiRlbCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgbGV0IGNvbnRhaW5lcjsKCiAgICAgIGlmICh0aGlzLmNvbnRhaW5lcklkICYmIHRoaXMuY29udGFpbmVySWQubGVuZ3RoKSB7CiAgICAgICAgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5jb250YWluZXJJZCk7CgogICAgICAgIGlmICghY29udGFpbmVyICYmIHRoaXMuZGVidWdNb2RlKSB7CiAgICAgICAgICB0aGlzLmRlYnVnTG9nKGBDb250YWluZXIgd2l0aCBpZCAiJHt0aGlzLmNvbnRhaW5lcklkfSIgbm90IGZvdW5kLiBGYWxsYmFjayB0byBkb2N1bWVudCBib2R5LmApOwogICAgICAgIH0KICAgICAgfQoKICAgICAgY29uc3QgZWwgPSB0aGlzLiRlbDsKICAgICAgbGV0IHNwYWNlRG93bjsKCiAgICAgIGlmIChjb250YWluZXIgJiYgY29udGFpbmVyLm9mZnNldEhlaWdodCkgewogICAgICAgIC8vIFZhbGlkIGNvbnRhaW5lciBmb3VuZAogICAgICAgIHNwYWNlRG93biA9IGNvbnRhaW5lci5vZmZzZXRUb3AgKyBjb250YWluZXIub2Zmc2V0SGVpZ2h0IC0gKGVsLm9mZnNldFRvcCArIGVsLm9mZnNldEhlaWdodCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gRmFsbGJhY2sgdG8gZG9jdW1lbnQgYm9keQogICAgICAgIGNvbnN0IGRvY0hlaWdodCA9IE1hdGgubWF4KGRvY3VtZW50LmJvZHkuc2Nyb2xsSGVpZ2h0LCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0LCBkb2N1bWVudC5ib2R5Lm9mZnNldEhlaWdodCwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50Lm9mZnNldEhlaWdodCwgZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQsIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQpOwogICAgICAgIHNwYWNlRG93biA9IGRvY0hlaWdodCAtIChlbC5vZmZzZXRUb3AgKyBlbC5vZmZzZXRIZWlnaHQpOwogICAgICB9CgogICAgICB0aGlzLmZvcmNlRHJvcE9uVG9wID0gdGhpcy5vcHRzLmRyb3BPZmZzZXRIZWlnaHQgPiBzcGFjZURvd247CiAgICB9LAoKICAgIC8vCiAgICAvLyBIZWxwZXJzCiAgICAvLwogICAgaXMxMmhSYW5nZSh2YWx1ZSkgewogICAgICByZXR1cm4gL15cZHsxLDJ9KGF8cHxBfFApJC8udGVzdCh2YWx1ZSk7CiAgICB9LAoKICAgIG1hdGNoMTJoUmFuZ2UodmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlLm1hdGNoKC9eKFxkezEsMn0pKGF8cHxBfFApJC8pOwogICAgfSwKCiAgICBpc051bWJlcih2YWx1ZSkgewogICAgICByZXR1cm4gIWlzTmFOKHBhcnNlRmxvYXQodmFsdWUpKSAmJiBpc0Zpbml0ZSh2YWx1ZSk7CiAgICB9LAoKICAgIGlzQmFzaWNUeXBlKHR5cGUpIHsKICAgICAgcmV0dXJuIENPTkZJRy5CQVNJQ19UWVBFUy5pbmNsdWRlcyh0eXBlKTsKICAgIH0sCgogICAgbG93ZXJDYXNlZEFwbShhcG1WYWx1ZSkgewogICAgICByZXR1cm4gKGFwbVZhbHVlIHx8ICcnKS50b0xvd2VyQ2FzZSgpOwogICAgfSwKCiAgICBnZXRUb2tlblJlZ2V4KHRva2VuKSB7CiAgICAgIHN3aXRjaCAodG9rZW4pIHsKICAgICAgICBjYXNlICdISCc6CiAgICAgICAgICByZXR1cm4gJyhbMDFdWzAtOV18MlswLTNdfEh7Mn0pJzsKCiAgICAgICAgY2FzZSAnSCc6CiAgICAgICAgICByZXR1cm4gJyhbMC05XXsxfXwxWzAtOV18MlswLTNdfEh7MX0pJzsKCiAgICAgICAgY2FzZSAnaGgnOgogICAgICAgICAgcmV0dXJuICcoMFsxLTldfDFbMC0yXXxoezJ9KSc7CgogICAgICAgIGNhc2UgJ2gnOgogICAgICAgICAgcmV0dXJuICcoWzEtOV17MX18MVswLTJdfGh7MX0pJzsKCiAgICAgICAgY2FzZSAna2snOgogICAgICAgICAgcmV0dXJuICcoMFsxLTldfDFbMC05XXwyWzAtNF18a3syfSknOwoKICAgICAgICBjYXNlICdrJzoKICAgICAgICAgIHJldHVybiAnKFsxLTldezF9fDFbMC05XXwyWzAtNF18a3sxfSknOwoKICAgICAgICBjYXNlICdtbSc6CiAgICAgICAgICByZXR1cm4gJyhbMC01XVswLTldfG17Mn0pJzsKCiAgICAgICAgY2FzZSAnc3MnOgogICAgICAgICAgcmV0dXJuICcoWzAtNV1bMC05XXxzezJ9KSc7CgogICAgICAgIGNhc2UgJ20nOgogICAgICAgICAgcmV0dXJuICcoWzAtOV17MX18WzEtNV1bMC05XXxtezF9KSc7CgogICAgICAgIGNhc2UgJ3MnOgogICAgICAgICAgcmV0dXJuICcoWzAtOV17MX18WzEtNV1bMC05XXxzezF9KSc7CgogICAgICAgIGNhc2UgJ0EnOgogICAgICAgICAgcmV0dXJuICcoQU18UE18QXsxfSknOwoKICAgICAgICBjYXNlICdhJzoKICAgICAgICAgIHJldHVybiAnKGFtfHBtfGF7MX0pJzsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHJldHVybiAnJzsKICAgICAgfQogICAgfSwKCiAgICBpc0VtcHR5VmFsdWUodGFyZ2V0VG9rZW4sIHRlc3RWYWx1ZSkgewogICAgICByZXR1cm4gIXRlc3RWYWx1ZSB8fCAhdGVzdFZhbHVlLmxlbmd0aCB8fCB0ZXN0VmFsdWUgJiYgdGVzdFZhbHVlID09PSB0YXJnZXRUb2tlbjsKICAgIH0sCgogICAgaXNWYWxpZFZhbHVlKHRhcmdldFRva2VuLCB0ZXN0VmFsdWUpIHsKICAgICAgaWYgKCF0YXJnZXRUb2tlbiB8fCB0aGlzLmlzRW1wdHlWYWx1ZSh0YXJnZXRUb2tlbiwgdGVzdFZhbHVlKSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgY29uc3QgdG9rZW5SZWdleFN0ciA9IHRoaXMuZ2V0VG9rZW5SZWdleCh0YXJnZXRUb2tlbik7CgogICAgICBpZiAoIXRva2VuUmVnZXhTdHIgfHwgIXRva2VuUmVnZXhTdHIubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICByZXR1cm4gbmV3IFJlZ0V4cChgXiR7dG9rZW5SZWdleFN0cn0kYCkudGVzdCh0ZXN0VmFsdWUpOwogICAgfSwKCiAgICBzYW5pdGl6ZWRWYWx1ZSh0YXJnZXRUb2tlbiwgaW5wdXRWYWx1ZSkgewogICAgICBpZiAodGhpcy5pc1ZhbGlkVmFsdWUodGFyZ2V0VG9rZW4sIGlucHV0VmFsdWUpKSB7CiAgICAgICAgcmV0dXJuIGlucHV0VmFsdWU7CiAgICAgIH0KCiAgICAgIHJldHVybiAnJzsKICAgIH0sCgogICAgZ2V0VG9rZW5UeXBlKHRva2VuKSB7CiAgICAgIHJldHVybiB0aGlzLmluVXNlLnR5cGVzW3RoaXMuaW5Vc2UudG9rZW5zLmluZGV4T2YodG9rZW4pXSB8fCAnJzsKICAgIH0sCgogICAgZ2V0VG9rZW5CeVR5cGUodHlwZSkgewogICAgICByZXR1cm4gdGhpc1tgJHt0eXBlfVR5cGVgXSB8fCAnJzsKICAgIH0sCgogICAgaXNNaW51dGVPclNlY29uZCh0eXBlKSB7CiAgICAgIHJldHVybiBbJ21pbnV0ZScsICdzZWNvbmQnXS5pbmNsdWRlcyh0eXBlKTsKICAgIH0sCgogICAgZGVidWdMb2cobG9nVGV4dCkgewogICAgICBpZiAoIWxvZ1RleHQgfHwgIWxvZ1RleHQubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBsZXQgaWRlbnRpZmllciA9ICcnOwoKICAgICAgaWYgKHRoaXMuaWQpIHsKICAgICAgICBpZGVudGlmaWVyICs9IGAjJHt0aGlzLmlkfWA7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLm5hbWUpIHsKICAgICAgICBpZGVudGlmaWVyICs9IGBbbmFtZT0ke3RoaXMubmFtZX1dYDsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuaW5wdXRDbGFzcykgewogICAgICAgIGxldCBpbnB1dENsYXNzZXMgPSBbXTsKCiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmlucHV0Q2xhc3MgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgICBpbnB1dENsYXNzZXMgPSB0aGlzLmlucHV0Q2xhc3Muc3BsaXQoL1xzL2cpOwogICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmlucHV0Q2xhc3MpKSB7CiAgICAgICAgICBpbnB1dENsYXNzZXMgPSBbXS5jb25jYXQoW10sIHRoaXMuaW5wdXRDbGFzcyk7CiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGhpcy5pbnB1dENsYXNzID09PSAnb2JqZWN0JykgewogICAgICAgICAgT2JqZWN0LmtleXModGhpcy5pbnB1dENsYXNzKS5mb3JFYWNoKGNsc05hbWUgPT4gewogICAgICAgICAgICBpZiAodGhpcy5pbnB1dENsYXNzW2Nsc05hbWVdKSB7CiAgICAgICAgICAgICAgaW5wdXRDbGFzc2VzLnB1c2goY2xzTmFtZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgZm9yIChsZXQgaW5wdXRDbGFzcyBvZiBpbnB1dENsYXNzZXMpIHsKICAgICAgICAgIGlmIChpbnB1dENsYXNzICYmIGlucHV0Q2xhc3MudHJpbSgpLmxlbmd0aCkgewogICAgICAgICAgICBpZGVudGlmaWVyICs9IGAuJHtpbnB1dENsYXNzLnRyaW0oKX1gOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgY29uc3QgZmluYWxMb2dUZXh0ID0gYERFQlVHOiAke2xvZ1RleHR9JHtpZGVudGlmaWVyID8gYFxuXHQoJHtpZGVudGlmaWVyfSlgIDogJyd9YDsKCiAgICAgIGlmICh3aW5kb3cuY29uc29sZS5kZWJ1ZyAmJiB0eXBlb2Ygd2luZG93LmNvbnNvbGUuZGVidWcgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICB3aW5kb3cuY29uc29sZS5kZWJ1ZyhmaW5hbExvZ1RleHQpOwogICAgICB9IGVsc2UgewogICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhmaW5hbExvZ1RleHQpOwogICAgICB9CiAgICB9CgogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMuZGVib3VuY2VUaW1lcik7CiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMuc2VsZWN0aW9uVGltZXIpOwogICAgd2luZG93LmNsZWFyVGltZW91dCh0aGlzLmtiSW5wdXRUaW1lcik7CiAgICB0aGlzLnJlbmRlckZvcm1hdCgpOwogIH0sCgogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMuZGVib3VuY2VUaW1lcik7CiAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMuc2VsZWN0aW9uVGltZXIpOwogICAgd2luZG93LmNsZWFyVGltZW91dCh0aGlzLmtiSW5wdXRUaW1lcik7CiAgfQoKfTs="},{"version":3,"sources":["vue-timepicker.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nconst CONFIG = {\n  HOUR_TOKENS: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n  MINUTE_TOKENS: ['mm', 'm'],\n  SECOND_TOKENS: ['ss', 's'],\n  APM_TOKENS: ['A', 'a'],\n  BASIC_TYPES: ['hour', 'minute', 'second', 'apm']\n}\n\nconst DEFAULT_OPTIONS = {\n  format: 'HH:mm',\n  minuteInterval: 1,\n  secondInterval: 1,\n  hourRange: null,\n  minuteRange: null,\n  secondRange: null,\n  hideDisabledHours: false,\n  hideDisabledMinutes: false,\n  hideDisabledSeconds: false,\n  hideDisabledItems: false,\n  hideDropdown: false,\n  blurDelay: 300,\n  manualInputTimeout: 1000,\n  dropOffsetHeight: 160\n}\n\nexport default {\n  name: 'VueTimepicker',\n  props: {\n    value: { type: [ Object, String ] },\n    format: { type: String },\n    minuteInterval: { type: [ Number, String ] },\n    secondInterval: { type: [ Number, String ] },\n\n    hourRange: { type: Array },\n    minuteRange: { type: Array },\n    secondRange: { type: Array },\n\n    hideDisabledHours: { type: Boolean, default: false },\n    hideDisabledMinutes: { type: Boolean, default: false },\n    hideDisabledSeconds: { type: Boolean, default: false },\n    hideDisabledItems: { type: Boolean, default: false },\n\n    hideClearButton: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    closeOnComplete: { type: Boolean, default: false },\n\n    id: { type: String },\n    name: { type: String },\n    inputClass: { type: [ String, Object, Array ] },\n    placeholder: { type: String },\n    tabindex: { type: [ Number, String ], default: 0 },\n    inputWidth: { type: String },\n    autocomplete: { type: String, default: 'off' },\n\n    hourLabel: { type: String },\n    minuteLabel: { type: String },\n    secondLabel: { type: String },\n    apmLabel: { type: String },\n    amText: { type: String },\n    pmText: { type: String },\n\n    blurDelay: { type: [ Number, String ] },\n    advancedKeyboard: { type: Boolean, default: false },\n\n    lazy: { type: Boolean, default: false },\n    autoScroll: { type: Boolean, default: false },\n\n    dropDirection: { type: String, default: 'down' },\n    dropOffsetHeight: { type: [ Number, String ] },\n    containerId: { type: String },\n    appendToBody: { type: Boolean, default: false },\n\n    manualInput: { type: Boolean, default: false },\n    manualInputTimeout: { type: [ Number, String ] },\n    hideDropdown: { type: Boolean, default: false },\n    fixedDropdownButton: { type: Boolean, default: false },\n\n    debugMode: { type: Boolean, default: false }\n  },\n\n  data () {\n    return {\n      timeValue: {},\n\n      hours: [],\n      minutes: [],\n      seconds: [],\n      apms: [],\n\n      isActive: false,\n      showDropdown: false,\n      isFocusing: false,\n      debounceTimer: undefined,\n\n      hourType: 'HH',\n      minuteType: 'mm',\n      secondType: '',\n      apmType: '',\n      hour: '',\n      minute: '',\n      second: '',\n      apm: '',\n      fullValues: undefined,\n      bakDisplayTime: undefined,\n      doClearApmChecking: false,\n\n      selectionTimer: undefined,\n      kbInputTimer: undefined,\n      kbInputLog: '',\n      bakCurrentPos: undefined,\n      forceDropOnTop: false\n    }\n  },\n\n  computed: {\n    opts () {\n      const options = Object.assign({}, DEFAULT_OPTIONS)\n\n      if (this.format && this.format.length) {\n        options.format = String(this.format)\n      }\n\n      if (this.isNumber(this.minuteInterval)) {\n        options.minuteInterval = +this.minuteInterval\n      }\n      // minuteInterval failsafe\n      if (!options.minuteInterval || options.minuteInterval < 1 || options.minuteInterval > 60) {\n        if (this.debugMode) {\n          if (options.minuteInterval > 60) {\n            this.debugLog(`\"minute-interval\" should be less than 60. Current value is ${this.minuteInterval}`)\n          } else if (options.minuteInterval === 0 || options.minuteInterval < 1) {\n            this.debugLog(`\"minute-interval\" should be NO less than 1. Current value is ${this.minuteInterval}`)\n          }\n        }\n        if (options.minuteInterval === 0) {\n          options.minuteInterval = 60\n        } else {\n          options.minuteInterval = 1\n        }\n      }\n\n      if (this.isNumber(this.secondInterval)) {\n        options.secondInterval = +this.secondInterval\n      }\n      // secondInterval failsafe\n      if (!options.secondInterval || options.secondInterval < 1 || options.secondInterval > 60) {\n        if (this.debugMode) {\n          if (options.secondInterval > 60) {\n            this.debugLog(`\"second-interval\" should be less than 60. Current value is ${this.secondInterval}`)\n          } else if (options.secondInterval === 0 || options.secondInterval < 1) {\n            this.debugLog(`\"second-interval\" should be NO less than 1. Current value is ${this.secondInterval}`)\n          }\n        }\n        if (options.secondInterval === 0) {\n          options.secondInterval = 60\n        } else {\n          options.secondInterval = 1\n        }\n      }\n\n      if (this.hourRange && Array.isArray(this.hourRange)) {\n        options.hourRange = JSON.parse(JSON.stringify(this.hourRange))\n        if (!this.hourRange.length && this.debugMode) {\n          this.debugLog('The \"hour-range\" array is empty (length === 0)')\n        }\n      }\n\n      if (this.minuteRange && Array.isArray(this.minuteRange)) {\n        options.minuteRange = JSON.parse(JSON.stringify(this.minuteRange))\n        if (!this.minuteRange.length && this.debugMode) {\n          this.debugLog('The \"minute-range\" array is empty (length === 0)')\n        }\n      }\n\n      if (this.secondRange && Array.isArray(this.secondRange)) {\n        options.secondRange = JSON.parse(JSON.stringify(this.secondRange))\n        if (!this.secondRange.length && this.debugMode) {\n          this.debugLog('The \"second-range\" array is empty (length === 0)')\n        }\n      }\n\n      if (this.hideDisabledItems) {\n        options.hideDisabledItems = true\n      }\n\n      if (this.hideDisabledHours || this.hideDisabledItems) {\n        options.hideDisabledHours = true\n      }\n      if (this.hideDisabledMinutes || this.hideDisabledItems) {\n        options.hideDisabledMinutes = true\n      }\n      if (this.hideDisabledSeconds || this.hideDisabledItems) {\n        options.hideDisabledSeconds = true\n      }\n\n      if (this.hideDropdown) {\n        if (this.manualInput) {\n          options.hideDropdown = true\n        } else if (this.debugMode) {\n          this.debugLog('\"hide-dropdown\" only works with \"manual-input\" mode')\n        }\n      }\n\n      if (this.blurDelay && +this.blurDelay > 0) {\n        options.blurDelay = +this.blurDelay\n      }\n\n      if (this.manualInputTimeout && +this.manualInputTimeout > 0) {\n        options.manualInputTimeout = +this.manualInputTimeout\n      }\n\n      if (this.dropOffsetHeight && +this.dropOffsetHeight > 0) {\n        options.dropOffsetHeight = +this.dropOffsetHeight\n      }\n\n      return options\n    },\n\n    useStringValue () {\n      return typeof this.value === 'string'\n    },\n\n    formatString () {\n      return this.opts.format || DEFAULT_OPTIONS.format\n    },\n\n    inUse () {\n      const typesInUse = CONFIG.BASIC_TYPES.filter(type => this.getTokenByType(type))\n      // Sort types and tokens by their sequence in the \"format\" string\n      typesInUse.sort((l, r) => {\n        return this.formatString.indexOf(this.getTokenByType(l) || null) - this.formatString.indexOf(this.getTokenByType(r) || null)\n      })\n      const tokensInUse = typesInUse.map(type => this.getTokenByType(type))\n      return {\n        hour: !!this.hourType,\n        minute: !!this.minuteType,\n        second: !!this.secondType,\n        apm: !!this.apmType,\n        types: typesInUse || [],\n        tokens: tokensInUse || []\n      }\n    },\n\n    displayTime () {\n      let formatString = String(this.formatString)\n      if (this.hour) {\n        formatString = formatString.replace(new RegExp(this.hourType, 'g'), this.hour)\n      }\n      if (this.minute) {\n        formatString = formatString.replace(new RegExp(this.minuteType, 'g'), this.minute)\n      }\n      if (this.second && this.secondType) {\n        formatString = formatString.replace(new RegExp(this.secondType, 'g'), this.second)\n      }\n      if (this.apm && this.apmType) {\n        formatString = formatString.replace(new RegExp(this.apmType, 'g'), this.apm)\n      }\n      return formatString\n    },\n\n    customDisplayTime () {\n      if (!this.amText && !this.pmText) {\n        return this.displayTime\n      }\n      return this.displayTime.replace(new RegExp(this.apm, 'g'), this.apmDisplayText(this.apm))\n    },\n\n    inputIsEmpty () {\n      return this.formatString === this.displayTime\n    },\n\n    allValueSelected () {\n      if (\n        (this.inUse.hour && !this.hour) ||\n        (this.inUse.minute && !this.minute) ||\n        (this.inUse.second && !this.second) ||\n        (this.inUse.apm && !this.apm)\n      ) {\n        return false\n      }\n      return true\n    },\n\n    columnsSequence () {\n      return this.inUse.types.map(type => type) || []\n    },\n\n    showClearBtn () {\n      if (this.hideClearButton || this.disabled) {\n        return false\n      }\n      return !this.inputIsEmpty\n    },\n\n    showDropdownBtn () {\n      if (this.fixedDropdownButton) { return true }\n      if (this.opts.hideDropdown && this.isActive && !this.showDropdown) {\n        return true\n      }\n      return false\n    },\n\n    baseOn12Hours () {\n      return this.hourType === 'h' || this.hourType === 'hh'\n    },\n\n    hourRangeIn24HrFormat () {\n      if (!this.hourType || !this.opts.hourRange) { return false }\n      if (!this.opts.hourRange.length) { return [] }\n\n      const range = []\n      this.opts.hourRange.forEach(value => {\n        if (value instanceof Array) {\n          if (value.length > 2 && this.debugMode) {\n            this.debugLog(`Nested array within \"hour-range\" must contain no more than two items. Only the first two items of ${JSON.stringify(value)} will be taken into account.`)\n          }\n\n          let start = value[0]\n          let end = value[1] || value[0]\n\n          if (this.is12hRange(start)) {\n            start = this.translate12hRange(start)\n          }\n          if (this.is12hRange(end)) {\n            end = this.translate12hRange(end)\n          }\n\n          for (let i = +start; i <= +end; i++) {\n            if (i < 0 || i > 24) { continue }\n            if (!range.includes(i)) {\n              range.push(i)\n            }\n          }\n        } else {\n          if (this.is12hRange(value)) {\n            value = this.translate12hRange(value)\n          } else {\n            value = +value\n          }\n          if (value < 0 || value > 24) { return }\n          if (!range.includes(value)) {\n            range.push(value)\n          }\n        }\n      })\n      range.sort((l, r) => { return l - r })\n      return range\n    },\n\n    restrictedHourRange () {\n      // No restriction\n      if (!this.hourRangeIn24HrFormat) { return false }\n      // 12-Hour\n      if (this.baseOn12Hours) {\n        const range = this.hourRangeIn24HrFormat.map((value) => {\n          if (value === 12) {\n            return '12p'\n          } else if (value === 24 || value === 0) {\n            return '12a'\n          }\n          return value > 12 ? `${value % 12}p` : `${value}a`\n        })\n        return range\n      }\n      // 24-Hour\n      return this.hourRangeIn24HrFormat\n    },\n\n    validHoursList () {\n      if (!this.manualInput) { return false }\n      if (this.restrictedHourRange) {\n        let list = []\n        if (this.baseOn12Hours) {\n          list = this.restrictedHourRange.map(hr => {\n            const l = hr.substr(0, hr.length - 1)\n            const r = hr.substr(-1)\n            return `${this.formatValue(this.hourType, l)}${r}`\n          })\n          const am12Index = list.indexOf('12a')\n          if (am12Index > 0) {\n            // Make '12a' the first item in h/hh\n            list.unshift(list.splice(am12Index, 1)[0])\n          }\n          return list\n        }\n        list = this.restrictedHourRange.map(hr => {\n          return this.formatValue(this.hourType, hr)\n        })\n        if (list.length > 1 && list[0] && list[0] === '24') {\n          // Make '24' the last item in k/kk\n          list.push(list.shift())\n        }\n        return list\n      }\n      if (this.baseOn12Hours) {\n        return [].concat([], this.hours.map(hr => `${hr}a`), this.hours.map(hr => `${hr}p`))\n      }\n      return this.hours\n    },\n\n    has () {\n      const result = {\n        customApmText: false\n      }\n      const apmEnabled = !!this.apmType\n\n      if (apmEnabled && this.hourRangeIn24HrFormat && this.hourRangeIn24HrFormat.length) {\n        const range = [].concat([], this.hourRangeIn24HrFormat)\n        result.am = range.some(value => value < 12 || value === 24)\n        result.pm = range.some(value => value >= 12 && value < 24)\n      } else {\n        result.am = apmEnabled\n        result.pm = apmEnabled\n      }\n      if ((this.amText && this.amText.length) || (this.pmText && this.pmText.length)) {\n        result.customApmText = true\n      }\n      return result\n    },\n\n    minuteRangeList () {\n      if (!this.minuteType || !this.opts.minuteRange) { return false }\n      if (!this.opts.minuteRange.length) { return [] }\n      return this.renderRangeList(this.opts.minuteRange, 'minute')\n    },\n\n    secondRangeList () {\n      if (!this.secondType || !this.opts.secondRange) { return false }\n      if (!this.opts.secondRange.length) { return [] }\n      return this.renderRangeList(this.opts.secondRange, 'second')\n    },\n    \n    hourLabelText () {\n      return this.hourLabel || this.hourType\n    },\n    minuteLabelText () {\n      return this.minuteLabel || this.minuteType\n    },\n    secondLabelText() {\n      return this.secondLabel || this.secondType\n    },\n    apmLabelText () {\n      return this.apmLabel || this.apmType\n    },\n\n    inputWidthStyle () {\n      if (!this.inputWidth || !this.inputWidth.length) { return }\n      return {\n        width: this.inputWidth\n      }\n    },\n\n    tokenRegexBase () {\n      return this.inUse.tokens.join('|')\n    },\n\n    tokenChunks () {\n      if (!this.manualInput && !this.useStringValue) { return false }\n\n      const formatString = String(this.formatString)\n      const tokensRegxStr = `(${this.tokenRegexBase})+?`\n      const tokensMatchAll = this.getMatchAllByRegex(formatString, tokensRegxStr)\n\n      const tokenChunks = []\n      for (let tkMatch of tokensMatchAll) {\n        const rawToken = tkMatch[0]\n        const tokenMatchItem = {\n          index: tkMatch.index,\n          token: rawToken,\n          type: this.getTokenType(rawToken),\n          needsCalibrate: rawToken.length < 2,\n          len: (rawToken || '').length\n        }\n        tokenChunks.push(tokenMatchItem)\n      }\n      return tokenChunks\n    },\n\n    needsPosCalibrate () {\n      if (!this.manualInput) { return false }\n      return this.tokenChunks.some(chk => chk.needsCalibrate)\n    },\n\n    tokenChunksPos () {\n      if (!this.manualInput) { return false }\n      if (!this.needsPosCalibrate) {\n        return this.tokenChunks.map(chk => {\n          return {\n            token: chk.token,\n            type: chk.type,\n            start: chk.index,\n            end: chk.index + chk.len\n          }\n        })\n      }\n      const list = []\n      let calibrateLen = 0\n      this.tokenChunks.forEach(chk => {\n        let chunkCurrentLen\n        // Adjust for customized AM/PM text\n        if (chk.type === 'apm' && this.has.customApmText) {\n          if (this.apm && this.apm.length) {\n            const customApmText = this.apm.toLowerCase() === 'am' ? this.amText : this.pmText\n            chunkCurrentLen = (customApmText && customApmText.length) ? customApmText.length : chk.len\n          } else {\n            chunkCurrentLen = chk.len\n          }\n        // Others\n        } else {\n          chunkCurrentLen = this[chk.type] && this[chk.type].length ? this[chk.type].length : chk.len\n        }\n        list.push({\n          token: chk.token,\n          type: chk.type,\n          start: chk.index + calibrateLen,\n          end: chk.index + calibrateLen + chunkCurrentLen\n        })\n        if (chk.needsCalibrate && chunkCurrentLen > chk.len) {\n          calibrateLen += (chunkCurrentLen - chk.len)\n        }\n      })\n      return list\n    },\n\n    invalidValues () {\n      if (this.inputIsEmpty) { return [] }\n      if (!this.restrictedHourRange && !this.minuteRangeList && !this.secondRangeList && this.opts.minuteInterval === 1 && this.opts.secondInterval === 1) { return [] }\n\n      const result = []\n      if (this.inUse.hour && !this.isEmptyValue(this.hourType, this.hour) && (!this.isValidValue(this.hourType, this.hour) || this.isDisabled('hour', this.hour))) {\n        result.push('hour')\n      }\n      if (this.inUse.minute && !this.isEmptyValue(this.minuteType, this.minute) && (!this.isValidValue(this.minuteType, this.minute) || this.isDisabled('minute', this.minute) || this.notInInterval('minute', this.minute))) {\n        result.push('minute')\n      }\n      if (this.inUse.second && !this.isEmptyValue(this.secondType, this.second) && (!this.isValidValue(this.secondType, this.second) || this.isDisabled('second', this.second) || this.notInInterval('second', this.second))) {\n        result.push('second')\n      }\n      if (this.inUse.apm && !this.isEmptyValue(this.apmType, this.apm) && (!this.isValidValue(this.apmType, this.apm) || this.isDisabled('apm', this.apm))) {\n        result.push('apm')\n      }\n      if (result.length) {\n        return result\n      }\n      return []\n    },\n\n    hasInvalidInput () {\n      return Boolean(this.invalidValues && this.invalidValues.length)\n    },\n\n    autoDirectionEnabled () {\n      return this.dropDirection === 'auto'\n    },\n\n    dropdownDirClass () {\n      if (this.autoDirectionEnabled) {\n        return this.forceDropOnTop ? 'drop-up' : 'drop-down'\n      }\n      return this.dropDirection === 'up' ? 'drop-up' : 'drop-down'      \n    }\n  },\n\n  watch: {\n    'opts.format' (newValue) {\n      this.renderFormat(newValue)\n    },\n    'opts.minuteInterval' (newInteval) {\n      this.renderList('minute', newInteval)\n    },\n    'opts.secondInterval' (newInteval) {\n      this.renderList('second', newInteval)\n    },\n    value: {\n      deep: true,\n      handler () {\n        this.readValues()\n      }\n    },\n    displayTime () {\n      this.fillValues()\n    },\n    disabled (toDisabled) {\n      if (toDisabled) {\n        // Force close dropdown and reset status when disabled\n        if (this.isActive) {\n          this.isActive = false\n        }\n        if (this.showDropdown) {\n          this.showDropdown = false\n        }\n      }\n    },\n    'invalidValues.length' (newLength, oldLength) {\n      if (newLength && newLength >= 1) {\n        this.$emit('error', this.invalidValues)\n      } else if (oldLength && oldLength >= 1) {\n        this.$emit('error', [])\n      }\n    }\n  },\n\n  methods: {\n    formatValue (token, i) {\n      if (!this.isNumber(i)) { return '' }\n      i = +i\n      switch (token) {\n        case 'H':\n        case 'h':\n        case 'k':\n        case 'm':\n        case 's':\n          if (['h', 'k'].includes(token) && i === 0) {\n            return token === 'k' ? '24' : '12'\n          }\n          return String(i)\n        case 'HH':\n        case 'mm':\n        case 'ss':\n        case 'hh':\n        case 'kk':\n          if (['hh', 'kk'].includes(token) && i === 0) {\n            return token === 'kk' ? '24' : '12'\n          }\n          return i < 10 ? `0${i}` : String(i)\n        default:\n          return ''\n      }\n    },\n\n    checkAcceptingType (validValues, formatString) {\n      if (!validValues || !formatString || !formatString.length) { return '' }\n      for (let i = 0; i < validValues.length; i++) {\n        if (formatString.indexOf(validValues[i]) > -1) {\n          return validValues[i]\n        }\n      }\n      return ''\n    },\n\n    renderFormat (newFormat) {\n      newFormat = newFormat || this.opts.format || DEFAULT_OPTIONS.format\n\n      let hourType = this.checkAcceptingType(CONFIG.HOUR_TOKENS, newFormat)\n      let minuteType = this.checkAcceptingType(CONFIG.MINUTE_TOKENS, newFormat)\n      this.secondType = this.checkAcceptingType(CONFIG.SECOND_TOKENS, newFormat)\n      this.apmType = this.checkAcceptingType(CONFIG.APM_TOKENS, newFormat)\n\n      // Failsafe checking\n      if (!hourType && !minuteType && !this.secondType && !this.apmType) {\n        if (this.debugMode && this.format) {\n          this.debugLog(`No valid tokens found in your defined \"format\" string \"${this.format}\". Fallback to the default \"HH:mm\" format.`)\n        }\n        hourType = 'HH'\n        minuteType = 'mm'\n      }\n      this.hourType = hourType\n      this.minuteType = minuteType\n\n      this.hourType ? this.renderHoursList() : this.hours = []\n      this.minuteType ? this.renderList('minute') : this.minutes = []\n      this.secondType ? this.renderList('second') : this.seconds = []\n      this.apmType ? this.renderApmList() : this.apms = []\n\n      this.$nextTick(() => {\n        this.readValues()\n      })\n    },\n\n    renderHoursList () {\n      const hoursCount = this.baseOn12Hours ? 12 : 24\n      const hours = []\n      for (let i = 0; i < hoursCount; i++) {\n        if (this.hourType === 'k' || this.hourType === 'kk') {\n          hours.push(this.formatValue(this.hourType, i + 1))\n        } else {\n          hours.push(this.formatValue(this.hourType, i))\n        }\n      }\n      this.hours = hours\n    },\n\n    renderList (listType, interval) {\n      if (!this.isMinuteOrSecond(listType)) { return }\n\n      const isMinute = listType === 'minute'\n      interval = interval || (isMinute ? (this.opts.minuteInterval || DEFAULT_OPTIONS.minuteInterval) : (this.opts.secondInterval || DEFAULT_OPTIONS.secondInterval))\n\n      const result = []\n      for (let i = 0; i < 60; i += interval) {\n        result.push(this.formatValue(isMinute ? this.minuteType : this.secondType, i))\n      }\n      isMinute ? this.minutes = result : this.seconds = result\n    },\n\n    renderApmList () {\n      this.apms = this.apmType === 'A' ? ['AM', 'PM'] : ['am', 'pm']\n    },\n\n    readValues () {\n      if (this.useStringValue) {\n        if (this.debugMode) {\n          this.debugLog(`Received a string value: \"${this.value}\"`)\n        }\n        this.readStringValues(this.value)\n      } else {\n        if (this.debugMode) {\n          this.debugLog(`Received an object value: \"${JSON.stringify(this.value || {})}\"`)\n        }\n        this.readObjectValues(this.value)\n      }\n    },\n\n    readObjectValues (objValue) {\n      const timeValue = JSON.parse(JSON.stringify(objValue || {}))\n      const values = Object.keys(timeValue)\n\n      // Failsafe for empty `v-model` object\n      if (values.length === 0) {\n        this.addFallbackValues()\n        return\n      }\n\n      CONFIG.BASIC_TYPES.forEach(type => {\n        const token = this.getTokenByType(type)\n        if (values.indexOf(token) > -1) {\n          const sanitizedValue = this.sanitizedValue(token, timeValue[token])\n          this[type] = sanitizedValue\n          timeValue[token] = sanitizedValue\n        } else {\n          this[type] = ''\n        }\n      })\n      this.timeValue = timeValue\n    },\n\n    getMatchAllByRegex (testString, regexString) {\n      const str = 'polyfillTest'\n      const needsPolyfill = Boolean(!str.matchAll || typeof str.matchAll !== 'function')\n      return needsPolyfill ? this.polyfillMatchAll(testString, regexString) : testString.matchAll(new RegExp(regexString, 'g'))\n    },\n\n    readStringValues (stringValue) {\n      // Failsafe for empty `v-model` string\n      if (!stringValue || !stringValue.length) {\n        this.addFallbackValues()\n        return\n      }\n\n      const formatString = String(this.formatString)\n      const tokensRegxStr = `(${this.tokenRegexBase})+?`\n      const othersRegxStr = `[^(${this.tokenRegexBase})]+`\n\n      const tokensMatchAll = this.getMatchAllByRegex(formatString, tokensRegxStr)\n      const othersMatchAll = this.getMatchAllByRegex(formatString, othersRegxStr)\n\n      const chunks = []\n      const tokenChunks = []\n\n      for (let tkMatch of tokensMatchAll) {\n        const tokenMatchItem = {\n          index: tkMatch.index,\n          token: tkMatch[0],\n          isValueToken: true\n        }\n        chunks.push(tokenMatchItem)\n        tokenChunks.push(tokenMatchItem)\n      }\n\n      for (let otMatch of othersMatchAll) {\n        chunks.push({\n          index: otMatch.index,\n          token: otMatch[0]\n        })\n      }\n\n      chunks.sort((l, r) => l.index < r.index ? -1 : 1)\n\n      let regexCombo = ''\n      chunks.forEach(chunk => {\n        if (chunk.isValueToken) {\n          const tokenRegex = this.getTokenRegex(chunk.token) || ''\n          regexCombo += tokenRegex\n        } else {\n          const safeChars = chunk.token.replace(/\\\\{0}(\\*|\\?|\\.|\\+)/g, '\\\\$1')\n          regexCombo += `(?:${safeChars})`\n        }\n      })\n\n      const comboReg = new RegExp(regexCombo)\n\n      // Do test before match\n      if (comboReg.test(stringValue)) {\n        const matchResults = stringValue.match(new RegExp(regexCombo))\n        const valueResults = matchResults.slice(1, tokenChunks.length + 1)\n        const timeValue = {}\n        valueResults.forEach((value, vrIndex) => {\n          if (tokenChunks[vrIndex]) {\n            const targetToken = tokenChunks[vrIndex].token\n            timeValue[targetToken] = this.setValueFromString(value, targetToken)\n          }\n        })\n        this.timeValue = timeValue\n\n        if (this.debugMode) {\n          const tokenChunksForLog = tokenChunks.map(tChunk => tChunk && tChunk.token)\n          this.debugLog(`Successfully parsed values ${JSON.stringify(valueResults)}\\nfor ${JSON.stringify(tokenChunksForLog)}\\nin format pattern '${this.formatString}'`)\n        }\n      } else {\n        if (this.debugMode) {\n          this.debugLog(`The input string in \"v-model\" does NOT match the \"format\" pattern\\nformat: ${this.formatString}\\nv-model: ${stringValue}`)\n        }\n      }\n    },\n\n    polyfillMatchAll (targetString, regxStr) {\n      const matchesList = targetString.match(new RegExp(regxStr, 'g'))\n      const result = []\n      const indicesReg = []\n      if (matchesList && matchesList.length) {\n        matchesList.forEach(matchedItem => {\n          const existIndex = indicesReg.findIndex(idxItem => idxItem.str === matchedItem)\n          let index\n          if (existIndex >= 0) {\n            if (indicesReg[existIndex] && indicesReg[existIndex].regex) {\n              index = indicesReg[existIndex].regex.exec(targetString).index\n            }\n          } else {\n            const itemIndicesRegex = new RegExp(matchedItem, 'g')\n            index = itemIndicesRegex.exec(targetString).index\n            indicesReg.push({\n              str: String(matchedItem),\n              regex: itemIndicesRegex\n            })\n          }\n          result.push({\n            0: String(matchedItem),\n            index: index\n          })\n        })\n      }\n      return result\n    },\n\n    addFallbackValues () {\n      const timeValue = {}\n      this.inUse.types.forEach(type => {\n        timeValue[this.getTokenByType(type)] = ''\n      })\n      this.timeValue = timeValue\n    },\n\n    setValueFromString (parsedValue, token) {\n      if (!token || !parsedValue) { return '' }\n      const tokenType = this.getTokenType(token)\n      if (!tokenType || !tokenType.length) { return '' }\n      const stdValue = (parsedValue !== this.getTokenByType(tokenType)) ? parsedValue : ''\n      this[tokenType] = stdValue\n      return stdValue\n    },\n\n    fillValues (forceEmit) {\n      const fullValues = {}\n\n      const baseHour = this.hour\n      const baseHourType = this.hourType\n\n      let apmValue\n\n      // Hour type or hour value is NOT set in the \"format\" string\n      if (!baseHourType || !this.isNumber(baseHour)) {\n        CONFIG.HOUR_TOKENS.forEach(token => fullValues[token] = '')\n        apmValue = this.lowerCasedApm(this.apm || '')\n        fullValues.a = apmValue\n        fullValues.A = apmValue.toUpperCase()\n\n      // Both Hour type and value are set\n      } else {\n        const hourValue = +baseHour\n        const apmValue = (this.baseOn12Hours && this.apm) ? this.lowerCasedApm(this.apm) : false\n\n        CONFIG.HOUR_TOKENS.forEach((token) => {\n          if (token === baseHourType) {\n            fullValues[token] = baseHour\n            return\n          }\n\n          let value\n          let apm\n          switch (token) {\n            case 'H':\n            case 'HH':\n            case 'k':\n            case 'kk':\n              if (this.baseOn12Hours) {\n                if (apmValue === 'pm') {\n                  value = hourValue < 12 ? hourValue + 12 : hourValue\n                } else if (['k', 'kk'].includes(token)) {\n                  value = hourValue === 12 ? 24 : hourValue\n                } else {\n                  value = hourValue % 12\n                }\n              } else {\n                if (['k', 'kk'].includes(token)) {\n                  value = hourValue === 0 ? 24 : hourValue\n                } else {\n                  value = hourValue % 24\n                }\n              }\n              fullValues[token] = this.formatValue(token, value)\n              break\n            case 'h':\n            case 'hh':\n              // h <-> hh\n              if (this.baseOn12Hours) {\n                value = hourValue\n                apm = apmValue || ''\n              // Read from other hour formats\n              } else {\n                if (hourValue > 11 && hourValue < 24) {\n                  apm = 'pm'\n                  value = hourValue === 12 ? 12 : hourValue % 12\n                } else {\n                  apm = 'am'\n                  value = hourValue % 12 === 0 ? 12 : hourValue\n                }\n              }\n              fullValues[token] = this.formatValue(token, value)\n              fullValues.a = apm\n              fullValues.A = apm.toUpperCase()\n              break\n          }\n        })\n      }\n\n      fullValues.m = this.formatValue('m', this.minute)\n      fullValues.mm = this.formatValue('mm', this.minute)\n      fullValues.s = this.formatValue('s', this.second)\n      fullValues.ss = this.formatValue('ss', this.second)\n\n      this.fullValues = fullValues\n\n      // On lazy mode, emit `input` and `change` events only when:\n      // - The user pick a new value and then close the dropdown\n      // - The user click the (\"x\") clear button\n      if (!this.lazy || forceEmit) {\n        this.emitTimeValue()\n      }\n\n      if (this.closeOnComplete && this.allValueSelected && this.showDropdown) {\n        this.toggleActive()\n      }\n    },\n\n    getFullData () {\n      if (!this.fullValues) {\n        this.fillValues()\n      }\n      return {\n        data: JSON.parse(JSON.stringify(this.fullValues)),\n        displayTime: this.inputIsEmpty ? '' : String(this.displayTime)\n      }\n    },\n\n    emitTimeValue () {\n      if (this.lazy && this.bakDisplayTime === this.displayTime) {\n        if (this.debugMode) {\n          this.debugLog('The value does not change on `lazy` mode. Skip the emitting `input` and `change` event.')\n        }\n        return\n      }\n\n      const fullData = this.getFullData()\n\n      if (this.useStringValue) {\n        this.$emit('input', fullData.displayTime)\n      } else {\n        const fullValues = fullData.data\n        const tokensInUse = this.inUse.tokens || []\n        const timeValue = {}\n        tokensInUse.forEach((token) => {\n          timeValue[token] = fullValues[token] || ''\n        })\n        this.$emit('input', JSON.parse(JSON.stringify(timeValue)))\n      }\n\n      this.$emit('change', fullData)\n    },\n\n    translate12hRange (value) {\n      const valueT = this.match12hRange(value)\n      if (+valueT[1] === 12) {\n        return +valueT[1] + (valueT[2].toLowerCase() === 'p' ? 0 : 12)\n      }\n      return +valueT[1] + (valueT[2].toLowerCase() === 'p' ? 12 : 0)\n    },\n\n    isDisabled (type, value) {\n      if (!this.isBasicType(type) || !this.inUse[type]) { return true }\n      switch (type) {\n        case 'hour':\n          return this.isDisabledHour(value)\n        case 'minute':\n        case 'second':\n          if (!this[`${type}RangeList`]) {\n            return false\n          }\n          return !this[`${type}RangeList`].includes(value)\n        case 'apm':\n          if (!this.restrictedHourRange) {\n            return false\n          }\n          return !this.has[this.lowerCasedApm(value)]\n        default:\n          return true\n      }\n    },\n\n    isDisabledHour (value) {\n      if (!this.restrictedHourRange) { return false }\n      if (this.baseOn12Hours) {\n        if (!this.apm || !this.apm.length) {\n          return false\n        } else {\n          const token = this.apm.toLowerCase() === 'am' ? 'a' : 'p'\n          return !this.restrictedHourRange.includes(`${+value}${token}`)\n        }\n      }\n      // Fallback for 'HH' and 'H hour format with a `hour-range` in a 12-hour form\n      if (\n        (this.hourType === 'HH' || this.hourType === 'H') &&\n        +value === 0 && this.restrictedHourRange.includes(24)\n      ) {\n        return false\n      }\n      return !this.restrictedHourRange.includes(+value)\n    },\n\n    notInInterval (section, value) {\n      if (!section || !this.isMinuteOrSecond(section)) { return }\n      if (this.opts[`${section}Interval`] === 1) { return false }\n      return +value % this.opts[`${section}Interval`] !== 0\n    },\n\n    renderRangeList (rawRange, section) {\n      if (!rawRange || !section || !this.isMinuteOrSecond(section)) { return [] }\n      const range = []\n      let formatedValue\n      rawRange.forEach(value => {\n        if (value instanceof Array) {\n          if (value.length > 2 && this.debugMode) {\n            this.debugLog(`Nested array within \"${section}-range\" must contain no more than two items. Only the first two items of ${JSON.stringify(value)} will be taken into account.`)\n          }\n          const start = value[0]\n          const end = value[1] || value[0]\n          for (let i = +start; i <= +end; i++) {\n            if (i < 0 || i > 59) { continue }\n            formatedValue = this.formatValue(this.getTokenByType(section), i)\n            if (!range.includes(formatedValue)) {\n              range.push(formatedValue)\n            }\n          }\n        } else {\n          if (+value < 0 || +value > 59) { return }\n          formatedValue = this.formatValue(this.getTokenByType(section), value)\n          if (!range.includes(formatedValue)) {\n            range.push(formatedValue)\n          }\n        }\n      })\n      range.sort((l, r) => { return l - r })\n      // Debug Mode\n      if (this.debugMode) {\n        const fullList = (section === 'minute' ? this.minutes : this.seconds) || []\n        const validItems = fullList.filter(item => range.includes(item))\n        if (!validItems || !validItems.length) {\n          if (section === 'minute') {\n            this.debugLog(`The minute list is empty due to the \"minute-range\" config\\nminute-range: ${JSON.stringify(this.minuteRange)}\\nminute-interval: ${this.opts.minuteInterval}`)\n          } else {\n            this.debugLog(`The second list is empty due to the \"second-range\" config\\nsecond-range: ${JSON.stringify(this.secondRange)}\\nsecond-interval: ${this.opts.secondInterval}`)\n          }\n        }\n      }\n      return range\n    },\n\n    forceApmSelection () {\n      if (this.manualInput) {\n        // Skip this to allow users to paste a string value from the clipboard in Manual Input mode\n        return\n      }\n      if (this.apmType && !this.apm) {\n        if (this.has.am || this.has.pm) {\n          this.doClearApmChecking = true\n          const apmValue = this.has.am ? 'am' : 'pm'\n          this.apm = this.apmType === 'A' ? apmValue.toUpperCase() : apmValue\n        }\n      }\n    },\n\n    emptyApmSelection () {\n      if (this.doClearApmChecking && this.hour === '' && this.minute === '' && this.second === '') {\n        this.apm = ''\n      }\n      this.doClearApmChecking = false\n    },\n\n    apmDisplayText (apmValue) {\n      if (this.amText && this.lowerCasedApm(apmValue) === 'am') {\n        return this.amText\n      }\n      if (this.pmText && this.lowerCasedApm(apmValue) === 'pm') {\n        return this.pmText\n      }\n      return apmValue\n    },\n\n    toggleActive () {\n      if (this.disabled) { return }\n      this.isActive = !this.isActive\n\n      if (this.isActive) {\n        this.isFocusing = true\n        if (this.manualInput) {\n          this.$emit('focus')\n        }\n        if (!this.opts.hideDropdown) {\n          this.setDropdownState(true)\n        }\n        // Record to check if value did change in the later phase\n        if (this.lazy) {\n          this.bakDisplayTime = String(this.displayTime || '')\n        }\n        if (this.manualInput && !this.inputIsEmpty) {\n          this.$nextTick(() => {\n            if (this.$refs.input && this.$refs.input.selectionStart === 0 && this.$refs.input.selectionEnd === this.displayTime.length) {\n              // Select the first slot instead of the whole value string when tabbed in\n              this.selectFirstSlot()\n            }\n          })\n        }\n      } else {\n        if (this.showDropdown) {\n          this.setDropdownState(false)\n        } else if (this.manualInput) {\n          this.$emit('blur', this.getFullData())\n        }\n        this.isFocusing = false\n        if (this.lazy) {\n          this.fillValues(true)\n          this.bakDisplayTime = undefined\n        }\n      }\n\n      if (this.restrictedHourRange && this.baseOn12Hours) {\n        this.showDropdown ? this.forceApmSelection() : this.emptyApmSelection()\n      }\n      if (this.showDropdown) {\n        this.checkForAutoScroll()\n      }\n    },\n\n    setDropdownState (toShow, fromUserClick = false) {\n      if (toShow) {\n        if (this.appendToBody) {\n          this.appendDropdownToBody()\n        }\n        this.keepFocusing()\n        if (this.autoDirectionEnabled) {\n          this.checkDropDirection()\n        }\n        this.showDropdown = true\n        this.$emit('open') \n        if (fromUserClick) {\n          if (this.fixedDropdownButton) {\n            this.isActive = true\n          }\n          this.$emit('blur', this.getFullData())\n          this.checkForAutoScroll()\n        }\n      } else {\n        this.showDropdown = false\n        this.$emit('close', this.getFullData())\n        if (this.appendToBody) {\n          this.removeDropdownFromBody()\n        }\n      }\n    },\n\n    appendDropdownToBody () {\n      const dropdown = this.$refs && this.$refs.dropdown\n      const body = document.getElementsByTagName('body')[0]\n      if (body && dropdown) {\n        window.addEventListener('scroll', this.updateDropdownPos)\n        dropdown.classList.add('vue__time-picker-dropdown')\n        this.updateDropdownPos()\n        body.appendChild(dropdown)\n      }\n    },\n\n    updateDropdownPos () {\n      if (!this.appendToBody) { return }\n      const dropdown = this.$refs && this.$refs.dropdown\n      const body = document.getElementsByTagName('body')[0]\n      if (body && dropdown) {\n        const box = this.$el.getBoundingClientRect()\n        if (this.dropdownDirClass === 'drop-up') {\n          dropdown.style.bottom = `${window.innerHeight - box.y}px`\n          dropdown.style.top = 'auto'\n        } else {\n          dropdown.style.top = `${box.y + box.height}px`\n          dropdown.style.bottom = 'auto'\n        }\n        dropdown.style.left = `${box.x}px`\n      }\n    },\n\n    removeDropdownFromBody () {\n      const dropdown = this.$refs && this.$refs.dropdown\n      const body = document.getElementsByTagName('body')[0]\n      if (body && dropdown && body.contains(dropdown)) {\n        body.removeChild(dropdown)\n      }\n      if (dropdown) {\n        dropdown.classList.remove('vue__time-picker-dropdown')\n        dropdown.style.top = ''\n        dropdown.style.bottom = ''\n        dropdown.style.left = ''\n        this.$el.appendChild(dropdown)\n      }\n      window.removeEventListener('scroll', this.updateDropdownPos)\n    },\n\n    blurEvent () {\n      if (this.manualInput && !this.opts.hideDropdown) {\n        // hideDropdown's `blur` event is handled somewhere else\n        this.$emit('blur', this.getFullData())\n      }\n    },\n\n    select (type, value) {\n      if (this.isBasicType(type) && !this.isDisabled(type, value)) {\n        this[type] = value\n        if (this.doClearApmChecking) {\n          this.doClearApmChecking = false\n        }\n      }\n    },\n\n    clearTime () {\n      if (this.disabled) { return }\n      this.hour = ''\n      this.minute = ''\n      this.second = ''\n      this.apm = ''\n\n      if (this.manualInput && this.$refs && this.$refs.input && this.$refs.input.value.length) {\n        this.$refs.input.value = ''\n      }\n\n      if (this.lazy) {\n        this.fillValues(true)\n      }\n    },\n\n    //\n    // Auto-Scroll\n    //\n\n    checkForAutoScroll () {\n      if (this.inputIsEmpty) { return }\n      if (this.autoScroll) {\n        this.$nextTick(() => {\n          this.scrollToSelectedValues()\n        })\n      } else if (this.advancedKeyboard) {\n        // Auto-focus on selected value in the first column for advanced-keyboard\n        this.$nextTick(() => {\n          const firstColumn = this.inUse.types[0]\n          this.scrollToSelected(firstColumn, true)\n        })\n      }\n    },\n\n    scrollToSelected (column, allowFallback = false) {\n      if (!this.timeValue || this.inputIsEmpty) { return }\n      let targetList\n      if (this.appendToBody && this.$refs && this.$refs.dropdown) {\n        targetList = this.$refs.dropdown.querySelectorAll(`ul.${column}s`)[0]\n      } else {\n        targetList = this.$el.querySelectorAll(`ul.${column}s`)[0]\n      }\n      let targetValue = this.activeItemInCol(column)[0]\n      if (!targetValue && allowFallback) {\n        // No value selected in the target column, fallback to the first found valid item\n        targetValue = this.validItemsInCol(column)[0]\n      }\n      if (targetList && targetValue) {\n        targetList.scrollTop = targetValue.offsetTop || 0\n        if (this.advancedKeyboard) {\n          targetValue.focus()\n        }\n      }\n    },\n\n    scrollToSelectedValues () {\n      if (!this.timeValue || this.inputIsEmpty) { return }\n      this.inUse.types.forEach(section => {\n        this.scrollToSelected(section)\n      })\n    },\n\n    //\n    // Additional Keyboard Navigation\n    //\n\n    onFocus () {\n      if (this.disabled) { return }\n      if (!this.isFocusing) {\n        this.isFocusing = true\n      }\n      if (!this.isActive) {\n        this.toggleActive()\n      }\n    },\n\n    escBlur () {\n      if (this.disabled) { return }\n      window.clearTimeout(this.debounceTimer)\n      this.isFocusing = false\n      const inputBox = this.$el.querySelectorAll('input.display-time')[0]\n      if (inputBox) {\n        inputBox.blur()\n      }\n    },\n\n    debounceBlur () {\n      if (this.disabled) { return }\n      this.isFocusing = false\n      window.clearTimeout(this.debounceTimer)\n      this.debounceTimer = window.setTimeout(() => {\n        window.clearTimeout(this.debounceTimer)\n        this.onBlur()\n      }, this.opts.blurDelay)\n    },\n\n    onBlur () {\n      if (!this.disabled && !this.isFocusing && this.isActive) {\n        this.toggleActive()\n      }\n    },\n\n    keepFocusing () {\n      if (this.disabled) { return }\n      window.clearTimeout(this.debounceTimer)\n      if (!this.isFocusing) {\n        this.isFocusing = true\n      }\n    },\n\n    onTab (column, value, evt) {\n      if (this.appendToBody && evt.shiftKey) {\n        const firstColumn = this.inUse.types[0]\n        if (column !== firstColumn) { return }\n        const firstValidValue = this.validItemsInCol(firstColumn)[0]\n        // Is the first valid item in the first column\n        if (firstValidValue && firstValidValue.getAttribute('data-key') === String(value)) {\n          evt.preventDefault()\n          // Focus back on <input>\n          if (this.$refs && this.$refs.input) {\n            this.$refs.input.focus()\n          }\n        }\n      }\n    },\n\n    validItemsInCol (column) {\n      const columnClass = `${column}s`\n      if (this.appendToBody && this.$refs && this.$refs.dropdown) {\n        return this.$refs.dropdown.querySelectorAll(`ul.${columnClass} > li:not(.hint):not([disabled])`)\n      }\n      return this.$el.querySelectorAll(`ul.${columnClass} > li:not(.hint):not([disabled])`)\n    },\n\n    activeItemInCol (column) {\n      const columnClass = `${column}s`\n      if (this.appendToBody && this.$refs && this.$refs.dropdown) {\n        return this.$refs.dropdown.querySelectorAll(`ul.${columnClass} > li.active:not(.hint)`)\n      }\n      return this.$el.querySelectorAll(`ul.${columnClass} > li.active:not(.hint)`)\n    },\n\n    getClosestSibling (column, dataKey, getPrevious = false) {\n      const siblingsInCol = this.validItemsInCol(column)\n      const selfIndex = Array.prototype.findIndex.call(siblingsInCol, (sbl) => {\n        return sbl.getAttribute('data-key') === dataKey\n      })\n\n      // Already the first item\n      if (getPrevious && selfIndex === 0) {\n        return siblingsInCol[siblingsInCol.length - 1]\n      }\n      // Already the last item\n      if (!getPrevious && selfIndex === siblingsInCol.length - 1) {\n        return siblingsInCol[0]\n      }\n      // Selected value not in the valid values list\n      if (selfIndex < 0) {\n        return siblingsInCol[0]\n      }\n\n      if (getPrevious) {\n        return siblingsInCol[selfIndex - 1]\n      }\n      return siblingsInCol[selfIndex + 1]\n    },\n\n    prevItem (column, dataKey, isManualInput = false) {\n      const targetItem = this.getClosestSibling(column, dataKey, true)\n      if (targetItem) {\n        return isManualInput ? targetItem : targetItem.focus()\n      }\n    },\n\n    nextItem (column, dataKey, isManualInput = false) {\n      const targetItem = this.getClosestSibling(column, dataKey, false)\n      if (targetItem) {\n        return isManualInput ? targetItem : targetItem.focus()\n      }\n    },\n\n    getSideColumnName (currentColumn, toLeft = false) {\n      const currentColumnIndex = this.inUse.types.indexOf(currentColumn)\n      if (toLeft && currentColumnIndex <= 0) {\n        if (this.debugMode) {\n          this.debugLog('You\\'re in the leftmost list already')\n        }\n        return\n      } else if (!toLeft && currentColumnIndex === (this.inUse.types.length - 1)) {\n        if (this.debugMode) {\n          this.debugLog('You\\'re in the rightmost list already')\n        }\n        return\n      }\n      return this.inUse.types[toLeft ? currentColumnIndex - 1 : currentColumnIndex + 1]\n    },\n\n    getFirstItemInSideColumn (currentColumn, toLeft = false) {\n      const targetColumn = this.getSideColumnName(currentColumn, toLeft)\n      if (!targetColumn) { return }\n      const listItems = this.validItemsInCol(targetColumn)\n      if (listItems && listItems[0]) {\n        return listItems[0]\n      }\n    },\n\n    getActiveItemInSideColumn (currentColumn, toLeft = false) {\n      const targetColumn = this.getSideColumnName(currentColumn, toLeft)\n      if (!targetColumn) { return }\n      const activeItems = this.activeItemInCol(targetColumn)\n      if (activeItems && activeItems[0]) {\n        return activeItems[0]\n      }\n    },\n\n    toLeftColumn (currentColumn) {\n      const targetItem = this.getActiveItemInSideColumn(currentColumn, true) || this.getFirstItemInSideColumn(currentColumn, true)\n      if (targetItem) {\n        targetItem.focus()\n      }\n    },\n\n    toRightColumn (currentColumn) {\n      const targetItem = this.getActiveItemInSideColumn(currentColumn, false) || this.getFirstItemInSideColumn(currentColumn, false)\n      if (targetItem) {\n        targetItem.focus()\n      }\n    },\n\n    //\n    // Manual Input\n    //\n\n    onMouseDown () {\n      if (!this.manualInput) { return }\n      window.clearTimeout(this.selectionTimer)\n      this.selectionTimer = window.setTimeout(() => {\n        window.clearTimeout(this.selectionTimer)\n        if (this.$refs && this.$refs.input) {\n          const nearestSlot = this.getNearestChunkByPos(this.$refs.input.selectionStart || 0)\n          this.debounceSetInputSelection(nearestSlot)\n        }\n      }, 50)\n    },\n\n    keyDownHandler (evt) {\n      if (evt.isComposing || evt.keyCode === 229) {\n        // Skip IME inputs\n        evt.preventDefault()\n        evt.stopPropagation()\n        return false\n      }\n      // Numbers\n      if ((evt.keyCode >= 48 && evt.keyCode <= 57) || (evt.keyCode >= 96 && evt.keyCode <= 105)) {\n        evt.preventDefault()\n        this.keyboardInput(evt.key)\n      // A|P|M\n      } else if ([65, 80, 77].includes(evt.keyCode)) {\n        evt.preventDefault()\n        this.keyboardInput(evt.key, true)\n      // Arrow keys\n      } else if (evt.keyCode >= 37 && evt.keyCode <= 40) {\n        evt.preventDefault()\n        this.clearKbInputLog()\n        this.arrowHandler(evt)\n      // Delete|Backspace\n      } else if (evt.keyCode === 8 || evt.keyCode === 46) {\n        evt.preventDefault()\n        this.clearKbInputLog()\n        this.clearTime()\n      // Tab\n      } else if (evt.keyCode === 9) {\n        this.clearKbInputLog()\n        this.tabHandler(evt)\n      // Colon|Space\n      } else if (evt.keyCode === 186 || evt.keyCode === 32) {\n        evt.preventDefault()\n        this.clearKbInputLog()\n        this.toNextSlot()\n      // Prevent any Non-ESC and non-pasting inputs\n      } else if (evt.keyCode !== 27 && !(evt.metaKey || evt.ctrlKey)) {\n        evt.preventDefault()\n      }\n    },\n\n    onCompostionStart (evt) {\n      evt.preventDefault()\n      evt.stopPropagation()\n      this.bakCurrentPos = this.getCurrentTokenChunk()\n      return false\n    },\n\n    onCompostionEnd (evt) {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      const cpsData = evt.data\n      let inputIsCustomApmText = false\n      if (this.has.customApmText) {\n        inputIsCustomApmText = this.isCustomApmText(cpsData)\n      }\n      if (inputIsCustomApmText) {\n        this.setSanitizedValueToSection('apm', inputIsCustomApmText)\n      }\n\n      this.$refs.input.value = this.has.customApmText ? this.customDisplayTime : this.displayTime\n\n      this.$nextTick(() => {\n        if (this.bakCurrentPos) {\n          const bakPos = JSON.parse(JSON.stringify(this.bakCurrentPos))\n          if (inputIsCustomApmText) {\n            bakPos.end = (bakPos.start + cpsData.length)\n          }\n          this.debounceSetInputSelection(bakPos)\n          this.bakCurrentPos = null\n        }\n      })\n      return false\n    },\n\n    pasteHandler (evt) {\n      evt.preventDefault()\n      let pastingText = (evt.clipboardData || window.clipboardData).getData('text')\n      if (this.debugMode) {\n        this.debugLog(`Pasting value \"${pastingText}\" from clipboard`)\n      }\n      if (!pastingText || !pastingText.length) { return }\n\n      // Replace custom AM/PM text (if any)\n      if (this.has.customApmText) {\n        pastingText = this.replaceCustomApmText(pastingText)\n      }\n\n      if (this.inputIsEmpty) {\n        this.readStringValues(pastingText)\n      } else {\n        this.kbInputLog = pastingText.substr(-2, 2)\n        this.setKbInput()\n        this.debounceClearKbLog()\n      }\n    },\n\n    arrowHandler (evt) {\n      const direction = { 37: 'L', 38: 'U', 39: 'R', 40: 'D' }[evt.keyCode]\n      if (direction === 'U' || direction === 'D') {\n        if (this.inputIsEmpty) {\n          this.selectFirstValidValue()\n        } else {\n          const currentChunk = this.getCurrentTokenChunk()\n          if (!currentChunk) {\n            this.selectFirstValidValue()\n            return\n          }\n          const tokenType = currentChunk.type\n          this.getClosestValidItemInCol(tokenType, this[tokenType], direction)\n          const newChunkPos = this.getCurrentTokenChunk()\n          this.debounceSetInputSelection(newChunkPos)\n        }\n      } else if (direction === 'R') {\n        this.toLateralToken(false)\n      } else if (direction === 'L') {\n        this.toLateralToken(true)\n      }\n    },\n\n    tabHandler (evt) {\n      if (!this.inputIsEmpty && this.tokenChunksPos && this.tokenChunksPos.length) {\n        const currentChunk = this.getCurrentTokenChunk()\n        if (!currentChunk) { return }\n        const firstChunk = this.tokenChunksPos[0]\n        const lastChunk = this.tokenChunksPos[this.tokenChunksPos.length - 1]\n        if ((evt.shiftKey && currentChunk.token !== firstChunk.token) || (!evt.shiftKey && currentChunk.token !== lastChunk.token)) {\n          evt.preventDefault()\n          this.toLateralToken(evt.shiftKey)\n        }\n      } else if (this.appendToBody && this.advancedKeyboard) {\n        if (evt.shiftKey) { return }\n        evt.preventDefault()\n        if (this.inputIsEmpty) {\n          const firstColumn = this.inUse.types[0]\n          const targetValue = this.validItemsInCol(firstColumn)[0]\n          if (targetValue) {\n            targetValue.focus()\n          }\n        }\n      }\n    },\n\n    keyboardInput (newChar, isApm = false) {\n      const currentChunk = this.getCurrentTokenChunk()\n      if (!currentChunk || (currentChunk.type !== 'apm' && isApm) || (currentChunk.type === 'apm' && !isApm)) { return }\n      this.kbInputLog = `${this.kbInputLog.substr(-1)}${newChar}`\n      this.setKbInput()\n      this.debounceClearKbLog()\n    },\n\n    clearKbInputLog () {\n      window.clearTimeout(this.kbInputTimer)\n      this.kbInputLog = ''\n    },\n\n    debounceClearKbLog () {\n      window.clearTimeout(this.kbInputTimer)\n      this.kbInputTimer = window.setTimeout(() => {\n        this.clearKbInputLog()\n      }, this.opts.manualInputTimeout)\n    },\n\n    setKbInput (value) {\n      value = value || this.kbInputLog\n      const currentChunk = this.getCurrentTokenChunk()\n      if (!currentChunk || !value || !value.length) { return }\n      const chunkType = currentChunk.type\n      const chunkToken = currentChunk.token\n\n      let validValue\n      if (chunkType === 'apm') {\n        if (this.lowerCasedApm(value).includes('a')) {\n          validValue = 'am'\n        } else if (this.lowerCasedApm(value).includes('p')) {\n          validValue = 'pm'\n        }\n        if (validValue) {\n          validValue = chunkToken === 'A' ? validValue.toUpperCase() : validValue\n        }\n      } else {\n        if (this.isValidValue(chunkToken, value)) {\n          validValue = value\n        } else {\n          const lastInputValue = this.formatValue(chunkToken, value.substr(-1))\n          if (this.isValidValue(chunkToken, lastInputValue)) {\n            validValue = lastInputValue\n          }\n        }\n      }\n\n      if (validValue) {\n        this.setSanitizedValueToSection(chunkType, validValue)\n        const newChunkPos = this.getCurrentTokenChunk()\n        this.debounceSetInputSelection(newChunkPos)      \n      }\n      if (this.debugMode) {\n        if (validValue) {\n          this.debugLog(`Successfully set value \"${validValue}\" from latest input \"${value}\" for the \"${chunkType}\" slot`)\n        } else {\n          this.debugLog(`Value \"${value}\" is invalid in the \"${chunkType}\" slot`)\n        }\n      }\n    },\n\n    // Form Autofill\n    onChange () {\n      if (!this.manualInput || !this.$refs || !this.$refs.input) { return }\n      const autoFillValue = this.$refs.input.value || ''\n      if (autoFillValue && autoFillValue.length) {\n        this.readStringValues(autoFillValue)\n      }\n    },\n\n    getNearestChunkByPos (startPos) {\n      if (!this.tokenChunksPos || !this.tokenChunksPos.length) { return }\n      let nearest\n      let nearestDelta = -1\n      for (let i = 0; i < this.tokenChunksPos.length; i++) {\n        const chunk = JSON.parse(JSON.stringify(this.tokenChunksPos[i]))\n        if (chunk.start === startPos) {\n          return chunk\n        }\n        const delta = Math.abs(chunk.start - startPos)\n        if (nearestDelta < 0) {\n          nearest = chunk\n          nearestDelta = delta\n        } else {\n          if (nearestDelta <= delta) {\n            return nearest\n          }\n          nearestDelta = delta\n          nearest = chunk\n        }\n      }\n      return nearest\n    },\n\n    selectFirstValidValue () {\n      if (!this.tokenChunksPos || !this.tokenChunksPos.length) { return }\n      const firstSlotType = this.tokenChunksPos[0].type\n      if (firstSlotType === 'hour') {\n        this.getClosestHourItem()\n      } else {\n        this.getClosestValidItemInCol(firstSlotType, this[firstSlotType])\n      }\n      this.selectFirstSlot()\n    },\n\n    getClosestHourItem (currentValue, direction = 'U') {\n      if (!this.validHoursList || !this.validHoursList.length) {\n        if (this.debugMode) {\n          this.debugLog(`No valid hour values found, please check your \"hour-range\" config\\nhour-range: ${JSON.stringify(this.hourRange)}`)\n        }\n        return\n      }\n      if (!currentValue) {\n        this.setManualHour(this.validHoursList[0])\n        return\n      }\n      const currentIndex = this.validHoursList.findIndex(item => {\n        if (!this.baseOn12Hours) {\n          return item === currentValue\n        } else {\n          const valueKey = `${currentValue}${this.lowerCasedApm(this.apm) === 'pm' ? 'p' : 'a'}` \n          return item === valueKey\n        }\n      })\n      let nextIndex\n      if (currentIndex === -1) {\n        nextIndex = 0\n      } else if (direction === 'D') {\n        nextIndex = currentIndex === 0 ? this.validHoursList.length - 1 : currentIndex - 1\n      } else {\n        nextIndex = (currentIndex + 1) % this.validHoursList.length\n      }\n      const nextItem = this.validHoursList[nextIndex]\n      this.setManualHour(nextItem)\n    },\n\n    getClosestValidItemInCol (column, currentValue, direction = 'U') {\n      if (column === 'hour') {\n        this.getClosestHourItem(currentValue, direction)\n      } else {\n        const nextItem = direction === 'D' ? this.prevItem(column, this[column], true) : this.nextItem(column, this[column], true)\n        if (nextItem) {\n          this.select(column, nextItem.getAttribute('data-key'))\n        }\n      }\n    },\n\n    setSanitizedValueToSection (section, inputValue) {\n      if (!section || !this.getTokenByType(section)) { return }\n      // NOTE: Disabled values are allowed here, followed by an 'error' event, though\n      const sanitizedValue = this.sanitizedValue(this.getTokenByType(section), inputValue)\n      this[section] = sanitizedValue\n    },\n\n    setManualHour (nextItem) {\n      if (this.is12hRange(nextItem)) {\n        const hourT = this.match12hRange(nextItem)\n        const apmValue = hourT[2] === 'a' ? 'AM' : 'PM'\n        this.setSanitizedValueToSection('apm', this.apmType === 'a' ? apmValue.toLowerCase() : apmValue)\n        this.setSanitizedValueToSection('hour', hourT[1])\n      } else {\n        this.setSanitizedValueToSection('hour', nextItem)\n      }\n    },\n\n    debounceSetInputSelection ({start = 0, end = 0 }) {\n      this.$nextTick(() => {\n        this.setInputSelectionRange(start, end)\n      })\n      window.clearTimeout(this.selectionTimer)\n      this.selectionTimer = window.setTimeout(() => {\n        window.clearTimeout(this.selectionTimer)\n        // Double-check selection for 12hr format\n        if (this.$refs.input && (this.$refs.input.selectionStart !== start || this.$refs.input.selectionEnd !== end)) {\n          this.setInputSelectionRange(start, end)\n        }\n      }, 30)\n    },\n\n    setInputSelectionRange (start, end) {\n      if (this.$refs && this.$refs.input) {\n        this.$refs.input.setSelectionRange(start, end)\n      }\n    },\n\n    getCurrentTokenChunk () {\n      return this.getNearestChunkByPos((this.$refs.input && this.$refs.input.selectionStart) || 0)\n    },\n\n    selectFirstSlot () {\n      const firstChunkPos = this.getNearestChunkByPos(0)\n      this.debounceSetInputSelection(firstChunkPos)\n    },\n\n    toNextSlot () {\n      if (!this.inputIsEmpty && this.tokenChunksPos && this.tokenChunksPos.length) {\n        const currentChunk = this.getCurrentTokenChunk()\n        if (!currentChunk) { return }\n        const lastChunk = this.tokenChunksPos[this.tokenChunksPos.length - 1]\n        if (currentChunk.token !== lastChunk.token) {\n          this.toLateralToken(false)\n        }\n      }\n    },\n\n    toLateralToken (toLeft) {\n      const currentChunk = this.getCurrentTokenChunk()\n      if (!currentChunk) {\n        this.selectFirstValidValue()\n        return\n      }\n      const currentChunkIndex = this.tokenChunksPos.findIndex(chk => chk.token === currentChunk.token)\n      if ((!toLeft && currentChunkIndex >= this.tokenChunksPos.length - 1) || (toLeft && currentChunkIndex === 0)) {\n        if (this.debugMode) {\n          if (toLeft) {\n            this.debugLog('You\\'re in the leftmost slot already')\n          } else {\n            this.debugLog('You\\'re in the rightmost slot already')\n          }\n        }\n        return\n      }\n      const targetSlotPos = toLeft ? this.tokenChunksPos[currentChunkIndex - 1] : this.tokenChunksPos[currentChunkIndex + 1]\n      this.debounceSetInputSelection(targetSlotPos)\n    },\n\n    isCustomApmText (inputData) {\n      if (!inputData || !inputData.length) { return false }\n      if (this.amText && this.amText === inputData) {\n        return this.apmType === 'A' ? 'AM' : 'am'\n      }\n      if (this.pmText && this.pmText === inputData) {\n        return this.apmType === 'A' ? 'PM' : 'pm'\n      }\n      return false\n    },\n\n    replaceCustomApmText (inputString) {\n      if (this.amText && this.amText.length && inputString.includes(this.amText)) {\n        return inputString.replace(new RegExp(this.amText, 'g'), this.apmType === 'A' ? 'AM' : 'am')\n      } else if (this.pmText && this.pmText.length && inputString.includes(this.pmText)) {\n        return inputString.replace(new RegExp(this.pmText, 'g'), this.apmType === 'A' ? 'PM' : 'pm')\n      }\n      return inputString\n    },\n\n    checkDropDirection () {\n      if (!this.$el) { return }\n      let container\n      if (this.containerId && this.containerId.length) {\n        container = document.getElementById(this.containerId)\n        if (!container && this.debugMode) {\n          this.debugLog(`Container with id \"${this.containerId}\" not found. Fallback to document body.`)\n        }\n      }\n      const el = this.$el\n      let spaceDown\n      if (container && container.offsetHeight) {\n        // Valid container found\n        spaceDown = (container.offsetTop + container.offsetHeight) - (el.offsetTop + el.offsetHeight)\n      } else {\n        // Fallback to document body\n        const docHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight)\n        spaceDown = docHeight - (el.offsetTop + el.offsetHeight)\n      }\n      this.forceDropOnTop = this.opts.dropOffsetHeight > spaceDown\n    },\n\n    //\n    // Helpers\n    //\n\n    is12hRange (value) {\n      return /^\\d{1,2}(a|p|A|P)$/.test(value)\n    },\n\n    match12hRange (value) {\n      return value.match(/^(\\d{1,2})(a|p|A|P)$/)\n    },\n\n    isNumber (value) {\n      return !isNaN(parseFloat(value)) && isFinite(value)\n    },\n\n    isBasicType (type) {\n      return CONFIG.BASIC_TYPES.includes(type)\n    },\n\n    lowerCasedApm (apmValue) {\n      return (apmValue || '').toLowerCase()\n    },\n\n    getTokenRegex (token) {\n      switch (token) {\n        case 'HH':\n          return '([01][0-9]|2[0-3]|H{2})'\n        case 'H':\n          return '([0-9]{1}|1[0-9]|2[0-3]|H{1})'\n        case 'hh':\n          return '(0[1-9]|1[0-2]|h{2})'\n        case 'h':\n          return '([1-9]{1}|1[0-2]|h{1})'\n        case 'kk':\n          return '(0[1-9]|1[0-9]|2[0-4]|k{2})'\n        case 'k':\n          return '([1-9]{1}|1[0-9]|2[0-4]|k{1})'\n        case 'mm':\n          return '([0-5][0-9]|m{2})'\n        case 'ss':\n          return '([0-5][0-9]|s{2})'\n        case 'm':\n          return '([0-9]{1}|[1-5][0-9]|m{1})'\n        case 's':\n          return '([0-9]{1}|[1-5][0-9]|s{1})'\n        case 'A':\n          return '(AM|PM|A{1})'\n        case 'a':\n          return '(am|pm|a{1})'\n        default:\n          return ''\n      }\n    },\n\n    isEmptyValue (targetToken, testValue) {\n      return (!testValue || !testValue.length) || (testValue && testValue === targetToken)\n    },\n\n    isValidValue (targetToken, testValue) {\n      if (!targetToken || this.isEmptyValue(targetToken, testValue)) { return false }\n      const tokenRegexStr = this.getTokenRegex(targetToken)\n      if (!tokenRegexStr || !tokenRegexStr.length) { return false }\n      return (new RegExp(`^${tokenRegexStr}$`)).test(testValue)\n    },\n\n    sanitizedValue (targetToken, inputValue) {\n      if (this.isValidValue(targetToken, inputValue)) {\n        return inputValue\n      }\n      return ''\n    },\n\n    getTokenType (token) {\n      return this.inUse.types[this.inUse.tokens.indexOf(token)] || ''\n    },\n\n    getTokenByType (type) {\n      return this[`${type}Type`] || ''\n    },\n\n    isMinuteOrSecond (type) {\n      return ['minute', 'second'].includes(type)\n    },\n\n    debugLog (logText) {\n      if (!logText || !logText.length) { return }\n      let identifier = ''\n      if (this.id) {\n        identifier += `#${this.id}`\n      }\n      if (this.name) {\n        identifier += `[name=${this.name}]`\n      }\n      if (this.inputClass) {\n        let inputClasses = []\n        if (typeof this.inputClass === 'string') {\n          inputClasses = this.inputClass.split(/\\s/g)\n        } else if (Array.isArray(this.inputClass)) {\n          inputClasses = [].concat([], this.inputClass)\n        } else if (typeof this.inputClass === 'object') {\n          Object.keys(this.inputClass).forEach(clsName => {\n            if (this.inputClass[clsName]) {\n              inputClasses.push(clsName)\n            }\n          })\n        }\n        for (let inputClass of inputClasses) {\n          if (inputClass && inputClass.trim().length) {\n            identifier += `.${inputClass.trim()}`\n          }\n        }\n      }\n      const finalLogText = `DEBUG: ${logText}${identifier ? `\\n\\t(${identifier})` : '' }`\n      if (window.console.debug && typeof window.console.debug === 'function') {\n        window.console.debug(finalLogText)\n      } else {\n        window.console.log(finalLogText)\n      }\n    }\n  },\n\n  mounted () {\n    window.clearTimeout(this.debounceTimer)\n    window.clearTimeout(this.selectionTimer)\n    window.clearTimeout(this.kbInputTimer)\n    this.renderFormat()\n  },\n\n  beforeDestroy () {\n    window.clearTimeout(this.debounceTimer)\n    window.clearTimeout(this.selectionTimer)\n    window.clearTimeout(this.kbInputTimer)\n  }\n}\n</script>\n\n<template>\n<span class=\"vue__time-picker time-picker\" :style=\"inputWidthStyle\">\n  <input type=\"text\" class=\"display-time\" ref=\"input\"\n         :class=\"[inputClass, {'is-empty': inputIsEmpty, 'invalid': hasInvalidInput, 'all-selected': allValueSelected, 'disabled': disabled, 'has-custom-icon': $slots && $slots.icon }]\"\n         :style=\"inputWidthStyle\"\n         :id=\"id\"\n         :name=\"name\"\n         :value=\"inputIsEmpty ? null : customDisplayTime\"\n         :placeholder=\"placeholder ? placeholder : formatString\"\n         :tabindex=\"disabled ? -1 : tabindex\"\n         :disabled=\"disabled\"\n         :readonly=\"!manualInput\"\n         :autocomplete=\"autocomplete\"\n         @focus=\"onFocus\"\n         @change=\"onChange\"\n         @blur=\"debounceBlur(); blurEvent()\"\n         @mousedown=\"onMouseDown\"\n         @keydown=\"keyDownHandler\"\n         @compositionstart=\"onCompostionStart\"\n         @compositionend=\"onCompostionEnd\"\n         @paste=\"pasteHandler\"\n         @keydown.esc.exact=\"escBlur\" />\n  <div class=\"controls\" v-if=\"showClearBtn || showDropdownBtn\" tabindex=\"-1\">\n    <span v-if=\"!isActive && showClearBtn\" class=\"clear-btn\" tabindex=\"-1\"\n          :class=\"{'has-custom-btn': $slots && $slots.clearButton }\"\n          @click=\"clearTime\">\n      <slot name=\"clearButton\"><span class=\"char\">&times;</span></slot>\n    </span>\n    <span v-if=\"showDropdownBtn\" class=\"dropdown-btn\" tabindex=\"-1\"\n          :class=\"{'has-custom-btn': $slots && $slots.dropdownButton }\"\n          @click=\"setDropdownState(fixedDropdownButton ? !showDropdown : true, true)\"\n          @mousedown=\"keepFocusing\">\n      <slot name=\"dropdownButton\"><span class=\"char\">&dtrif;</span></slot>\n    </span>\n  </div>\n  <div class=\"custom-icon\" v-if=\"$slots && $slots.icon\"><slot name=\"icon\"></slot></div>\n  <div class=\"time-picker-overlay\" v-if=\"showDropdown\" @click=\"toggleActive\" tabindex=\"-1\"></div>\n  <div class=\"dropdown\" ref=\"dropdown\" v-show=\"showDropdown\" tabindex=\"-1\"\n       :class=\"[dropdownDirClass]\" :style=\"inputWidthStyle\"\n       @mouseup=\"keepFocusing\" @click.stop=\"\">\n    <div class=\"select-list\" :style=\"inputWidthStyle\" tabindex=\"-1\">\n      <!-- Common Keyboard Support: less event listeners -->\n      <template v-if=\"!advancedKeyboard\">\n        <template v-for=\"column in columnsSequence\">\n          <ul v-if=\"column === 'hour'\" :key=\"column\" class=\"hours\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"hourLabelText\"></li>\n            <template v-for=\"(hr, hIndex) in hours\">\n              <li v-if=\"!opts.hideDisabledHours || (opts.hideDisabledHours && !isDisabled('hour', hr))\"\n                  :key=\"hIndex\"\n                  :class=\"{active: hour === hr}\"\n                  :disabled=\"isDisabled('hour', hr)\"\n                  :data-key=\"hr\"\n                  v-text=\"hr\"\n                  @click=\"select('hour', hr)\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'minute'\" :key=\"column\" class=\"minutes\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"minuteLabelText\"></li>\n            <template v-for=\"(m, mIndex) in minutes\">\n              <li v-if=\"!opts.hideDisabledMinutes || (opts.hideDisabledMinutes && !isDisabled('minute', m))\"\n                  :key=\"mIndex\"\n                  :class=\"{active: minute === m}\"\n                  :disabled=\"isDisabled('minute', m)\"\n                  :data-key=\"m\"\n                  v-text=\"m\"\n                  @click=\"select('minute', m)\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'second'\" :key=\"column\" class=\"seconds\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"secondLabelText\"></li>\n            <template v-for=\"(s, sIndex) in seconds\">\n              <li v-if=\"!opts.hideDisabledSeconds || (opts.hideDisabledSeconds && !isDisabled('second', s))\"\n                  :key=\"sIndex\"\n                  :class=\"{active: second === s}\"\n                  :disabled=\"isDisabled('second', s)\"\n                  :data-key=\"s\"\n                  v-text=\"s\"\n                  @click=\"select('second', s)\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'apm'\" :key=\"column\" class=\"apms\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"apmLabelText\"></li>\n            <template v-for=\"(a, aIndex) in apms\">\n              <li v-if=\"!opts.hideDisabledHours || (opts.hideDisabledHours && !isDisabled('apm', a))\"\n                  :key=\"aIndex\"\n                  :class=\"{active: apm === a}\"\n                  :disabled=\"isDisabled('apm', a)\"\n                  :data-key=\"a\"\n                  v-text=\"apmDisplayText(a)\"\n                  @click=\"select('apm', a)\"></li>\n            </template>\n          </ul>\n        </template>\n      </template><!-- / Common Keyboard Support -->\n\n      <!--\n        Advanced Keyboard Support\n        Addeds hundreds of additional event lisenters\n      -->\n      <template v-if=\"advancedKeyboard\">\n        <template v-for=\"column in columnsSequence\">\n          <ul v-if=\"column === 'hour'\" :key=\"column\" class=\"hours\" tabindex=\"-1\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"hourLabelText\" tabindex=\"-1\"></li>\n            <template v-for=\"(hr, hIndex) in hours\">\n              <li v-if=\"!opts.hideDisabledHours || (opts.hideDisabledHours && !isDisabled('hour', hr))\"\n                  :key=\"hIndex\"\n                  :class=\"{active: hour === hr}\"\n                  :tabindex=\"isDisabled('hour', hr) ? -1 : tabindex\"\n                  :data-key=\"hr\"\n                  :disabled=\"isDisabled('hour', hr)\"\n                  v-text=\"hr\"\n                  @click=\"select('hour', hr)\"\n                  @keydown.tab=\"onTab('hour', hr, $event)\"\n                  @keydown.space.prevent=\"select('hour', hr)\"\n                  @keydown.enter.prevent=\"select('hour', hr)\"\n                  @keydown.up.prevent=\"prevItem('hour', hr)\"\n                  @keydown.down.prevent=\"nextItem('hour', hr)\"\n                  @keydown.left.prevent=\"toLeftColumn('hour')\"\n                  @keydown.right.prevent=\"toRightColumn('hour')\"\n                  @keydown.esc.exact=\"debounceBlur\"\n                  @blur=\"debounceBlur\"\n                  @focus=\"keepFocusing\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'minute'\" :key=\"column\" class=\"minutes\" tabindex=\"-1\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"minuteLabelText\" tabindex=\"-1\"></li>\n            <template v-for=\"(m, mIndex) in minutes\">\n              <li v-if=\"!opts.hideDisabledMinutes || (opts.hideDisabledMinutes && !isDisabled('minute', m))\"\n                  :key=\"mIndex\"\n                  :class=\"{active: minute === m}\"\n                  :tabindex=\"isDisabled('minute', m) ? -1 : tabindex\"\n                  :data-key=\"m\"\n                  :disabled=\"isDisabled('minute', m)\"\n                  v-text=\"m\"\n                  @click=\"select('minute', m)\"\n                  @keydown.tab=\"onTab('minute', m, $event)\"\n                  @keydown.space.prevent=\"select('minute', m)\"\n                  @keydown.enter.prevent=\"select('minute', m)\"\n                  @keydown.up.prevent=\"prevItem('minute', m)\"\n                  @keydown.down.prevent=\"nextItem('minute', m)\"\n                  @keydown.left.prevent=\"toLeftColumn('minute')\"\n                  @keydown.right.prevent=\"toRightColumn('minute')\"\n                  @keydown.esc.exact=\"debounceBlur\"\n                  @blur=\"debounceBlur\"\n                  @focus=\"keepFocusing\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'second'\" :key=\"column\" class=\"seconds\" tabindex=\"-1\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"secondLabelText\" tabindex=\"-1\"></li>\n            <template v-for=\"(s, sIndex) in seconds\">\n              <li v-if=\"!opts.hideDisabledSeconds || (opts.hideDisabledSeconds && !isDisabled('second', s))\"\n                  :key=\"sIndex\"\n                  :class=\"{active: second === s}\"\n                  :tabindex=\"isDisabled('second', s) ? -1 : tabindex\"\n                  :data-key=\"s\"\n                  :disabled=\"isDisabled('second', s)\"\n                  v-text=\"s\"\n                  @click=\"select('second', s)\"\n                  @keydown.tab=\"onTab('second', s, $event)\"\n                  @keydown.space.prevent=\"select('second', s)\"\n                  @keydown.enter.prevent=\"select('second', s)\"\n                  @keydown.up.prevent=\"prevItem('second', s)\"\n                  @keydown.down.prevent=\"nextItem('second', s)\"\n                  @keydown.left.prevent=\"toLeftColumn('second')\"\n                  @keydown.right.prevent=\"toRightColumn('second')\"\n                  @keydown.esc.exact=\"debounceBlur\"\n                  @blur=\"debounceBlur\"\n                  @focus=\"keepFocusing\"></li>\n            </template>\n          </ul>\n          <ul v-if=\"column === 'apm'\" :key=\"column\" class=\"apms\" tabindex=\"-1\" @scroll=\"keepFocusing\">\n            <li class=\"hint\" v-text=\"apmLabelText\" tabindex=\"-1\"></li>\n            <template v-for=\"(a, aIndex) in apms\">\n              <li v-if=\"!opts.hideDisabledHours || (opts.hideDisabledHours && !isDisabled('apm', a))\"\n                  :key=\"aIndex\"\n                  :class=\"{active: apm === a}\"\n                  :tabindex=\"isDisabled('apm', a) ? -1 : tabindex\"\n                  :data-key=\"a\"\n                  :disabled=\"isDisabled('apm', a)\"\n                  v-text=\"apmDisplayText(a)\"\n                  @click=\"select('apm', a)\"\n                  @keydown.tab=\"onTab('apm', a, $event)\"\n                  @keydown.space.prevent=\"select('apm', a)\"\n                  @keydown.enter.prevent=\"select('apm', a)\"\n                  @keydown.up.prevent=\"prevItem('apm', a)\"\n                  @keydown.down.prevent=\"nextItem('apm', a)\"\n                  @keydown.left.prevent=\"toLeftColumn('apm')\"\n                  @keydown.right.prevent=\"toRightColumn('apm')\"\n                  @keydown.esc.exact=\"debounceBlur\"\n                  @blur=\"debounceBlur\"\n                  @focus=\"keepFocusing\"></li>\n            </template>\n          </ul>\n        </template>\n      </template><!-- / Advanced Keyboard Support -->\n    </div>\n  </div>\n</span>\n</template>\n\n<style>\n.vue__time-picker {\n  display: inline-block;\n  position: relative;\n  font-size: 1em;\n  width: 10em;\n  font-family: sans-serif;\n  vertical-align: middle;\n}\n\n.vue__time-picker * {\n  box-sizing: border-box;\n}\n\n.vue__time-picker input.display-time {\n  border: 1px solid #d2d2d2;\n  width: 10em;\n  height: 2.2em;\n  padding: 0.3em 0.5em;\n  font-size: 1em;\n}\n\n.vue__time-picker input.has-custom-icon {\n  padding-left: 1.8em;\n}\n\n.vue__time-picker input.display-time.invalid:not(.skip-error-style) {\n  border-color: #cc0033;\n  outline-color: #cc0033;\n}\n\n.vue__time-picker input.display-time:disabled,\n.vue__time-picker input.display-time.disabled {\n  color: #d2d2d2;\n}\n\n.vue__time-picker .controls {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 3;\n\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-end;\n  align-items: stretch;\n\n  /* Prevent browser focusing on the controls layer */\n  pointer-events: none;\n}\n\n.vue__time-picker .controls > * {\n  cursor: pointer;\n  \n  width: auto;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n\n  padding: 0 0.35em;\n\n  color: #d2d2d2;\n  line-height: 100%;\n  font-style: normal;\n\n  /* Resume pointer-events on children components */\n  pointer-events: initial;\n\n  transition: color .2s, opacity .2s;\n}\n\n.vue__time-picker .controls > *:hover {\n  color: #797979;\n}\n\n.vue__time-picker .controls > *:focus,\n.vue__time-picker .controls > *:active {\n  outline: 0;\n}\n\n.vue__time-picker .controls .char {\n  font-size: 1.1em;\n  line-height: 100%;\n\n  /* Vertical align fixes for webkit browsers only */\n  -webkit-margin-before: -0.15em;\n}\n\n.vue__time-picker .custom-icon {\n  z-index: 2;\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  width: 1.8em;\n\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: center;\n\n  /* pass down mouse events to the <input> underneath */\n  pointer-events: none;\n}\n\n.vue__time-picker .custom-icon img,\n.vue__time-picker .custom-icon svg,\n.vue__time-picker .controls img,\n.vue__time-picker .controls svg {\n  display: inline-block;\n  vertical-align: middle;\n  margin: 0;\n  border: 0;\n  outline: 0;\n  max-width: 1em;\n  height: auto;\n}\n\n.vue__time-picker .time-picker-overlay {\n  z-index: 4;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n\n.vue__time-picker .dropdown,\n.vue__time-picker-dropdown {\n  position: absolute;\n  z-index: 5;\n  top: calc(2.2em + 2px);\n  left: 0;\n  background: #fff;\n  box-shadow: 0 1px 6px rgba(0,0,0,0.15);\n  width: 10em;\n  height: 10em;\n  font-weight: normal;\n}\n\n/* Dropdown class when \"append-to-body\" is on */\n.vue__time-picker-dropdown {\n  position: fixed;\n  z-index: 100;\n}\n\n.vue__time-picker .dropdown.drop-up,\n.vue__time-picker-dropdown.drop-up {\n  top: auto;\n  bottom: calc(2.2em + 1px);\n}\n\n.vue__time-picker .dropdown .select-list,\n.vue__time-picker-dropdown .select-list {\n  width: 10em;\n  height: 10em;\n  overflow: hidden;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: stretch;\n  justify-content: space-between;\n}\n\n.vue__time-picker .dropdown .select-list:focus,\n.vue__time-picker .dropdown .select-list:active,\n.vue__time-picker-dropdown .select-list:focus,\n.vue__time-picker-dropdown .select-list:active {\n  outline: 0;\n}\n\n.vue__time-picker .dropdown ul,\n.vue__time-picker-dropdown ul {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  outline: 0;\n\n  flex: 1 1 0.00001px;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.vue__time-picker .dropdown ul.minutes,\n.vue__time-picker .dropdown ul.seconds,\n.vue__time-picker .dropdown ul.apms,\n.vue__time-picker-dropdown ul.minutes,\n.vue__time-picker-dropdown ul.seconds,\n.vue__time-picker-dropdown ul.apms {\n  border-left: 1px solid #fff;\n}\n\n.vue__time-picker .dropdown ul li,\n.vue__time-picker-dropdown ul li {\n  list-style: none;\n  text-align: center;\n  padding: 0.3em 0;\n  color: #161616;\n}\n\n.vue__time-picker .dropdown ul li:not(.hint):not([disabled]):hover,\n.vue__time-picker .dropdown ul li:not(.hint):not([disabled]):focus,\n.vue__time-picker-dropdown ul li:not(.hint):not([disabled]):hover,\n.vue__time-picker-dropdown ul li:not(.hint):not([disabled]):focus  {\n  background: rgba(0,0,0,.08);\n  color: #161616;\n  cursor: pointer;\n}\n\n.vue__time-picker .dropdown ul li:not([disabled]).active,\n.vue__time-picker .dropdown ul li:not([disabled]).active:hover,\n.vue__time-picker .dropdown ul li:not([disabled]).active:focus,\n.vue__time-picker-dropdown ul li:not([disabled]).active,\n.vue__time-picker-dropdown ul li:not([disabled]).active:hover,\n.vue__time-picker-dropdown ul li:not([disabled]).active:focus {\n  background: #41B883;\n  color: #fff;\n}\n\n.vue__time-picker .dropdown ul li[disabled],\n.vue__time-picker .dropdown ul li[disabled]:hover,\n.vue__time-picker-dropdown ul li[disabled],\n.vue__time-picker-dropdown ul li[disabled]:hover {\n  background: transparent;\n  opacity: 0.3;\n  cursor: not-allowed;\n}\n\n.vue__time-picker .dropdown .hint,\n.vue__time-picker-dropdown .hint {\n  color: #a5a5a5;\n  cursor: default;\n  font-size: 0.8em;\n}\n</style>\n"],"sourceRoot":"node_modules/vue2-timepicker/src"}]}